{"0":{
  "schema_version": "1.2.0",
  "id": "GHSA-g4g4-3pqw-8m7f",
  "modified": "2022-01-06T20:20:29Z",
  "published": "2022-01-06T22:02:01Z",
  "aliases": [
    "CVE-2021-45718"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. rollback_hook has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45718"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"1":{
  "schema_version": "1.2.0",
  "id": "GHSA-5rrv-m36h-qwf8",
  "modified": "2021-08-19T21:22:50Z",
  "published": "2021-08-25T20:44:40Z",
  "aliases": [
    "CVE-2019-16140"
  ],
  "summary": "Use-after-free in chttp",
  "details": "An issue was discovered in the chttp crate before 0.1.3 for Rust. There is a use-after-free during buffer conversion.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "chttp"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16140"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sagebind/isahc/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0016.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sagebind/chttp"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"2":{
  "schema_version": "1.2.0",
  "id": "GHSA-xm9m-2vj8-fmfr",
  "modified": "2021-08-30T21:56:39Z",
  "published": "2021-09-01T18:30:40Z",
  "aliases": [
    "CVE-2021-28029"
  ],
  "summary": "Uninitialized memory access in toodee",
  "details": "An issue was discovered in the toodee crate before 0.3.0 for Rust. The row-insertion feature allows attackers to read the contents of uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "toodee"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28029"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0028.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/antonmarsden/toodee"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"3":{
  "schema_version": "1.2.0",
  "id": "GHSA-45p7-c959-rgcm",
  "modified": "2021-08-02T21:57:02Z",
  "published": "2021-08-25T21:01:18Z",
  "aliases": [

  ],
  "summary": "Process crashes when the cell used as DepGroup is not alive",
  "details": "### Impact\n\nIt's easy to create a malign transaction which uses the dead cell as the DepGroup in the DepCells. The transaction can crash all the receiving nodes.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ckb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.40.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/nervosnetwork/ckb/security/advisories/GHSA-45p7-c959-rgcm"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"4":{
  "schema_version": "1.2.0",
  "id": "GHSA-ppqp-78xx-3r38",
  "modified": "2021-08-19T17:35:56Z",
  "published": "2021-08-25T20:53:25Z",
  "aliases": [
    "CVE-2021-26951"
  ],
  "summary": "Out of bounds write in calamine",
  "details": "An issue was discovered in the calamine crate before 0.17.0 for Rust. It allows attackers to overwrite heap-memory locations because Vec::set_len is used without proper memory claiming, and this uninitialized memory is used for a user-provided Read operation, as demonstrated by Sectors::get.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "calamine"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.17.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26951"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tafia/calamine/issues/199"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0015.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tafia/calamine"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"5":{
  "schema_version": "1.2.0",
  "id": "GHSA-qpjr-ch72-2qq4",
  "modified": "2021-08-19T21:21:17Z",
  "published": "2021-08-25T20:45:17Z",
  "aliases": [
    "CVE-2019-16881"
  ],
  "summary": "Use after free in portaudio-rs",
  "details": "An issue was discovered in the portaudio-rs crate through 0.3.1 for Rust. There is a use-after-free with resultant arbitrary code execution because of a lack of unwind safety in stream_callback and stream_finished_callback.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "portaudio-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16881"
    },
    {
      "type": "WEB",
      "url": "https://github.com/mvdnes/portaudio-rs/issues/20"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0022.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/mvdnes/portaudio-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"6":{
  "schema_version": "1.2.0",
  "id": "GHSA-jqqr-c2r2-9cvr",
  "modified": "2021-08-19T21:25:26Z",
  "published": "2021-08-25T20:42:59Z",
  "aliases": [
    "CVE-2017-18588"
  ],
  "summary": "Improper Certificate Validation in security-framework",
  "details": "An issue was discovered in the security-framework crate before 0.1.12 for Rust. Hostname verification for certificates does not occur if ClientBuilder uses custom root certificates.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "security-framework"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.12"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-18588"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sfackler/rust-security-framework/pull/27"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2017-0003.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sfackler/rust-security-framework"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-295"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"7":{
  "schema_version": "1.2.0",
  "id": "GHSA-32v7-ghpr-c8hg",
  "modified": "2021-08-18T17:45:13Z",
  "published": "2021-08-25T20:58:47Z",
  "aliases": [
    "CVE-2019-15547"
  ],
  "summary": "Mishandling of format strings in ncurses",
  "details": "An issue was discovered in the ncurses crate for Rust. There are format string issues in printw functions because C format arguments are mishandled.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ncurses"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 5.101.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15547"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/106"
    },
    {
      "type": "WEB",
      "url": "https://github.com/jeaye/ncurses-rs/issues/172"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0006.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jeaye/ncurses-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-134"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"8":{
  "schema_version": "1.2.0",
  "id": "GHSA-h7qh-3h6f-w79p",
  "modified": "2021-08-19T20:51:29Z",
  "published": "2021-08-25T20:49:41Z",
  "aliases": [
    "CVE-2020-35909"
  ],
  "summary": "Unexpected panic in multihash",
  "details": "An issue was discovered in the multihash crate before 0.11.3 for Rust. The from_slice parsing code can panic via unsanitized data from a network server.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "multihash"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.11.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35909"
    },
    {
      "type": "WEB",
      "url": "https://github.com/multiformats/rust-multihash/pull/72"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0068.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/multiformats/rust-multihash"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"9":{
  "schema_version": "1.2.0",
  "id": "GHSA-2f5j-3mhq-xv58",
  "modified": "2021-08-18T20:16:40Z",
  "published": "2021-08-25T20:58:15Z",
  "aliases": [
    "CVE-2020-36434"
  ],
  "summary": "Double free in sys-info ",
  "details": "An issue was discovered in the sys-info crate before 0.8.0 for Rust. sys_info::disk_info calls can trigger a double free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sys-info"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36434"
    },
    {
      "type": "WEB",
      "url": "https://github.com/FillZpp/sys-info-rs/issues/63"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/sys-info/RUSTSEC-2020-0100.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0100.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/FillZpp/sys-info-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"10":{
  "schema_version": "1.2.0",
  "id": "GHSA-p46c-w9m3-7qr2",
  "modified": "2022-01-07T16:14:36Z",
  "published": "2022-01-06T22:18:35Z",
  "aliases": [
    "CVE-2021-45684"
  ],
  "summary": "Use of Uninitialized Resource in flumedb.",
  "details": "An issue was discovered in the flumedb crate through 2021-01-07 for Rust. read_entry may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "flumedb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.5"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45684"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/flumedb/RUSTSEC-2021-0086.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0086.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sunrise-choir/flumedb-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"11":{
  "schema_version": "1.2.0",
  "id": "GHSA-hqc8-j86x-2764",
  "modified": "2021-08-19T21:06:47Z",
  "published": "2021-08-25T20:48:33Z",
  "aliases": [
    "CVE-2020-35893"
  ],
  "summary": "Off-by-one error in simple-slab",
  "details": "An issue was discovered in the simple-slab crate before 0.3.3 for Rust. remove() has an off-by-one error, causing memory leakage and a drop of uninitialized memory.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "simple-slab"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35893"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nathansizemore/simple-slab/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0039.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nathansizemore/simple-slab"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-193"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"12":{
  "schema_version": "1.2.0",
  "id": "GHSA-62jx-8vmh-4mcw",
  "modified": "2021-08-18T20:08:23Z",
  "published": "2021-08-25T20:58:23Z",
  "aliases": [
    "CVE-2021-38511"
  ],
  "summary": "Path trav in tar",
  "details": "An issue was discovered in the tar crate before 0.4.36 for Rust. When symlinks are present in a TAR archive, extraction can create arbitrary directories via .. traversal.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tar"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "tar::Archive::unpack"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.36"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38511"
    },
    {
      "type": "WEB",
      "url": "https://github.com/alexcrichton/tar-rs/issues/238"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tar/RUSTSEC-2021-0080.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0080.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexcrichton/tar-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-22"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"13":{
  "schema_version": "1.2.0",
  "id": "GHSA-f3mq-99jr-ww4r",
  "modified": "2021-08-24T18:18:53Z",
  "published": "2021-08-25T20:56:16Z",
  "aliases": [
    "CVE-2020-36467"
  ],
  "summary": "Multiple mutable pointers in cgc",
  "details": "Affected versions of this crate have the following issues:\n\n1. `Ptr` implements `Send` and `Sync` for all types, this can lead to data\n   races by sending non-thread safe types across threads.\n\n2. `Ptr::get` violates mutable alias rules by returning multiple mutable\n   references to the same object.\n\n3. `Ptr::write` uses non-atomic writes to the underlying pointer. This means\n   that when used across threads it can lead to data races.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cgc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.4.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36467"
    },
    {
      "type": "WEB",
      "url": "https://github.com/playXE/cgc/issues/5"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0148.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/playXE/cgc"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-657"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"14":{
  "schema_version": "1.2.0",
  "id": "GHSA-qgm6-9472-pwq7",
  "modified": "2022-02-08T21:34:31Z",
  "published": "2021-08-25T20:52:19Z",
  "aliases": [
    "CVE-2021-23840"
  ],
  "summary": "Integer Overflow in openssl-src",
  "details": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl-src"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "111.14"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23840"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=6a51b9e1d0cf0bf8515f7201b68fb0a3482b3dc1"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=9b1129239f3ebb1d1c98ce9ed41d5c9476c47cb2"
    },
    {
      "type": "WEB",
      "url": "https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44846"
    },
    {
      "type": "WEB",
      "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10366"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r58af02e294bd07f487e2c64ffc0a29b837db5600e33b6e698b9d696b@%3Cissues.bookkeeper.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/rf4c02775860db415b4955778a131c2795223f61cb8c6a450893651e4@%3Cissues.bookkeeper.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0057.html"
    },
    {
      "type": "WEB",
      "url": "https://security.gentoo.org/glsa/202103-03"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20210219-0009/"
    },
    {
      "type": "WEB",
      "url": "https://www.debian.org/security/2021/dsa-4855"
    },
    {
      "type": "WEB",
      "url": "https://www.openssl.org/news/secadv/20210216.txt"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpujan2022.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-03"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-09"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-10"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexcrichton/openssl-src-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"15":{
  "schema_version": "1.2.0",
  "id": "GHSA-69fv-gw6g-8ccg",
  "modified": "2021-08-19T21:24:28Z",
  "published": "2021-08-25T20:43:26Z",
  "aliases": [
    "CVE-2018-20998"
  ],
  "summary": "Potential memory corruption in arrayfire",
  "details": "An issue was discovered in the arrayfire crate before 3.6.0 for Rust. Addition of the repr() attribute to an enum is mishandled, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "arrayfire"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "3.6.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20998"
    },
    {
      "type": "WEB",
      "url": "https://github.com/arrayfire/arrayfire-rust/pull/177"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0011.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/arrayfire/arrayfire-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"16":{
  "schema_version": "1.2.0",
  "id": "GHSA-pfjq-935c-4895",
  "modified": "2021-08-18T23:41:25Z",
  "published": "2021-08-25T21:00:37Z",
  "aliases": [

  ],
  "summary": "Data races in v9",
  "details": "Affected versions of this crate unconditionally implement `Sync` for `SyncRef<T>`.\nThis definition allows data races if `&T` is accessible through `&SyncRef`.\n\n`SyncRef<T>` derives `Clone` and `Debug`, and the default implementations of those traits access `&T` by invoking `T::clone()` & `T::fmt()`. It is possible to create data races & undefined behavior by concurrently invoking `SyncRef<T>::clone()` or `SyncRef<T>::fmt()` from multiple threads with `T: !Sync`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "v9"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.43"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/purpleposeidon/v9/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0127.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"17":{
  "schema_version": "1.2.0",
  "id": "GHSA-qc36-q22q-cjw3",
  "modified": "2021-08-18T18:52:26Z",
  "published": "2021-07-12T17:03:27Z",
  "aliases": [
    "CVE-2021-38189"
  ],
  "summary": "SMTP command injection in lettre",
  "details": "### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https://rustsec.org/advisories/RUSTSEC-2021-0069.html)\n\n\n\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lettre"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "lettre::smtp::SmtpTransport::send",
          "lettre::transport::smtp::SmtpTransport::send",
          "lettre::transport::smtp::SmtpTransport::send_raw"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.7.0","<": "0.9.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/lettre/lettre/security/advisories/GHSA-qc36-q22q-cjw3"
    },
    {
      "type": "WEB",
      "url": "https://github.com/lettre/lettre/pull/627/commits/93458d01fed0ec81c0e7b4e98e6f35961356fae2"
    },
    {
      "type": "WEB",
      "url": "https://github.com/lettre/lettre/commit/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0069.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/lettre/lettre"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-147"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"18":{
  "schema_version": "1.2.0",
  "id": "GHSA-3h87-v52r-p9rg",
  "modified": "2021-08-19T17:17:20Z",
  "published": "2021-08-25T20:54:08Z",
  "aliases": [
    "CVE-2021-29941"
  ],
  "summary": "Out of bounds write in reorder",
  "details": "An issue was discovered in the reorder crate through 2021-02-24 for Rust. swap_index has an out-of-bounds write if an iterator returns a len() that is too small.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "reorder"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.1.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29941"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tiby312/reorder/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0050.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tiby312/reorder"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"19":{
  "schema_version": "1.2.0",
  "id": "GHSA-4vhw-4rw7-jfpv",
  "modified": "2021-08-19T20:56:07Z",
  "published": "2021-08-25T20:49:02Z",
  "aliases": [
    "CVE-2020-35883"
  ],
  "summary": "Path traversal in mozwire",
  "details": "An issue was discovered in the mozwire crate through 2020-08-18 for Rust. A ../ directory-traversal situation allows overwriting local files that have .conf at the end of the filename.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "mozwire"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35883"
    },
    {
      "type": "WEB",
      "url": "https://github.com/NilsIrl/MozWire/issues/14"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0030.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/NilsIrl/MozWire/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-22"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"20":{
  "schema_version": "1.2.0",
  "id": "GHSA-mxv6-q98x-h958",
  "modified": "2021-08-24T18:00:46Z",
  "published": "2021-08-25T20:56:07Z",
  "aliases": [
    "CVE-2020-36460"
  ],
  "summary": "Data races in model",
  "details": "`Shared` data structure in `model` crate implements `Send` and `Sync` traits regardless of the inner type.\nThis allows safe Rust code to trigger a data race, which is undefined behavior in Rust.\n\nUsers are advised to treat `Shared` as an unsafe type.\nIt should not be used outside of the testing context,\nand care must be taken so that the testing code does not have a data race\nbesides a race condition that is expected to be caught by the test.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "model"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36460"
    },
    {
      "type": "WEB",
      "url": "https://github.com/spacejam/model/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0140.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/spacejam/model"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-843"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"21":{
  "schema_version": "1.2.0",
  "id": "GHSA-rfgg-vccr-m46m",
  "modified": "2021-08-19T21:20:37Z",
  "published": "2021-08-25T20:45:58Z",
  "aliases": [
    "CVE-2020-25794"
  ],
  "summary": "Missing release of memory in sized-chunks",
  "details": "An issue was discovered in the sized-chunks crate through 0.6.2 for Rust. In the Chunk implementation, clone can have a memory-safety issue upon a panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sized-chunks"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25794"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/sized-chunks/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/sized-chunks"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-401"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"22":{
  "schema_version": "1.2.0",
  "id": "GHSA-c3cw-c387-pj65",
  "modified": "2021-08-19T21:24:34Z",
  "published": "2021-08-25T20:43:21Z",
  "aliases": [
    "CVE-2018-20996"
  ],
  "summary": "Double free in crossbeam",
  "details": "An issue was discovered in the crossbeam crate before 0.4.1 for Rust. There is a double free because of destructor mishandling.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crossbeam"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20996"
    },
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam-epoch/issues/82"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0009.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/crossbeam-rs/crossbeam-epoch"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"23":{
  "schema_version": "1.2.0",
  "id": "GHSA-r626-fc64-3q28",
  "modified": "2021-08-24T19:15:13Z",
  "published": "2021-08-25T20:59:06Z",
  "aliases": [
    "CVE-2020-36441"
  ],
  "summary": "Data race in abox",
  "details": "An issue was discovered in the abox crate before 0.4.1 for Rust. \n\nAffected versions of this crate implements `Send`/`Sync` for `AtomicBox<T>` without requiring `T: Send`/`T: Sync`. This allows to create data races to `T: !Sync` and send `T: !Send` to another thread.\n\nSuch behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race).\n\nThe flaw was corrected in commit 34c2b9e by adding trait bound `T: Send` to `Send` impl for `AtomicBox<T>` and trait bound `T: Sync` to `Sync` impl for `AtomicBox<T>`.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "abox"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36441"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SonicFrog/abox/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SonicFrog/abox/pull/2"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SonicFrog/abox/commit/34c2b9e"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0121.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/SonicFrog/abox"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"24":{
  "schema_version": "1.2.0",
  "id": "GHSA-34p9-f4q3-c4r7",
  "modified": "2021-08-19T21:25:06Z",
  "published": "2021-08-25T20:43:11Z",
  "aliases": [
    "CVE-2016-10931"
  ],
  "summary": "Improper Certificate Validation in openssl",
  "details": "An issue was discovered in the openssl crate before 0.9.0 for Rust. There is an SSL/TLS man-in-the-middle vulnerability because certificate verification is off by default and there is no API for hostname verification.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-10931"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sfackler/rust-openssl/releases/tag/v0.9.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2016-0001.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sfackler/rust-openssl"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-295"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"25":{
  "schema_version": "1.2.0",
  "id": "GHSA-pqqp-xmhj-wgcw",
  "modified": "2021-08-10T17:02:12Z",
  "published": "2021-08-25T21:01:15Z",
  "aliases": [
    "CVE-2021-32810"
  ],
  "summary": "Data race in crossbeam-deque",
  "details": "### Impact\n\nIn the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug.\n\nCrates using `Stealer::steal`, `Stealer::steal_batch`, or `Stealer::steal_batch_and_pop` are affected by this issue.\n\n### Patches\n\nThis has been fixed in crossbeam-deque 0.8.1 and 0.7.4.\n\n### Credits\n\nThis issue was reported and fixed by Maor Kleinberger.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crossbeam-deque"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crossbeam-deque"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.8.0","<": "0.8.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-pqqp-xmhj-wgcw"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32810"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7EZILHZDRGDPOBQ4KTW3E5PPMKLHGH5N/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AWHNNBJCU4EHA2X5ZAMJMGLDUYS5FEPP/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AYBSLIYFANZLCYWOGTIYZUM26TJRH7WU/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CY5T3FCE4MUYSPKEWICLVJBBODGJ6SZE/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EW5B2VTDVMJ6B3DA4VLMAMW2GGDCE2BK/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LCIBFGBSL3JSVJQTNEDEIMZGZF23N2KE/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OCLMH7B7B2MF55ET4NQNPH7JWISFX4RT/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RRPKBRXCRNGNMVFQPFD4LM3QKPEMBQQR/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TFUBWBYCPSSXTJGEAQ67CJUNQJBOCM26/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U3LSN3B43TJSFIOB3QLPBI3RCHRU5BLO/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VQZIEJQBV3S72BHD5GKJQF3NVYNRV5CF/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WGB2H35CTZDHOV3VLC5BM6VFGURLLVRP/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XFBZWCLG7AGLJO4A7K5IMJVPLSWZ5TJP/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZQDIBB7VR3ER52FMSMNJPAWNDO5SITCE/"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0093.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/crossbeam-rs/crossbeam"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"26":{
  "schema_version": "1.2.0",
  "id": "GHSA-4873-36h9-wv49",
  "modified": "2021-09-17T20:05:58Z",
  "published": "2021-09-20T19:54:16Z",
  "aliases": [
    "CVE-2021-39218"
  ],
  "summary": "Out-of-bounds read/write and invalid free with `externref`s and GC safepoints in Wasmtime ",
  "details": "### Impact\n\nThere was an invalid free and out-of-bounds read and write bug when running Wasm that uses `externref`s in Wasmtime.\n\nTo trigger this bug, Wasmtime needs to be running Wasm that uses `externref`s, the host creates non-null `externrefs`, Wasmtime performs a garbage collection (GC), and there has to be a Wasm frame on the stack that is at a GC safepoint where\n\n* there are no live references at this safepoint, and\n* there is a safepoint with live references earlier in this frame's function.\n\nUnder this scenario, Wasmtime would incorrectly use the GC stack map for the safepoint from earlier in the function instead of the empty safepoint. This would result in Wasmtime treating arbitrary stack slots as `externref`s that needed to be rooted for GC. At the *next* GC, it would be determined that nothing was referencing these bogus `externref`s (because nothing could ever reference them, because they are not really `externref`s) and then Wasmtime would deallocate them and run `<ExternRef as Drop>::drop` on them. This results in a free of memory that is not necessarily on the heap (and shouldn't be freed at this moment even if it was), as well as potential out-of-bounds reads and writes.\n\nEven though support for `externref`s (via the reference types proposal) is enabled by default, unless you are creating non-null `externref`s in your host code or explicitly triggering GCs, you cannot be affected by this bug.\n\nWe have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare.\n\n### Patches\n\nThis bug has been patched and users should upgrade to Wasmtime version 0.30.0.\n\nAdditionally, we have updated [our primary `externref` fuzz target](https://github.com/bytecodealliance/wasmtime/blob/37c094faf53f1b356aab3c79d451395e4f7edb34/fuzz/fuzz_targets/table_ops.rs) such that it better exercises these code paths and we can have greater confidence in their correctness going forward.\n\n### Workarounds\n\nIf you cannot upgrade Wasmtime at this time, you can avoid this bug by disabling the reference types proposal by passing `false` to [`wasmtime::Config::wasm_reference_types`](https://docs.rs/wasmtime/0.29.0/wasmtime/struct.Config.html#method.wasm_reference_types)\n\n### References\n\n* [The Wasm reference types proposal, which introduces `externref`](https://github.com/WebAssembly/reference-types/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime)\n* Open an issue in [the `bytecodealliance/wasmtime` repository](https://github.com/bytecodealliance/wasmtime/)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.30.0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.29.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39218"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/398a73f0dd862dbe703212ebae8e34036a18c11c"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/wasmtime"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/wasmtime"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125",
      "CWE-590",
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"27":{
  "schema_version": "1.2.0",
  "id": "GHSA-rm4w-6696-r77p",
  "modified": "2021-08-19T17:34:37Z",
  "published": "2021-08-25T20:52:14Z",
  "aliases": [
    "CVE-2021-27376"
  ],
  "summary": "nb-connect invalidly assumes the memory layout of std::net::SocketAddr",
  "details": "An issue was discovered in the nb-connect crate before 1.0.3 for Rust. It may have invalid memory access for certain versions of the standard library because it relies on a direct cast of std::net::SocketAddrV4 and std::net::SocketAddrV6 data structures.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nb-connect"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.0.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27376"
    },
    {
      "type": "WEB",
      "url": "https://github.com/smol-rs/nb-connect/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0021.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/smol-rs/nb-connect"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"28":{
  "schema_version": "1.2.0",
  "id": "GHSA-8q2v-67v7-6vc6",
  "modified": "2021-08-19T21:07:49Z",
  "published": "2021-08-25T20:48:07Z",
  "aliases": [
    "CVE-2020-35882"
  ],
  "summary": "Data races in rocket",
  "details": "An issue was discovered in the rocket crate before 0.4.5 for Rust. LocalRequest::clone creates more than one mutable references to the same object, possibly causing a data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rocket"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.5"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35882"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SergioBenitez/Rocket/issues/1312"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0028.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/SergioBenitez/Rocket"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"29":{
  "schema_version": "1.2.0",
  "id": "GHSA-9783-42pm-x5jq",
  "modified": "2022-01-07T17:33:33Z",
  "published": "2022-01-06T22:13:58Z",
  "aliases": [
    "CVE-2021-45686"
  ],
  "summary": "Use of Uninitialized Resource in csv-sniffer.",
  "details": "An issue was discovered in the csv-sniffer crate through 2021-01-05 for Rust. preamble_skipcount may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "csv-sniffer"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45686"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/csv-sniffer/RUSTSEC-2021-0088.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0088.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jblondin/csv-sniffer"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"30":{
  "schema_version": "1.2.0",
  "id": "GHSA-x3v2-fgr6-3wmm",
  "modified": "2021-08-19T18:40:57Z",
  "published": "2021-08-25T20:53:03Z",
  "aliases": [
    "CVE-2021-25908"
  ],
  "summary": "Double free in fil-ocl",
  "details": "An issue was discovered in the fil-ocl crate through 2021-01-04 for Rust. From<EventList> can lead to a double free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "fil-ocl"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.12.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25908"
    },
    {
      "type": "WEB",
      "url": "https://github.com/cogciprocate/ocl/issues/194"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0011.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/filecoin-project/fil-ocl"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"31":{
  "schema_version": "1.2.0",
  "id": "GHSA-m57c-4vvx-gjgq",
  "modified": "2021-08-18T17:45:17Z",
  "published": "2021-08-25T20:58:27Z",
  "aliases": [
    "CVE-2019-15546"
  ],
  "summary": "Format string vulnerabilities in pancurses",
  "details": "An issue was discovered in the pancurses crate through 0.16.1 for Rust. printw and mvprintw have format string vulnerabilities.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pancurses"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.16.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15546"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/106"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ihalila/pancurses/issues/66"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0005.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ihalila/pancurses"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-134"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"32":{
  "schema_version": "1.2.0",
  "id": "GHSA-7qcc-g2m9-8533",
  "modified": "2021-08-19T17:22:29Z",
  "published": "2021-08-25T20:53:53Z",
  "aliases": [
    "CVE-2021-28307"
  ],
  "summary": "Null pointer deference in fltk",
  "details": "An issue was discovered in the fltk crate before 0.15.3 for Rust. There is a NULL pointer dereference during attempted use of a non-raster image for a window icon.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "fltk"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.15.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28307"
    },
    {
      "type": "WEB",
      "url": "https://github.com/MoAlyousef/fltk-rs/issues/519"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/MoAlyousef/fltk-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"33":{
  "schema_version": "1.2.0",
  "id": "GHSA-76w9-p8mg-j927",
  "modified": "2022-01-07T18:28:40Z",
  "published": "2022-01-06T22:07:14Z",
  "aliases": [
    "CVE-2021-45707"
  ],
  "summary": "Out-of-bounds Write in nix",
  "details": "An issue was discovered in the nix crate before 0.20.2, 0.21.x before 0.21.2, and 0.22.x before 0.22.2 for Rust. unistd::getgrouplist has an out-of-bounds write if a user is in more than 16 /etc/groups groups.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nix"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.20.2"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nix"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.21.0","<": "0.21.2"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nix"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.22.0","<": "0.22.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45707"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/nix/RUSTSEC-2021-0119.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0119.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nix-rust/nix"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"34":{
  "schema_version": "1.2.0",
  "id": "GHSA-rh89-x75f-rh3c",
  "modified": "2021-08-19T21:23:41Z",
  "published": "2021-08-25T20:44:00Z",
  "aliases": [
    "CVE-2019-15553"
  ],
  "summary": "Exposure of uninitialized memory in memoffset",
  "details": "An issue was discovered in the memoffset crate before 0.5.0 for Rust. offset_of and span_of can cause exposure of uninitialized memory.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "memoffset"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15553"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0011.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Gilnaa/memoffset"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"35":{
  "schema_version": "1.2.0",
  "id": "GHSA-2969-8hh9-57jc",
  "modified": "2022-01-07T17:53:54Z",
  "published": "2022-01-06T22:09:49Z",
  "aliases": [
    "CVE-2021-45699"
  ],
  "summary": "Allocation of Resources Without Limits or Throttling in ckb",
  "details": "An issue was discovered in the ckb crate before 0.40.0 for Rust. Remote attackers may be able to conduct a 51% attack against the Nervos CKB blockchain by triggering an inability to allocate memory for the misbehavior HashMap.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ckb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.40.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45699"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ckb/RUSTSEC-2021-0108.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0108.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nervosnetwork/ckb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-770"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"36":{
  "schema_version": "1.2.0",
  "id": "GHSA-c3m3-c39q-pv23",
  "modified": "2021-08-19T21:23:28Z",
  "published": "2021-08-25T20:44:10Z",
  "aliases": [
    "CVE-2019-15543"
  ],
  "summary": "Out of bounds write in slice-deque",
  "details": "An issue was discovered in the slice-deque crate before 0.2.0 for Rust. There is memory corruption in certain allocation cases.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "slice-deque"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15543"
    },
    {
      "type": "WEB",
      "url": "https://github.com/gnzlbg/slice_deque/issues/57"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0002.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gnzlbg/slice_deque"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"37":{
  "schema_version": "1.2.0",
  "id": "GHSA-3jc5-5hc5-33gj",
  "modified": "2021-08-19T18:51:18Z",
  "published": "2021-08-25T20:50:49Z",
  "aliases": [
    "CVE-2020-36208"
  ],
  "summary": "Data races in conquer-once",
  "details": "An issue was discovered in the conquer-once crate before 0.3.2 for Rust. Thread crossing can occur for a non-Send but Sync type, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "conquer-once"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36208"
    },
    {
      "type": "WEB",
      "url": "https://github.com/oliver-giersch/conquer-once/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0101.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/oliver-giersch/conquer-once"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"38":{
  "schema_version": "1.2.0",
  "id": "GHSA-wr55-mf5c-hhwm",
  "modified": "2021-08-19T18:52:13Z",
  "published": "2021-08-25T20:50:44Z",
  "aliases": [
    "CVE-2020-36209"
  ],
  "summary": "Data races in late-static",
  "details": "An issue was discovered in the late-static crate before 0.4.0 for Rust. Because Sync is implemented for LateStatic with T: Send, a data race can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "late-static"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36209"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Richard-W/late-static/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0102.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Richard-W/late-static"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"39":{
  "schema_version": "1.2.0",
  "id": "GHSA-gm68-g349-gxgg",
  "modified": "2022-01-28T22:20:30Z",
  "published": "2022-01-28T22:35:16Z",
  "aliases": [
    "CVE-2021-39480"
  ],
  "summary": "Denial of service in bingrep",
  "details": "Bingrep v0.8.5 was discovered to contain a memory allocation failure which can cause a Denial of Service (DoS).",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bingrep"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.8.5"
            }
          ]
        }
      ],
      "versions": [
        "0.8.5"
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39480"
    },
    {
      "type": "WEB",
      "url": "https://github.com/m4b/bingrep/issues/30"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/m4b/bingrep"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-770"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"40":{
  "schema_version": "1.2.0",
  "id": "GHSA-rxr4-x558-x7hw",
  "modified": "2021-08-19T21:25:34Z",
  "published": "2021-08-25T20:42:54Z",
  "aliases": [
    "CVE-2018-20991"
  ],
  "summary": "Double free in smallvec",
  "details": "An issue was discovered in the smallvec crate before 0.6.3 for Rust. The Iterator implementation mishandles destructors, leading to a double free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "smallvec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20991"
    },
    {
      "type": "WEB",
      "url": "https://github.com/servo/rust-smallvec/issues/96"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0003.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/servo/rust-smallvec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"41":{
  "schema_version": "1.2.0",
  "id": "GHSA-39wr-f4ff-xm6p",
  "modified": "2021-08-19T21:19:50Z",
  "published": "2021-08-25T20:46:41Z",
  "aliases": [
    "CVE-2019-25007"
  ],
  "summary": "Incorrect implementation in streebog",
  "details": "An issue was discovered in the streebog crate before 0.8.0 for Rust. The Streebog hash function can cause a panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "streebog"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25007"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustCrypto/hashes/pull/91"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0030.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustCrypto/hashes/tree/master/streebog"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-617"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"42":{
  "schema_version": "1.2.0",
  "id": "GHSA-vc2p-r46x-m3vx",
  "modified": "2021-08-18T20:59:57Z",
  "published": "2021-08-25T20:56:48Z",
  "aliases": [
    "CVE-2020-28247"
  ],
  "summary": "Argument injection in lettre",
  "details": "### Impact\n\nAffected versions of lettre allowed argument injection to the sendmail command. It was possible, using forged to addresses, to pass arbitrary arguments to the sendmail executable.\n\nDepending on the implementation (original sendmail, postfix, exim, etc.) it could be possible in some cases to write email data into abritrary files (using sendmail's logging features).\n\n*NOTE*: This vulnerability only affects the sendmail transport. Others, including smtp, are not affected.\n\n### Fix\n\nThe flaw is corrected by modifying the executed command to stop parsing arguments before passing the destination addresses.\n\n### References\n\n* [RUSTSEC-2020-0069](https://rustsec.org/advisories/RUSTSEC-2020-0069.html)\n* [CVE-2020-28247](https://nvd.nist.gov/vuln/detail/CVE-2020-28247)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lettre"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "lettre::sendmail::SendmailTransport::send",
          "lettre::transport::sendmail::SendmailTransport::send",
          "lettre::transport::sendmail::SendmailTransport::send_raw"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.9.0","<": "0.9.5"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lettre"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "lettre::sendmail::SendmailTransport::send",
          "lettre::transport::sendmail::SendmailTransport::send",
          "lettre::transport::sendmail::SendmailTransport::send_raw"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.8.0","<": "0.8.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lettre"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "lettre::sendmail::SendmailTransport::send",
          "lettre::transport::sendmail::SendmailTransport::send",
          "lettre::transport::sendmail::SendmailTransport::send_raw"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28247"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/pull/478/files"
    },
    {
      "type": "WEB",
      "url": "https://github.com/lettre/lettre/pull/508/commits/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0069.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/lettre/lettre"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-77"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"43":{
  "schema_version": "1.2.0",
  "id": "GHSA-88xq-w8cq-xfg7",
  "modified": "2022-02-16T22:35:03Z",
  "published": "2022-02-16T22:35:03Z",
  "aliases": [
    "CVE-2022-23636"
  ],
  "summary": "Invalid drop of partially-initialized instances in the pooling instance allocator for modules with defined `externref` globals ",
  "details": "### Impact\n\nThere exists a bug in the pooling instance allocator in Wasmtime's runtime where a failure to instantiate an instance for a module that defines an `externref` global will result in an invalid drop of a `VMExternRef` via an uninitialized pointer.\n\nAs instance slots may be reused between consecutive instantiations, the value of the uninitialized pointer may be from a previous instantiation and therefore under the control of an attacker via a module's initial values for its globals. If the attacker can somehow determine an address under their control inside the mapped memory representing the instance pool, it is possible to trick the runtime to call `drop_in_place` on a trait object under the attacker's control and therefore cause remote code execution.\n\nExploiting the bug to cause remote code execution would be very difficult as attackers cannot determine the addresses of globals from code executing within the WebAssembly VM and the memory space for the instance pool cannot be statically determined. Operating system mitigations, such as [address space layout randomization](https://en.wikipedia.org/wiki/Address_space_layout_randomization), would additionally increase the difficulty for attackers to determine useful executable code to target with an exploit. It is also very unlikely that attackers will be able to directly influence the conditions that trigger the bug as described below.\n\nWhen the conditions to trigger the bug are met, however, it is much easier to exploit this bug to cause a denial of service by crashing the host with an invalid memory read.\n\nThe following engine configuration (via [Config](https://docs.rs/wasmtime/0.34.0/wasmtime/struct.Config.html)) is required to be impacted by this bug:\n\n* support for the reference types proposal must be enabled (this is the default for `Config`).\n* a pooling allocation strategy must be configured via [Config::allocation_strategy](https://docs.rs/wasmtime/0.34.0/wasmtime/struct.Config.html#method.allocation_strategy), which is **not the default allocation strategy**.\n\nA module must be instantiated with **all the following characteristics**:\n\n* The module defines at least one table or memory.\n* The module defines at least one `externref` global.\n\nDuring instantiation, **one of the following** must occur to cause the instantiation to fail:\n\n* a call to `mprotect` or `VirtualAlloc` fails (e.g. out-of-memory conditions).\n* a resource limiter was configured in the associated `Store` (via [Store::limiter](https://docs.rs/wasmtime/0.34.0/wasmtime/struct.Store.html#method.limiter) or [Store::limiter_async](https://docs.rs/wasmtime/0.34.0/wasmtime/struct.Store.html#method.limiter_async)) and the limiter returns `false` from the initial call to `memory_growing` or `table_growing`. **Stores do not have a resource limiter set by default**.\n\nThis results in a partially-initialized instance being dropped and that attempts to drop the uninitialized `VMExternRef` representing the defined `externref` global.\n\nWe have reason to believe that the effective impact of this bug is relatively small because the usage of `externref` is still uncommon and without a resource limiter configured on the `Store`, which is not the default configuration, it is only possible to trigger the bug from an error returned by `mprotect` or `VirtualAlloc`.\n\nNote that on Linux with the `uffd` feature enabled, it is only possible to trigger the bug from a resource limiter as the call to `mprotect` is skipped; if no resource limiter is used, then this configuration is not vulnerable.\n\n### Patches\n\nThe bug has been fixed in 0.34.1 and 0.33.1; users are encouraged to upgrade as soon as possible.\n\n### Workarounds\n\nIf it is not possible to upgrade to 0.34.1 or 0.33.1 of the `wasmtime` crate, it is recommend that support for the reference types proposal be disabled by passing `false` to [Config::wasm_reference_types](https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_reference_types).\n\nDoing so will prevent modules that use `externref` from being loaded entirely.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime)\n* Open an issue in [the bytecodealliance/wasmtime repository](https://github.com/bytecodealliance/wasmtime/)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.34.0","<": "0.34.1"
            }
          ]
        }
      ],
      "versions": [
        "0.34.0"
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.33.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-88xq-w8cq-xfg7"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23636"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/886ecc562040bef61faf19438c22285c2d62403a"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/wasmtime"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-824"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"44":{
  "schema_version": "1.2.0",
  "id": "GHSA-2vx6-fcw6-hpr6",
  "modified": "2021-08-19T20:50:20Z",
  "published": "2021-08-25T20:49:52Z",
  "aliases": [
    "CVE-2020-35917"
  ],
  "summary": "Reference counting error in pyo3",
  "details": "An issue was discovered in the pyo3 crate before 0.12.4 for Rust. There is a reference-counting error and use-after-free in From<Py<T>>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pyo3"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.12.0","<": "0.12.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35917"
    },
    {
      "type": "WEB",
      "url": "https://github.com/PyO3/pyo3/pull/1297"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0074.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/PyO3/pyo3"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"45":{
  "schema_version": "1.2.0",
  "id": "GHSA-h6gg-fvf5-qgwf",
  "modified": "2021-08-24T18:04:01Z",
  "published": "2021-08-25T20:55:41Z",
  "withdrawn": "2021-08-24T18:04:01Z",
  "aliases": [

  ],
  "summary": "Data races in generator",
  "details": "The `Generator` type is an iterable which uses a generator function that yields\nvalues. In affected versions of the crate, the provided function yielding values\nhad no `Send` bounds despite the `Generator` itself implementing `Send`.\n\nThe generator function lacking a `Send` bound means that types that are\ndangerous to send across threads such as `Rc` could be sent as part of a\ngenerator, potentially leading to data races.\n\nThis flaw was fixed in commit [`f7d120a3b`](https://github.com/Xudong-Huang/generator-rs/commit/f7d120a3b724d06a7b623d0a4306acf8f78cb4f0)\nby enforcing that the generator function be bound by `Send`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generator"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/issues/27"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/commit/f7d120a3b724d06a7b623d0a4306acf8f78cb4f0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0151.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Xudong-Huang/generator-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"46":{
  "schema_version": "1.2.0",
  "id": "GHSA-2wc6-2rcj-8v76",
  "modified": "2021-08-05T21:10:47Z",
  "published": "2021-08-25T21:00:41Z",
  "aliases": [
    "CVE-2017-1000168"
  ],
  "summary": "scalarmult() vulnerable to degenerate public keys",
  "details": "The `scalarmult()` function included in previous versions of this crate\naccepted all-zero public keys, for which the resulting Diffie-Hellman shared\nsecret will always be zero regardless of the private key used.\n\nThis issue was fixed by checking for this class of keys and rejecting them\nif they are used.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sodiumoxide"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.0.14"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000168"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dnaq/sodiumoxide/issues/154"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sodiumoxide/sodiumoxide/commit/24c7a5550807ac8a09648b5878f19d14c3a69135"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2017-0001.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sodiumoxide/sodiumoxide"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-1240"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"47":{
  "schema_version": "1.2.0",
  "id": "GHSA-q3cc-7p7g-392c",
  "modified": "2021-08-19T21:08:56Z",
  "published": "2021-08-25T20:47:43Z",
  "aliases": [
    "CVE-2020-35873"
  ],
  "summary": "Use after free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated because sessions.rs has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35873"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/ac30e169ae51b262bc8cf7026469851ce39b23c6"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"48":{
  "schema_version": "1.2.0",
  "id": "GHSA-fhvc-gp6c-h2wx",
  "modified": "2021-08-19T17:35:31Z",
  "published": "2021-08-25T20:52:23Z",
  "aliases": [
    "CVE-2021-26953"
  ],
  "summary": "Read on uninitialized buffer in postscript",
  "details": "An issue was discovered in the postscript crate before 0.14.0 for Rust. It might allow attackers to obtain sensitive information from uninitialized memory locations via a user-provided Read implementation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "postscript"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.14.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26953"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodoni/postscript/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0017.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodoni/postscript"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"49":{
  "schema_version": "1.2.0",
  "id": "GHSA-m296-j53x-xv95",
  "modified": "2021-08-18T23:36:06Z",
  "published": "2021-08-25T21:00:32Z",
  "aliases": [

  ],
  "summary": "Data races in tiny_future",
  "details": "`tiny_future` contains a light-weight implementation of `Future`s. The `Future`\ntype it has lacked bound on its `Send` and `Sync` traits.\n\nThis allows for a bug where non-thread safe types such as `Cell` can be used in\n`Future`s and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `c791919` by adding trait bounds to `Future`'s\n`Send` and `Sync`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tiny_future"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/KizzyCode/tiny_future/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/KizzyCode/tiny_future/commit/7ab8a264980d23c2ed64e72f4636f38b7381eb39"
    },
    {
      "type": "WEB",
      "url": "https://github.com/KizzyCode/tiny_future/commit/c7919199a0f6d1ce0e3c33499d1b37f862c990e4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0118.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/KizzyCode/tiny_future"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"50":{
  "schema_version": "1.2.0",
  "id": "GHSA-8h4j-vm3r-vcq3",
  "modified": "2021-08-19T21:08:47Z",
  "published": "2021-08-25T20:47:48Z",
  "aliases": [
    "CVE-2020-35870"
  ],
  "summary": "Use after free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via an Auxdata API use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35870"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"51":{
  "schema_version": "1.2.0",
  "id": "GHSA-gq4h-f254-7cw9",
  "modified": "2021-08-18T23:35:09Z",
  "published": "2021-08-25T21:00:34Z",
  "aliases": [

  ],
  "summary": "Data races in ticketed_lock",
  "details": "Affected versions of this crate unconditionally implemented `Send` for `ReadTicket<T>` & `WriteTicket<T>`.\nThis allows to send non-Send `T` to other threads.\n\nThis can allows creating data races by cloning types with internal mutability and sending them to other threads (as `T` of `ReadTicket<T>`/`WriteTicket<T>`). Such data races can cause memory corruption or other undefined behavior.\n\nThe flaw was corrected in commit a986a93 by adding `T: Send` bounds to `Send` impls of `ReadTicket<T>`/`WriteTicket<T>`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ticketed_lock"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/kvark/ticketed_lock/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://github.com/kvark/ticketed_lock/pull/8/commits/a986a9335d591fa5c826157d1674d47aa525357f"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0119.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"52":{
  "schema_version": "1.2.0",
  "id": "GHSA-g83m-67wh-whpw",
  "modified": "2021-08-18T20:31:24Z",
  "published": "2021-08-25T20:57:10Z",
  "aliases": [
    "CVE-2020-36449"
  ],
  "summary": "Command injection in kekbit",
  "details": "An issue was discovered in the kekbit crate before 0.3.4 for Rust. For ShmWriter<H>, Send is implemented without requiring H: Send.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "kekbit"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36449"
    },
    {
      "type": "WEB",
      "url": "https://github.com/motoras/kekbit/issues/34"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0129.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/motoras/kekbit"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"53":{
  "schema_version": "1.2.0",
  "id": "GHSA-p24j-h477-76q3",
  "modified": "2021-09-09T16:57:53Z",
  "published": "2021-08-25T21:01:37Z",
  "aliases": [
    "CVE-2021-36753"
  ],
  "summary": "Uncontrolled Search Path Element in sharkdp/bat",
  "details": "bat on windows before 0.18.2 executes programs named less.exe from the current working directory. This can lead to unintended code execution.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bat"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.18.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36753"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sharkdp/bat/pull/1724"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sharkdp/bat/commit/bf2b2df9c9e218e35e5a38ce3d03cffb7c363956"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sharkdp/bat/releases/tag/v0.18.2"
    },
    {
      "type": "WEB",
      "url": "https://vuln.ryotak.me/advisories/53"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sharkdp/bat"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-427"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"54":{
  "schema_version": "1.2.0",
  "id": "GHSA-7cjc-hvxf-gqh7",
  "modified": "2021-08-19T21:18:16Z",
  "published": "2021-08-25T20:47:39Z",
  "aliases": [
    "CVE-2020-35862"
  ],
  "summary": "Use after free and double free in bitvec",
  "details": "An issue was discovered in the bitvec crate before 0.17.4 for Rust. BitVec to BitBox conversion leads to a use-after-free or double free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bitvec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.17.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35862"
    },
    {
      "type": "WEB",
      "url": "https://github.com/myrrlyn/bitvec/issues/55"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0007.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/myrrlyn/bitvec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415",
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"55":{
  "schema_version": "1.2.0",
  "id": "GHSA-9qj6-4rfq-vm84",
  "modified": "2022-01-06T18:38:16Z",
  "published": "2022-01-06T22:20:41Z",
  "aliases": [
    "CVE-2018-25024"
  ],
  "summary": "Out-of-bounds Write in actix-web",
  "details": "An issue was discovered in the actix-web crate before 0.7.15 for Rust. It can unsoundly coerce an immutable reference into a mutable reference, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-web"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25024"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/actix-web/RUSTSEC-2018-0019.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-web.git"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"56":{
  "schema_version": "1.2.0",
  "id": "GHSA-9p9m-9xww-qjcx",
  "modified": "2021-08-19T21:21:44Z",
  "published": "2021-08-25T20:45:06Z",
  "aliases": [
    "CVE-2020-25791"
  ],
  "summary": "Array size is not checked in sized-chunks",
  "details": "An issue was discovered in the sized-chunks crate through 0.6.2 for Rust. In the Chunk implementation, the array size is not checked when constructed with unit().",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sized-chunks"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25791"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/sized-chunks/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/sized-chunks"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-129"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"57":{
  "schema_version": "1.2.0",
  "id": "GHSA-rw2c-c256-3r53",
  "modified": "2021-08-19T18:47:26Z",
  "published": "2021-08-25T20:51:52Z",
  "aliases": [
    "CVE-2020-36215"
  ],
  "summary": "Data races in hashconsing",
  "details": "An issue was discovered in the hashconsing crate before 1.1.0 for Rust. Because HConsed does not have bounds on its Send trait or Sync trait, memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hashconsing"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.1.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36215"
    },
    {
      "type": "WEB",
      "url": "https://github.com/AdrienChampion/hashconsing/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0107.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/AdrienChampion/hashconsing"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"58":{
  "schema_version": "1.2.0",
  "id": "GHSA-j8qq-58cr-8cc7",
  "modified": "2021-08-19T18:46:05Z",
  "published": "2021-08-25T20:52:53Z",
  "aliases": [
    "CVE-2021-25905"
  ],
  "summary": "Out of bounds read in bra",
  "details": "An issue was discovered in the bra crate before 0.1.1 for Rust. It lacks soundness because it can read uninitialized memory.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bra"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25905"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Enet4/bra-rs/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0008.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Enet4/bra-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"59":{
  "schema_version": "1.2.0",
  "id": "GHSA-q2gj-9r85-p832",
  "modified": "2021-08-19T21:06:56Z",
  "published": "2021-08-25T20:48:09Z",
  "aliases": [
    "CVE-2020-35879"
  ],
  "summary": "Data races in rulinalg",
  "details": "An issue was discovered in the rulinalg crate through 2020-02-11 for Rust. There are incorrect lifetime-boundary definitions for RowMut::raw_slice and RowMut::raw_slice_mut.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rulinalg"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "rulinalg::matrix::RowMut::raw_slice",
          "rulinalg::matrix::RowMut::raw_slice_mut"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.4.0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.4.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35879"
    },
    {
      "type": "WEB",
      "url": "https://github.com/AtheMathmo/rulinalg/issues/201"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0023.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/AtheMathmo/rulinalg"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"60":{
  "schema_version": "1.2.0",
  "id": "GHSA-3288-cwgw-ch86",
  "modified": "2021-08-19T17:44:05Z",
  "published": "2021-08-25T20:53:22Z",
  "aliases": [
    "CVE-2021-26955"
  ],
  "summary": "Unchecked Return Value in xcb",
  "details": "An issue was discovered in the xcb crate through 2021-02-04 for Rust. It has a soundness violation because xcb::xproto::GetAtomNameReply::name() calls std::str::from_utf8_unchecked() on unvalidated bytes from an X server.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "xcb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26955"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/653"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rtbo/rust-xcb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-252"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"61":{
  "schema_version": "1.2.0",
  "id": "GHSA-xmr7-v725-2jjr",
  "modified": "2021-08-19T17:34:25Z",
  "published": "2021-08-25T20:52:12Z",
  "aliases": [
    "CVE-2021-27671"
  ],
  "summary": "XSS in comrak",
  "details": "An issue was discovered in the comrak crate before 0.9.1 for Rust. XSS can occur because the protection mechanism for data: and javascript: URIs is case-sensitive, allowing (for example) Data: to be used in an attack.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "comrak"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27671"
    },
    {
      "type": "WEB",
      "url": "https://github.com/kivikakk/comrak/releases/tag/0.9.1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0026.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/kivikakk/comrak"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-79"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"62":{
  "schema_version": "1.2.0",
  "id": "GHSA-fgfm-hqjw-3265",
  "modified": "2022-01-06T18:35:59Z",
  "published": "2022-01-06T22:18:46Z",
  "aliases": [
    "CVE-2018-25025"
  ],
  "summary": "Out-of-bounds Write in actix-web",
  "details": "An issue was discovered in the actix-web crate before 0.7.15 for Rust. It can unsoundly extend the lifetime of a string, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-web"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25025"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/actix-web/RUSTSEC-2018-0019.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-web.git"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"63":{
  "schema_version": "1.2.0",
  "id": "GHSA-69gw-hgj3-45m7",
  "modified": "2021-08-19T21:23:44Z",
  "published": "2021-08-25T20:43:58Z",
  "aliases": [
    "CVE-2019-15554"
  ],
  "summary": "Memory corruption in smallvec",
  "details": "An issue was discovered in the smallvec crate before 0.6.10 for Rust. There is memory corruption for certain grow attempts with less than the current capacity.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "smallvec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.10"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15554"
    },
    {
      "type": "WEB",
      "url": "https://github.com/servo/rust-smallvec/issues/149"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0012.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/servo/rust-smallvec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"64":{
  "schema_version": "1.2.0",
  "id": "GHSA-mgg8-9pvp-6qcw",
  "modified": "2021-08-24T18:01:27Z",
  "published": "2021-08-25T20:59:59Z",
  "withdrawn": "2021-08-24T18:01:27Z",
  "aliases": [

  ],
  "summary": "MvccRwLock allows data races & aliasing violations",
  "details": "Affected versions of the `noise_search` crate unconditionally implement Send/Sync for `MvccRwLock`.\nThis can lead to data races when types that are either `!Send` or `!Sync` (e.g. `Rc<T>`, `Arc<Cell<_>>`) are contained inside `MvccRwLock` and sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue).\n\nAlso, safe APIs of `MvccRwLock` allow aliasing violations by allowing `&T` and `LockResult<MutexGuard<Box<T>>>` to co-exist in conflicting lifetime regions. The APIs of `MvccRwLock` should either be marked as `unsafe` or `MbccRwLock` should be changed to private or pub(crate).\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "noise_search"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.7.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/pipedown/noise/issues/72"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0141.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/pipedown/noise"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"65":{
  "schema_version": "1.2.0",
  "id": "GHSA-w4cc-pc2h-whcj",
  "modified": "2022-01-07T16:17:28Z",
  "published": "2022-01-06T22:16:10Z",
  "aliases": [
    "CVE-2021-45681"
  ],
  "summary": "Out-of-bounds Write in derive-com-impl",
  "details": "An issue was discovered in the derive-com-impl crate before 0.1.2 for Rust. An invalid reference (and memory corruption) can occur because AddRef might not be called before returning a pointer.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "derive-com-impl"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "< 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45681"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/derive-com-impl/RUSTSEC-2021-0083.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0083.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/connicpu/com-impl"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"66":{
  "schema_version": "1.2.0",
  "id": "GHSA-hvqc-pc78-x9wh",
  "modified": "2021-08-19T18:02:19Z",
  "published": "2021-08-25T20:53:10Z",
  "aliases": [
    "CVE-2021-26306"
  ],
  "summary": "Soundness issue in raw-cpuid",
  "details": "An issue was discovered in the raw-cpuid crate before 9.0.0 for Rust. It has unsound transmute calls within as_string() methods.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "raw-cpuid"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "9.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26306"
    },
    {
      "type": "WEB",
      "url": "https://github.com/gz/rust-cpuid/issues/40"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/pull/614"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0013.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gz/rust-cpuid"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-198"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"67":{
  "schema_version": "1.2.0",
  "id": "GHSA-cwvc-87xq-pc5m",
  "modified": "2022-01-07T17:39:55Z",
  "published": "2022-01-06T22:08:43Z",
  "aliases": [
    "CVE-2021-45704"
  ],
  "summary": "Out-of-bounds Write and Race Condition in metrics-util",
  "details": "An issue was discovered in the metrics-util crate before 0.7.0 for Rust. There is a data race and memory corruption because AtomicBucket<T> unconditionally implements the Send and Sync traits.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "metrics-util"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45704"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/metrics-util/RUSTSEC-2021-0113.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0113.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/metrics-rs/metrics"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"68":{
  "schema_version": "1.2.0",
  "id": "GHSA-gffv-5hr2-f9gj",
  "modified": "2021-08-19T21:24:37Z",
  "published": "2021-08-25T20:43:18Z",
  "aliases": [
    "CVE-2018-20999"
  ],
  "summary": "Incorrect results in orion",
  "details": "An issue was discovered in the orion crate before 0.11.2 for Rust. reset() calls cause incorrect results.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "orion"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.11.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20999"
    },
    {
      "type": "WEB",
      "url": "https://github.com/brycx/orion/issues/46"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0012.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/brycx/orion"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-682"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"69":{
  "schema_version": "1.2.0",
  "id": "GHSA-f6g6-54hm-fhxv",
  "modified": "2021-08-18T19:58:56Z",
  "published": "2021-08-25T20:59:02Z",
  "aliases": [
    "CVE-2020-36440"
  ],
  "summary": "Data races in libsbc",
  "details": "Affected versions of this crate implements `Send` for `Decoder<R>` for any `R: Read`. This allows `Decoder<R>` to contain `R: !Send` and carry (move) it to another thread.\n\nThis can result in undefined behavior such as memory corruption from data race on `R`, or dropping `R = MutexGuard<_>` from a thread that didn't lock the mutex.\n\nThe flaw was corrected in commit a34d6e1 by adding trait bound `R: Send` to the `Send` impl for `Decoder<R>`.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libsbc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.5"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36440"
    },
    {
      "type": "WEB",
      "url": "https://github.com/mvertescher/libsbc-rs/commit/a34d6e1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0120.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/mvertescher/libsbc-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"70":{
  "schema_version": "1.2.0",
  "id": "GHSA-mm7v-vpv8-xfc3",
  "modified": "2021-08-19T21:22:23Z",
  "published": "2021-08-25T20:44:59Z",
  "aliases": [
    "CVE-2019-15551"
  ],
  "summary": "Double free in smallvec",
  "details": "An issue was discovered in the smallvec crate before 0.6.10 for Rust. There is a double free for certain grow attempts with the current capacity.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "smallvec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.10"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15551"
    },
    {
      "type": "WEB",
      "url": "https://github.com/servo/rust-smallvec/issues/148"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0009.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/servo/rust-smallvec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"71":{
  "schema_version": "1.2.0",
  "id": "GHSA-4hjg-cx88-g9f9",
  "modified": "2021-08-19T20:49:04Z",
  "published": "2021-08-25T20:49:58Z",
  "aliases": [
    "CVE-2020-35915"
  ],
  "summary": "Data races in futures-intrusive",
  "details": "An issue was discovered in the futures-intrusive crate before 0.4.0 for Rust. GenericMutexGuard allows cross-thread data races of non-Sync types.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "futures-intrusive"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35915"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Matthias247/futures-intrusive/issues/53"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0072.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Matthias247/futures-intrusive"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"72":{
  "schema_version": "1.2.0",
  "id": "GHSA-hpqh-2wqx-7qp5",
  "modified": "2021-10-21T13:49:30Z",
  "published": "2021-08-25T21:01:55Z",
  "aliases": [
    "CVE-2021-32629"
  ],
  "summary": "Memory access due to code generation flaw in Cranelift module",
  "details": "There is a bug in 0.73.0 of the Cranelift x64 backend that can create a scenario that could result in a potential sandbox escape in a WebAssembly module.  Users of versions 0.73.0 of Cranelift should upgrade to either 0.73.1 or 0.74 to remediate this vulnerability.  Users of Cranelift prior to 0.73.0 should update to 0.73.1 or 0.74 if they were not using the old default backend.\n\n### Description\n\nThis bug was introduced in the new backend on 2020-09-08 and first included in a release on 2020-09-30, but the new backend was not the default prior to 0.73.0. The recently-released version 0.73.0 with default settings, and prior versions with an explicit build flag to select the new backend, are vulnerable.  The bug in question performs a sign-extend instead of a zero-extend on a value loaded from the stack, under a specific set of circumstances.  If those circumstances occur, the bug could allow access to memory addresses up to 2GiB before the start of the heap allocated for the WebAssembly module.\n\nIf the heap bound is larger than 2GiB, then it would be possible to read memory from a computable range dependent on the size of the heap's bound.  \n\nThe impact of this bug is highly dependent on heap implementation; specifically:\n* if the heap has bounds checks, and\n* does not rely exclusively on guard pages, and \n* the heap bound is 2GiB or smaller \n\nthen this bug cannot be used to reach memory from another WebAssembly module heap.\n\nThe impact of the vulnerability is mitigated if there is no memory mapped in the range accessible using this bug, for example, if there is a 2 GiB guard region before the WebAssembly module heap.\n\nThe bug in question performs a sign-extend instead of a zero-extend on a value loaded from the stack when the register allocator reloads a spilled integer value narrower than 64 bits. This interacts poorly with another optimization: the instruction selector elides a 32-to-64-bit zero-extend operator when we know that an instruction producing a 32-bit value actually zeros the upper 32 bits of its destination register. Hence, we rely on these zeroed bits, but the type of the value is still i32, and the spill/reload reconstitutes those bits as the sign extension of the i32’s MSB.\n\nThe issue would thus occur when:\n* An i32 value is greater than or equal to 0x8000_0000;\n* The value is spilled and reloaded by the register allocator due to high register pressure in the program between the value’s definition and its use;\n* The value is produced by an instruction that we know to be \"special\" in that it zeroes the upper 32 bits of its destination: add, sub, mul, and, or;\n* The value is then zero-extended to 64 bits;\n* The resulting 64-bit value is used.\n\nUnder these circumstances there is a potential sandbox escape when the i32 value is a pointer. The usual code emitted for heap accesses zero-extends the WebAssembly heap address, adds it to a 64-bit heap base, and accesses the resulting address. If the zero-extend becomes a sign-extend, the module could reach backward and access memory up to 2GiB before the start of its heap.\n\nThis bug was identified by developers at Fastly following a report from Javier Cabrera Arteaga, KTH Royal Institute of Technology, with support from project Trustful of Stiftelsen för Strategisk Forskning.  In addition to supporting the analysis and remediation of this vulnerability, Fastly will publish a related Fastly Security Advisory at [https://www.fastly.com/security-advisories](https://www.fastly.com/security-advisories).\n\nIn addition to assessing the nature of the code generation bug in Cranelift, we have also determined that under specific circumstances, both Lucet and Wasmtime using this version of Cranelift may be exploitable.\n\n### General Impact to Lucet\n\nLucet inherits the heap address computation and bounds-checks of Cranelift, which it uses as its backend code generator. Of particular importance specifically is the address-space layout used by Lucet. In the default configuration for Lucet, only a single module is running, and therefore it is not possible to access memory from another module.\n\nBy default, the open source implementation of Lucet uses a maximum heap size of 4 GiB, and an instance slot size of 8 GiB, when invoking an instance from the lucet-wasi command-line tool. These settings are within the range of vulnerability described above, but only a single instance is running, so there is no other instance to read. When embedding the runtime (for example, in a long-running daemon), the default for the heap size as described in the source is 1MB; with this setting, the runtime is not vulnerable.\n\nLucet allocates its WebAssembly module instances into \"instance slots\", which are contiguous zones of virtual address space that contain the VM context at the bottom, the WebAssembly heap in the next page after that, a guard region in the middle, and other data at the top: the stack and the globals.\n\nIf the instance slot size is less than (max heap) + 2GiB, then the lowest accessible address using the bug will overlap with the prior instance’s heap. If the size of VM context + stack + globals is greater than (4GiB - heap limit), then the highest accessible address using the bug will overlap with this critical data. If neither of these conditions are true, the bug should only result in an access to the prior instance’s guard region.\n\nGenerally, if the limit is between 2GiB and 4GiB - ~1MB (depending on stack/global size) and the instance slot size is less than 6GiB, the configuration is vulnerable. If the limit is greater than 4GiB - ~1MB, the configuration is vulnerable regardless of instance slot size. Otherwise, the configuration is not vulnerable.\n\n### General Impact on Wasmtime\n\nIn Wasmtime, the same Cranelift heap address computations and heap types are used as above. The memory layout, however, is slightly different, with different outcomes:\n* With the mmap implementation impact is mitigated probabilistically if ASLR is enabled.\n* With the pooling allocator, the vulnerability only exists if a memory reservation size lower than the default of 6GB is used.\n\nWith the default mmap-based instance memory implementation, Wasmtime uses mmap() to allocate a block of memory large enough for the heap and guard region, as specified in its configuration. If the underlying OS implements ASLR (modern Linux, macOS and Windows do) then this address will be randomized, and the region below it will (probabilistically) be free. Hence, the bug is mitigated probabilistically in the default configuration if ASLR is enabled.\n\nIf using the pooling allocator, the vulnerability exists if instance memory size (`memory_reservation_size` in InstanceLimit) is strictly less than 6GiB (4 GiB + 2 GiB of guard pages). The default is 6GiB, so the vulnerability is masked in the default pooling allocator configuration.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cranelift-codegen"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.73.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-hpqh-2wqx-7qp5"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32629"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/95559c01aaa7c061088a433040f31e8291fb09d0"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/cranelift-codegen"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/blob/main/crates/cranelift-codegen/RUSTSEC-2021-0067.md"
    },
    {
      "type": "WEB",
      "url": "https://www.fastly.com/security-advisories/memory-access-due-to-code-generation-flaw-in-cranelift-module"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/wasmtime/tree/main/cranelift"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-788"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"73":{
  "schema_version": "1.2.0",
  "id": "GHSA-j79j-cx3h-g27h",
  "modified": "2021-08-19T21:07:57Z",
  "published": "2021-08-25T20:48:02Z",
  "aliases": [
    "CVE-2020-35881"
  ],
  "summary": "Out of bounds write in traitobject",
  "details": "An issue was discovered in the traitobject crate through 2020-06-01 for Rust. It has false expectations about fat pointers, possibly causing memory corruption in, for example, Rust 2.x.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "traitobject"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35881"
    },
    {
      "type": "WEB",
      "url": "https://github.com/reem/rust-traitobject/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0027.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/reem/rust-traitobject"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"74":{
  "schema_version": "1.2.0",
  "id": "GHSA-mcrf-7hf9-f6q5",
  "modified": "2021-08-06T19:28:40Z",
  "published": "2021-08-25T21:00:09Z",
  "aliases": [

  ],
  "summary": "Unchecked vector pre-allocation",
  "details": "Affected versions of this crate pre-allocate memory on deserializing raw\nbuffers without checking whether there is sufficient data available.\n\nThis allows an attacker to do denial-of-service attacks by sending small\nmsgpack messages that allocate gigabytes of memory.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rmpv"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/3Hren/msgpack-rust/issues/151"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2017-0006.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/3Hren/msgpack-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"75":{
  "schema_version": "1.2.0",
  "id": "GHSA-pphf-f93w-gc84",
  "modified": "2021-08-19T18:48:04Z",
  "published": "2021-08-25T20:51:47Z",
  "aliases": [
    "CVE-2020-36217"
  ],
  "summary": "Data race in may_queue",
  "details": "An issue was discovered in the may_queue crate through 2020-11-10 for Rust. Because Queue does not have bounds on its Send trait or Sync trait, memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "may_queue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.8"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36217"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/may/issues/88"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0111.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Xudong-Huang/may"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"76":{
  "schema_version": "1.2.0",
  "id": "GHSA-vhfr-v4w9-45v8",
  "modified": "2021-08-19T21:22:34Z",
  "published": "2021-08-25T20:44:51Z",
  "aliases": [
    "CVE-2019-16142"
  ],
  "summary": "Improper Input Validation in renderdoc",
  "details": "An issue was discovered in the renderdoc crate before 0.5.0 for Rust. Multiple exposed methods take self by immutable reference, which is incompatible with a multi-threaded application.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "renderdoc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16142"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ebkalderon/renderdoc-rs/pull/32"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0018.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ebkalderon/renderdoc-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"77":{
  "schema_version": "1.2.0",
  "id": "GHSA-wq8f-46ww-6c2h",
  "modified": "2021-08-19T21:24:20Z",
  "published": "2021-08-25T20:43:49Z",
  "aliases": [
    "CVE-2018-20989"
  ],
  "summary": "Integer underflow in untrusted",
  "details": "An issue was discovered in the untrusted crate before 0.6.2 for Rust. Error handling can trigger an integer underflow and panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "untrusted"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20989"
    },
    {
      "type": "WEB",
      "url": "https://github.com/briansmith/untrusted/pull/20"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0001.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/briansmith/untrusted"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-191"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"78":{
  "schema_version": "1.2.0",
  "id": "GHSA-qj3v-q2vj-4c8h",
  "modified": "2021-08-18T21:27:27Z",
  "published": "2021-08-25T20:55:58Z",
  "aliases": [
    "CVE-2021-38194"
  ],
  "summary": "Calculation error in ark-r1cs-std",
  "details": "An issue was discovered in the ark-r1cs-std crate before 0.3.1 for Rust. It does not enforce any constraints in the FieldVar::mul_by_inverse method. Thus, a prover can produce a proof that is unsound but is nonetheless verified.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ark-r1cs-std"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "ark_r1cs_std::FieldVar::mul_by_inverse"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.2.0","<": "0.3.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38194"
    },
    {
      "type": "WEB",
      "url": "https://github.com/arkworks-rs/r1cs-std/pull/70"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ark-r1cs-std/RUSTSEC-2021-0075.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0075.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/arkworks-rs/r1cs-std"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-682"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"79":{
  "schema_version": "1.2.0",
  "id": "GHSA-686f-ch3r-xwmh",
  "modified": "2021-08-24T17:47:59Z",
  "published": "2021-08-25T20:58:17Z",
  "aliases": [
    "CVE-2020-36436"
  ],
  "summary": "Data races in unicycle",
  "details": "Affected versions of this crate unconditionally implemented `Send` & `Sync` for types `PinSlab<T>` & `Unordered<T, S>`. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads.\n\nThis can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained within `PinSlab<T>` or `Unordered<T, S>` and accessed concurrently from multiple threads.\n\nThe flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait bound `T: Send` to `Send` impls for `PinSlab<T>` & `Unordered<T, S>` and adding `T: Sync` to `Sync` impls for `PinSlab<T>` & `Unordered<T, S>`.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "unicycle"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36436"
    },
    {
      "type": "WEB",
      "url": "https://github.com/udoprog/unicycle/issues/8"
    },
    {
      "type": "WEB",
      "url": "https://github.com/udoprog/unicycle/commit/6a6c367a0c25f86f998fa315ea90c328f685b194"
    },
    {
      "type": "WEB",
      "url": "https://github.com/udoprog/unicycle/commit/92f40b4a2c671553dfa96feacff0265206c44ce5"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0116.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/udoprog/unicycle"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"80":{
  "schema_version": "1.2.0",
  "id": "GHSA-9mxw-4856-9cm5",
  "modified": "2021-08-19T18:51:05Z",
  "published": "2021-08-25T20:50:51Z",
  "aliases": [
    "CVE-2020-36206"
  ],
  "summary": "Data races in rusb",
  "details": "An issue was discovered in the rusb crate before 0.7.0 for Rust. Because of a lack of Send and Sync bounds, a data race and memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36206"
    },
    {
      "type": "WEB",
      "url": "https://github.com/a1ien/rusb/issues/44"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0098.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/a1ien/rusb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"81":{
  "schema_version": "1.2.0",
  "id": "GHSA-39vw-qp34-rmwf",
  "modified": "2021-08-06T17:45:03Z",
  "published": "2021-08-25T21:00:18Z",
  "aliases": [

  ],
  "summary": "Uncontrolled recursion leads to abort in deserialization",
  "details": "Affected versions of this crate did not properly check for recursion\nwhile deserializing aliases.\n\nThis allows an attacker to make a YAML file with an alias referring\nto itself causing an abort.\n\nThe flaw was corrected by checking the recursion depth.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "serde_yaml"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.5.1","<": "0.8.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/dtolnay/serde-yaml/pull/105"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0005.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dtolnay/serde-yaml"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-674"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"82":{
  "schema_version": "1.2.0",
  "id": "GHSA-v7q4-97x4-4qw2",
  "modified": "2021-08-19T17:22:46Z",
  "published": "2021-08-25T20:51:58Z",
  "aliases": [
    "CVE-2021-28030"
  ],
  "summary": " Use of Uninitialized Resource in truetype",
  "details": "An issue was discovered in the truetype crate before 0.30.1 for Rust. Attackers can read the contents of uninitialized memory locations via a user-provided Read operation within Tape::take_bytes.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "truetype"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.30.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28030"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodoni/truetype/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0029.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodoni/truetype"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"83":{
  "schema_version": "1.2.0",
  "id": "GHSA-x54v-qxxr-93qc",
  "modified": "2021-08-19T21:21:52Z",
  "published": "2021-08-25T20:45:01Z",
  "aliases": [
    "CVE-2020-25795"
  ],
  "summary": "Missing release of memory in sized-chunks",
  "details": "An issue was discovered in the sized-chunks crate through 0.6.2 for Rust. In the Chunk implementation, insert_from can have a memory-safety issue upon a panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sized-chunks"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25795"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/sized-chunks/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/sized-chunks"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-401"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"84":{
  "schema_version": "1.2.0",
  "id": "GHSA-2rxc-8f9w-fjq8",
  "modified": "2022-01-07T18:25:00Z",
  "published": "2022-01-06T22:14:13Z",
  "aliases": [
    "CVE-2021-45694"
  ],
  "summary": "Window may read from uninitialized memory locations in rdiff",
  "details": "An issue was discovered in the rdiff crate through 2021-02-03 for Rust. Window may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rdiff"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45694"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rdiff/RUSTSEC-2021-0094.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0094.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dyule/rdiff"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"85":{
  "schema_version": "1.2.0",
  "id": "GHSA-hf79-8hjp-rrvq",
  "modified": "2021-11-30T22:05:58Z",
  "published": "2021-11-30T22:20:36Z",
  "aliases": [
    "CVE-2021-43790"
  ],
  "summary": "Use After Free in lucet",
  "details": "### Impact\nThere is a bug in the main branch of Lucet's `lucet-runtime` that allows a use-after-free in an `Instance` object that could result in memory corruption, data race, or other related issues.  This bug was introduced early in the development of Lucet and is present in all releases.  As a result of this bug, and dependent on the memory backing for the `Instance` objects, it is possible to trigger a use-after-free when the `Instance` is dropped.\n\n### Patches\nUsers should upgrade to the `main` branch of the Lucet repository. Lucet does not provide versioned releases on crates.io.\n\n### Workarounds\nThere is no way to remediate this vulnerability without upgrading.\n\n### Description\nLucet uses a \"pool\" allocator for new WebAssembly instances that are created. This pool allocator manages everything from the linear memory of the wasm instance, the runtime stack for async switching, as well as the memory behind the Instance itself. `Instances` are referred to via an `InstanceHandle` type which will, on drop, release the memory backing the Instance back to the pool.\n\nWhen an Instance is dropped, the fields of the `Instance` are destructed top-to-bottom, however when the `alloc: Alloc` field is destructed, the memory backing the `Instance` is released back to the pool before the destructors of the remaining fields are run. If another thread allocates the same memory from the pool while these destructors are still running, a race condition occurs that can lead to use-after-free errors.\n\nThe bug was corrected by changing how the `InstanceHandle` destructor operates to ensure that the memory backing an Instance is only returned to the pool once the `Instance` has been completely destroyed.\n\nThis security advisory has been assigned CVE-2021-43790.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [lucet repository](https://github.com/bytecodealliance/lucet)\n* Email [the lucet team](mailto:lucet@fastly.com)\n* See the [Bytecode Alliance security policy](https://bytecodealliance.org/security)\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lucet-runtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.6.1"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/lucet/security/advisories/GHSA-hf79-8hjp-rrvq"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43790"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/lucet/commit/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/lucet-runtime"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/lucet"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"86":{
  "schema_version": "1.2.0",
  "id": "GHSA-cx4j-fxr7-jxg8",
  "modified": "2021-08-19T18:43:30Z",
  "published": "2021-08-25T20:53:01Z",
  "aliases": [
    "CVE-2021-25902"
  ],
  "summary": "Double free in glsl-layout",
  "details": "An issue was discovered in the glsl-layout crate before 0.4.0 for Rust. When a panic occurs, map_array can perform a double drop.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "glsl-layout"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25902"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rustgd/glsl-layout/pull/10"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0005.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rustgd/glsl-layout"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"87":{
  "schema_version": "1.2.0",
  "id": "GHSA-hr52-f9vp-582c",
  "modified": "2022-01-07T16:30:51Z",
  "published": "2022-01-06T22:12:28Z",
  "aliases": [
    "CVE-2021-45692"
  ],
  "summary": "Use of Uninitialized Resource in messagepack-rs.",
  "details": "An issue was discovered in the messagepack-rs crate through 2021-01-26 for Rust. deserialize_extension_others may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "messagepack-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.8.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45692"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/messagepack-rs/RUSTSEC-2021-0092.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0092.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/otake84/messagepack-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"88":{
  "schema_version": "1.2.0",
  "id": "GHSA-m2pf-hprp-3vqm",
  "modified": "2021-08-19T21:22:44Z",
  "published": "2021-08-25T20:44:43Z",
  "aliases": [
    "CVE-2019-16138"
  ],
  "summary": "Use after free in image",
  "details": "An issue was discovered in the image crate before 0.21.3 for Rust, affecting the HDR image format decoder. Vec::set_len is called on an uninitialized vector, leading to a use-after-free and arbitrary code execution.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "image"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.21.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16138"
    },
    {
      "type": "WEB",
      "url": "https://github.com/image-rs/image/pull/985"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/image-rs/image"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"89":{
  "schema_version": "1.2.0",
  "id": "GHSA-gv73-9mwv-fwgq",
  "modified": "2021-08-19T21:20:08Z",
  "published": "2021-08-25T20:46:11Z",
  "aliases": [
    "CVE-2020-35858"
  ],
  "summary": "Out of bounds write in prost",
  "details": "An issue was discovered in the prost crate before 0.6.1 for Rust. There is stack consumption via a crafted message, causing a denial of service (e.g., x86) or possibly remote code execution (e.g., ARM).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "prost"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35858"
    },
    {
      "type": "WEB",
      "url": "https://github.com/danburkert/prost/issues/267"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0002.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/danburkert/prost"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"90":{
  "schema_version": "1.2.0",
  "id": "GHSA-vj88-5667-w56p",
  "modified": "2021-08-24T17:44:58Z",
  "published": "2021-08-25T21:00:11Z",
  "withdrawn": "2021-08-24T17:44:58Z",
  "aliases": [

  ],
  "summary": "Singleton lacks bounds on Send and Sync.",
  "details": "`Singleton<T>` is meant to be a static object that can be initialized lazily. In\norder to satisfy the requirement that `static` items must implement `Sync`,\n`Singleton` implemented both `Sync` and `Send` unconditionally.\n\nThis allows for a bug where non-`Sync` types such as `Cell` can be used in\nsingletons and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `b0d2bd20e` by adding trait bounds, requiring\nthe contaiend type to implement `Sync`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ruspiro-singleton"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/RusPiRo/ruspiro-singleton/issues/10"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0115.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RusPiRo/ruspiro-singleton"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"91":{
  "schema_version": "1.2.0",
  "id": "GHSA-gx5w-rrhp-f436",
  "modified": "2021-08-18T21:06:53Z",
  "published": "2021-08-25T20:56:20Z",
  "aliases": [
    "CVE-2020-26297"
  ],
  "summary": "XSS in mdBook",
  "details": "> This is a cross-post of [the official security advisory][ml]. The official post contains a signed version with our PGP key, as well.\n\n[ml]: https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0\n\nThe Rust Security Response Working Group was recently notified of a security issue affecting the search feature of mdBook, which could allow an attacker to execute arbitrary JavaScript code on the page.\n\nThe CVE for this vulnerability is [CVE-2020-26297](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-26297).\n\n## Overview\n\nThe search feature of mdBook (introduced in version 0.1.4) was affected by a cross site scripting vulnerability that allowed an attacker to execute arbitrary JavaScript code on an user's browser by tricking the user into typing a malicious search query, or tricking the user into clicking a link to the search page with the malicious search query prefilled.\n\nmdBook 0.4.5 fixes the vulnerability by properly escaping the search query.\n\n## Mitigations\n\nOwners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater and rebuild their website contents with it. It's possible to install mdBook 0.4.5 on the local system with:\n\n```\ncargo install mdbook --version 0.4.5 --force\n```\n\n## Acknowledgements\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability to us according to [our security policy](https://www.rust-lang.org/policies/security).\n\n## Timeline of events\n\nAll times are listed in UTC.\n\n- 2020-12-30 20:14 - The issue is reported to the Rust Security Response WG\n- 2020-12-30 20:32 - The issue is acknowledged and the investigation began\n- 2020-12-30 21:21 - Found the cause of the vulnerability and prepared the patch\n- 2021-01-04 15:00 - Patched version released and vulnerability disclosed",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "mdBook"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.1.4","<": "0.4.5"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/mdBook/security/advisories/GHSA-gx5w-rrhp-f436"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26297"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/mdBook/commit/32abeef088e98327ca0dfccdad92e84afa9d2e9b"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/mdBook/blob/master/CHANGELOG.md#mdbook-045"
    },
    {
      "type": "WEB",
      "url": "https://groups.google.com/g/rustlang-security-announcements/c/3-sO6of29O0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0001.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-lang/mdBook"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-79"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"92":{
  "schema_version": "1.2.0",
  "id": "GHSA-c9h5-hf8r-m97x",
  "modified": "2021-08-19T21:18:24Z",
  "published": "2021-08-25T20:47:36Z",
  "aliases": [
    "CVE-2020-35864"
  ],
  "summary": "Dangling reference in flatbuffers",
  "details": "An issue was discovered in the flatbuffers crate through 2020-04-11 for Rust. read_scalar (and read_scalar_at) can transmute values without unsafe blocks.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "flatbuffers"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35864"
    },
    {
      "type": "WEB",
      "url": "https://github.com/google/flatbuffers/issues/5825"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0009.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/google/flatbuffers"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-704"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"93":{
  "schema_version": "1.2.0",
  "id": "GHSA-ppj3-7jw3-8vc4",
  "modified": "2021-08-19T20:53:30Z",
  "published": "2021-08-25T20:49:35Z",
  "aliases": [
    "CVE-2020-35910"
  ],
  "summary": "Data races in lock_api",
  "details": "An issue was discovered in the lock_api crate before 0.4.2 for Rust. A data race can occur because of MappedMutexGuard unsoundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lock_api"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35910"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Amanieu/parking_lot/pull/262"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Amanieu/parking_lot"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"94":{
  "schema_version": "1.2.0",
  "id": "GHSA-fqq2-xp7m-xvm8",
  "modified": "2021-08-24T17:45:32Z",
  "published": "2021-08-25T20:58:19Z",
  "aliases": [
    "CVE-2020-36435"
  ],
  "summary": "Data race in ruspiro-singleton",
  "details": "`Singleton<T>` is meant to be a static object that can be initialized lazily. In\norder to satisfy the requirement that `static` items must implement `Sync`,\n`Singleton` implemented both `Sync` and `Send` unconditionally.\n\nThis allows for a bug where non-`Sync` types such as `Cell` can be used in\nsingletons and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `b0d2bd20e` by adding trait bounds, requiring\nthe contaiend type to implement `Sync`.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ruspiro-singleton"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36435"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RusPiRo/ruspiro-singleton/issues/10"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RusPiRo/ruspiro-singleton/pull/11"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RusPiRo/ruspiro-singleton/commit/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0115.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RusPiRo/ruspiro-singleton"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"95":{
  "schema_version": "1.2.0",
  "id": "GHSA-2r6q-6c8c-g762",
  "modified": "2021-08-18T20:21:02Z",
  "published": "2021-08-25T20:58:03Z",
  "aliases": [
    "CVE-2020-36456"
  ],
  "summary": "Data races in toolshed",
  "details": "An issue was discovered in the toolshed crate through 2020-11-15 for Rust. In CopyCell<T>, the Send trait lacks bounds on the contained type.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "toolshed"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.8.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36456"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ratel-rust/toolshed/issues/12"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0136.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ratel-rust/toolshed"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"96":{
  "schema_version": "1.2.0",
  "id": "GHSA-83r8-p8v6-6gfm",
  "modified": "2021-08-06T17:28:42Z",
  "published": "2021-08-25T21:00:20Z",
  "aliases": [

  ],
  "summary": "Slock<T> allows sending non-Send types across thread boundaries",
  "details": "`Slock<T>` unconditionally implements `Send`/`Sync`.\n\nAffected versions of this crate allows sending non-Send types to other threads,\nwhich can lead to data races and memory corruption due to the data race.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "slock"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/BrokenLamp/slock-rs/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0135.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/BrokenLamp/slock-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"97":{
  "schema_version": "1.2.0",
  "id": "GHSA-hhw2-pqhf-vmx2",
  "modified": "2021-08-19T20:53:53Z",
  "published": "2021-08-25T20:49:09Z",
  "aliases": [
    "CVE-2020-35898"
  ],
  "summary": "Use after free in actix-utils",
  "details": "An issue was discovered in the actix-utils crate before 2.0.0 for Rust. The Cell implementation allows obtaining more than one mutable reference to the same data.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-utils"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35898"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-net/issues/160"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0045.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-net"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"98":{
  "schema_version": "1.2.0",
  "id": "GHSA-f9xr-3m55-5q2v",
  "modified": "2021-08-18T21:15:49Z",
  "published": "2021-08-25T20:56:14Z",
  "aliases": [
    "CVE-2020-36466"
  ],
  "summary": "Data races in cgc",
  "details": "An issue was discovered in the cgc crate through 2020-12-10 for Rust. Ptr implements Send and Sync for all types.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cgc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.4.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36466"
    },
    {
      "type": "WEB",
      "url": "https://github.com/playXE/cgc/issues/5"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0148.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/playXE/cgc"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"99":{
  "schema_version": "1.2.0",
  "id": "GHSA-24g6-5rx7-58wj",
  "modified": "2022-01-07T16:13:36Z",
  "published": "2022-01-06T22:18:07Z",
  "aliases": [
    "CVE-2019-25054"
  ],
  "summary": "Missing Initialization of Resource in pnet",
  "details": "An issue was discovered in the pnet crate before 0.27.2 for Rust. There is a segmentation fault (upon attempted dereference of an uninitialized descriptor) because of an erroneous IcmpTransportChannelIterator compiler optimization.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pnet"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.27.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25054"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/pnet/RUSTSEC-2019-0037.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0037.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/libpnet/libpnet/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-909"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"100":{
  "schema_version": "1.2.0",
  "id": "GHSA-g87r-23vw-7f87",
  "modified": "2022-01-06T20:20:42Z",
  "published": "2022-01-06T22:00:21Z",
  "aliases": [
    "CVE-2021-45719"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. update_hook has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45719"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"101":{
  "schema_version": "1.2.0",
  "id": "GHSA-f3pg-qwvg-p99c",
  "modified": "2021-09-07T21:49:21Z",
  "published": "2021-07-12T16:54:20Z",
  "aliases": [
    "CVE-2021-32715"
  ],
  "summary": "Lenient Parsing of Content-Length Header When Prefixed with Plus Sign",
  "details": "### Summary\n\nhyper's HTTP/1 server code had a flaw that incorrectly parses and accepts requests with a `Content-Length` header with a prefixed plus sign, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that doesn't parse such `Content-Length` headers, but forwards them, can result in \"request smuggling\" or \"desync attacks\".\n\n### Vulnerability\n\nThe flaw exists in all prior versions of hyper, if built with [`rustc` v1.5.0 or newer](https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739).\n\nExample:\n\n```\nGET / HTTP/1.1\nHost: example.com\nContent-Length: +3\n\nabc\n```\n\nThis request gets accepted and hyper reads the body as abc. The request _should_ be rejected, according to RFC 7230, since the ABNF for `Content-Length` only allows for `DIGIT`s. This is due to using the `FromStr` implementation for `u64` in the standard library. By differing from the spec, it is possible to send requests like these to endpoints that have different HTTP implementations, with different interpretations of the payload semantics, and cause \"desync attacks\".\n\nIn this particular case, an upstream proxy would need to error when parsing the `Content-Length`, but _not_ reject the request (swallowing its own error), and forwarding the request as-is with the `Content-Length` still included. _Then_ the upstream proxy and hyper would disagree on the length of the request body. The combination of these factors would be extremely rare.\n\nRead more about desync attacks: https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn\n\n### Impact\n\nTo determine if vulnerable, all these things must be true:\n\n- **Using hyper as an HTTP server**. While the lenient decoder also exists in the client, a vulnerability does not exist around _responses_.\n- **Using HTTP/1**. The HTTP/2 code uses a stricter parser.\n- **Using a vulnerable HTTP proxy upstream to hyper**. If an upstream proxy correctly rejects the illegal `Content-Length` header, *OR* can parse the length with the plus sign, the desync attack cannot succeed.\n\n### Patches\n\nWe have released the following patch versions:\n\n- v0.14.10 (to be released when this advisor is published)\n\n### Workarounds\n\nBesides upgrading hyper, you can take the following options:\n\n- Reject requests manually that contain a plus sign prefix in the `Content-Length` header.\n- Ensure any upstream proxy handles `Content-Length` headers with a plus sign prefix.\n\n### Credits\nThis issue was initially reported by [Mattias Grenfeldt](https://grenfeldt.dev/) and Asta Olofsson.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.14.10"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32715"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0078.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/hyper"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-444"
    ],
    "severity": "LOW",
    "github_reviewed": true
  }
},"102":{
  "schema_version": "1.2.0",
  "id": "GHSA-m833-jv95-mfjh",
  "modified": "2021-08-19T20:56:31Z",
  "published": "2021-08-25T20:48:50Z",
  "aliases": [
    "CVE-2020-35889"
  ],
  "summary": "Memory safety violation in crayon",
  "details": "An issue was discovered in the crayon crate through 2020-08-31 for Rust. A TOCTOU issue has a resultant memory safety violation via HandleLike.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crayon"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.7.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35889"
    },
    {
      "type": "WEB",
      "url": "https://github.com/shawnscode/crayon/issues/87"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0037.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/shawnscode/crayon"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-367"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"103":{
  "schema_version": "1.2.0",
  "id": "GHSA-rmff-f8w9-c9rm",
  "modified": "2021-08-18T19:14:45Z",
  "published": "2021-08-25T20:59:22Z",
  "aliases": [
    "CVE-2020-36472"
  ],
  "summary": "Data races in max7301",
  "details": "The `ImmediateIO` and `TransactionalIO` types implement `Sync` for all contained\n`Expander<EI>` types regardless of if the `Expander` itself is safe to use\nacross threads.\n\nAs the `IO` types allow retrieving the `Expander`, this can lead to non-thread\nsafe types being sent across threads as part of the `Expander` leading to data\nraces.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "max7301"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36472"
    },
    {
      "type": "WEB",
      "url": "https://github.com/edarc/max7301/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/edarc/max7301/commit/0a1da873ddb29bca926bad8301f8d7ab8aa97c52"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0152.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/edarc/max7301"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"104":{
  "schema_version": "1.2.0",
  "id": "GHSA-xrg3-hmf3-rvgw",
  "modified": "2022-01-07T16:10:23Z",
  "published": "2022-01-06T22:03:56Z",
  "aliases": [
    "CVE-2021-45712"
  ],
  "summary": "Path Traversal in rust-embed",
  "details": "An issue was discovered in the rust-embed crate before 6.3.0 for Rust. A ../ directory traversal can sometimes occur in debug mode.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rust-embed"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "6.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45712"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pyros2097/rust-embed/issues/159"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rust-embed/RUSTSEC-2021-0126.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0126.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/pyros2097/rust-embed"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-22"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"105":{
  "schema_version": "1.2.0",
  "id": "GHSA-hpcx-3pw8-g3j2",
  "modified": "2021-08-19T17:09:26Z",
  "published": "2021-08-25T20:54:22Z",
  "aliases": [
    "CVE-2021-29937"
  ],
  "summary": "Free of uninitialized memory in telemetry",
  "details": "An issue was discovered in the telemetry crate through 0.1.2 for Rust. There is a drop of uninitialized memory if a value.clone() call panics within misc::vec_with_size().",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "telemetry"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29937"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Yoric/telemetry.rs/issues/45"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Yoric/telemetry.rs/commit/2820cf12f2e08645fd6d1f15b4a90a54d6082a81"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0046.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Yoric/telemetry.rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"106":{
  "schema_version": "1.2.0",
  "id": "GHSA-g4w7-3qr8-5623",
  "modified": "2021-08-19T21:18:44Z",
  "published": "2021-08-25T20:47:01Z",
  "aliases": [
    "CVE-2020-35872"
  ],
  "summary": "Improper type usage in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via the repr(Rust) type.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35872"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-351"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"107":{
  "schema_version": "1.2.0",
  "id": "GHSA-gf93-h79q-6jjv",
  "modified": "2021-08-19T21:20:49Z",
  "published": "2021-08-25T20:45:41Z",
  "aliases": [
    "CVE-2019-25006"
  ],
  "summary": "Incorrect implementation of the Streebog hash functions in streebog",
  "details": "An issue was discovered in the streebog crate before 0.8.0 for Rust. The Streebog hash function can produce the wrong answer.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "streebog"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25006"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustCrypto/hashes/pull/91"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0030.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustCrypto/hashes/tree/master/streebog"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-327"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"108":{
  "schema_version": "1.2.0",
  "id": "GHSA-8xw8-mmqv-frqq",
  "modified": "2021-08-18T21:41:18Z",
  "published": "2021-08-25T20:55:33Z",
  "aliases": [

  ],
  "summary": "fake-static allows converting any reference into a `'static` reference",
  "details": "fake-static allows converting a reference with any lifetime into\na reference with `'static` lifetime without the `unsafe` keyword.\n\nInternally, this crate does not use unsafe code, it instead\nexploits a soundness bug in rustc\n\n\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "fake-static"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/rust/issues/25860"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0013"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/NieDzejkob/fake-static"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-657"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"109":{
  "schema_version": "1.2.0",
  "id": "GHSA-r43h-gmrm-h5c9",
  "modified": "2021-08-19T21:21:41Z",
  "published": "2021-08-25T20:45:09Z",
  "aliases": [
    "CVE-2020-25573"
  ],
  "summary": "Access of Uninitialized Pointer in linked-hash-map",
  "details": "An issue was discovered in the linked-hash-map crate before 0.5.3 for Rust. It creates an uninitialized NonNull pointer, which violates a non-null constraint.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "linked-hash-map"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25573"
    },
    {
      "type": "WEB",
      "url": "https://github.com/contain-rs/linked-hash-map/pull/100"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0026.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/contain-rs/linked-hash-map"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-824"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"110":{
  "schema_version": "1.2.0",
  "id": "GHSA-cw98-cx2m-9qqg",
  "modified": "2022-01-07T17:53:19Z",
  "published": "2022-01-06T22:10:08Z",
  "aliases": [
    "CVE-2021-45700"
  ],
  "summary": "Denial of Service in ckb",
  "details": "An issue was discovered in the ckb crate before 0.40.0 for Rust. Attackers can cause a denial of service (Nervos CKB blockchain node crash) via a dead call that is used as a DepGroup.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ckb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.40.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45700"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ckb/RUSTSEC-2021-0109.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0109.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nervosnetwork/ckb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"111":{
  "schema_version": "1.2.0",
  "id": "GHSA-37jj-wp7g-7wj4",
  "modified": "2021-08-19T17:53:09Z",
  "published": "2021-08-25T20:53:12Z",
  "aliases": [
    "CVE-2021-26305"
  ],
  "summary": "Read of uninitialized memory in cdr",
  "details": "An issue was discovered in Deserializer::read_vec in the cdr crate before 0.2.4 for Rust. A user-provided Read implementation can gain access to the old contents of newly allocated heap memory, violating soundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cdr"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26305"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hrektts/cdr-rs/issues/10"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0012.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hrektts/cdr-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"112":{
  "schema_version": "1.2.0",
  "id": "GHSA-83mx-573x-5rw9",
  "modified": "2021-08-19T17:21:40Z",
  "published": "2021-08-25T20:54:02Z",
  "aliases": [
    "CVE-2021-3449"
  ],
  "summary": "Null pointer deference in openssl-src",
  "details": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl-src"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "111.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3449"
    },
    {
      "type": "WEB",
      "url": "https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fb9fa6b51defd48157eeb207f52181f735d96148"
    },
    {
      "type": "WEB",
      "url": "https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845"
    },
    {
      "type": "WEB",
      "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10356"
    },
    {
      "type": "WEB",
      "url": "https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/"
    },
    {
      "type": "WEB",
      "url": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0055"
    },
    {
      "type": "WEB",
      "url": "https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc"
    },
    {
      "type": "WEB",
      "url": "https://security.gentoo.org/glsa/202103-03"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20210326-0006/"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20210513-0002/"
    },
    {
      "type": "WEB",
      "url": "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd"
    },
    {
      "type": "WEB",
      "url": "https://www.debian.org/security/2021/dsa-4875"
    },
    {
      "type": "WEB",
      "url": "https://www.openssl.org/news/secadv/20210325.txt"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-05"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-06"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-09"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-10"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/27/1"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/27/2"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/28/3"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/28/4"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexcrichton/openssl-src-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"113":{
  "schema_version": "1.2.0",
  "id": "GHSA-6gvc-4jvj-pwq4",
  "modified": "2021-09-27T15:46:50Z",
  "published": "2021-08-30T16:22:34Z",
  "aliases": [
    "CVE-2018-25001"
  ],
  "summary": "Use after free in libpulse-binding",
  "details": "An issue was discovered in the libpulse-binding crate before 2.5.0 for Rust. proplist::Iterator can cause a use-after-free. ",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libpulse-binding"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "1.0.5","<": "2.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25001"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0020.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jnqnfe/pulse-binding-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"114":{
  "schema_version": "1.2.0",
  "id": "GHSA-v4cp-h94r-m7xf",
  "modified": "2021-09-17T20:05:21Z",
  "published": "2021-09-20T19:54:05Z",
  "aliases": [
    "CVE-2021-39216"
  ],
  "summary": "Use after free passing `externref`s to Wasm in Wasmtime",
  "details": "### Impact\n\nThere was a use-after-free bug when passing `externref`s from the host to guest Wasm content.\n\nTo trigger the bug, you have to explicitly pass multiple `externref`s from the host to a Wasm instance at the same time, either by\n\n* passing multiple `externref`s as arguments from host code to a Wasm function,\n* or returning multiple `externref`s to Wasm from a multi-value return function defined in the host.\n \nIf you do not have host code that matches one of these shapes, then you are not impacted.\n\nIf Wasmtime's [`VMExternRefActivationsTable`](https://github.com/bytecodealliance/wasmtime/blob/37c094faf53f1b356aab3c79d451395e4f7edb34/crates/runtime/src/externref.rs#L493) became filled to capacity after passing the first `externref` in, then passing in the second `externref` could trigger a garbage collection. However the first `externref` is not rooted until we pass control to Wasm, and therefore could be reclaimed by the collector if nothing else was holding a reference to it or otherwise keeping it alive. Then, when control was passed to Wasm after the garbage collection, Wasm could use the first `externref`, which at this point has already been freed.\n\nWe have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare.\n\n### Patches\n\nThe bug has been fixed, and users should upgrade to Wasmtime 0.30.0.\n\nAdditionally, we have updated [our primary `externref` fuzz target](https://github.com/bytecodealliance/wasmtime/blob/37c094faf53f1b356aab3c79d451395e4f7edb34/fuzz/fuzz_targets/table_ops.rs) such that it better exercises these code paths and we can have greater confidence in their correctness going forward.\n\n### Workarounds\n\nIf you cannot upgrade Wasmtime yet, you can avoid the bug by disabling reference types support in Wasmtime by passing `false` to [`wasmtime::Config::wasm_reference_types`](https://docs.rs/wasmtime/0.29.0/wasmtime/struct.Config.html#method.wasm_reference_types).\n\n### References\n\n* [The reference types Wasm proposal, which introduces `externref`](https://github.com/WebAssembly/reference-types/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime)\n* Open an issue in [the `bytecodealliance/wasmtime` repository](https://github.com/bytecodealliance/wasmtime/)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.19.0","<": "0.30.0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.29.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39216"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/101998733b74624cbd348a2366d05760b40181f3"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/wasmtime"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/wasmtime"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"115":{
  "schema_version": "1.2.0",
  "id": "GHSA-7cqg-8449-rmfv",
  "modified": "2021-07-27T15:21:02Z",
  "published": "2021-08-25T21:01:27Z",
  "aliases": [
    "CVE-2019-20399"
  ],
  "summary": "Observable Discrepancy in libsecp256k1-rs",
  "details": "A timing vulnerability in the Scalar::check_overflow function in Parity libsecp256k1-rs before 0.3.1 potentially allows an attacker to leak information via a side-channel attack.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libsecp256k1-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-20399"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/libsecp256k1/commit/11ba23a9766a5079918cd9f515bc100bc8164b50"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-203",
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"116":{
  "schema_version": "1.2.0",
  "id": "GHSA-wp34-mqw5-jj85",
  "modified": "2021-08-19T17:23:52Z",
  "published": "2021-08-25T20:52:00Z",
  "aliases": [
    "CVE-2021-28032"
  ],
  "summary": "Use after free in nano_arena",
  "details": "An issue was discovered in the nano_arena crate before 0.5.2 for Rust. There is an aliasing violation in split_at because two mutable references can exist for the same element, if Borrow<Idx> behaves in certain ways. This can have a resultant out-of-bounds write or use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nano_arena"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28032"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bennetthardwick/nano-arena/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0031.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bennetthardwick/nano-arena"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"117":{
  "schema_version": "1.2.0",
  "id": "GHSA-jqpv-jm4m-86j9",
  "modified": "2022-01-06T18:29:31Z",
  "published": "2022-01-06T22:17:50Z",
  "aliases": [
    "CVE-2018-25028"
  ],
  "summary": "Use After Free in libpulse-binding",
  "details": "An issue was discovered in the libpulse-binding crate before 1.2.1 for Rust. get_context can cause a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libpulse-binding"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25028"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/libpulse-binding/RUSTSEC-2018-0021.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0021.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jnqnfe/pulse-binding-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"118":{
  "schema_version": "1.2.0",
  "id": "GHSA-qpgv-g792-wh6x",
  "modified": "2021-08-19T17:21:25Z",
  "published": "2021-08-25T20:54:04Z",
  "aliases": [
    "CVE-2021-29932"
  ],
  "summary": "Uncontrolled Resource Consumption in parse_duration",
  "details": "An issue was discovered in the parse_duration crate through 2021-03-18 for Rust. It allows attackers to cause a denial of service (CPU and memory consumption) via a duration string with a large exponent.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "parse_duration"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 2.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29932"
    },
    {
      "type": "WEB",
      "url": "https://github.com/zeta12ti/parse_duration/issues/21"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/zeta12ti/parse_duration"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"119":{
  "schema_version": "1.2.0",
  "id": "GHSA-66p5-j55p-32r9",
  "modified": "2021-08-06T16:36:54Z",
  "published": "2021-08-25T21:00:25Z",
  "aliases": [

  ],
  "summary": "smallvec creates uninitialized value of any type",
  "details": "Affected versions of this crate called `mem::uninitialized()` to create values of a user-supplied type `T`.\nThis is unsound e.g. if `T` is a reference type (which must be non-null and thus may not remain uninitialized).\n \nThe flaw was corrected by avoiding the use of `mem::uninitialized()`, using `MaybeUninit` instead.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "smallvec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.13"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/servo/rust-smallvec/issues/126"
    },
    {
      "type": "WEB",
      "url": "https://github.com/servo/rust-smallvec/pull/162"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0018.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/servo/rust-smallvec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-457"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"120":{
  "schema_version": "1.2.0",
  "id": "GHSA-4x25-pvhw-5224",
  "modified": "2021-08-19T21:22:54Z",
  "published": "2021-08-25T20:44:20Z",
  "aliases": [
    "CVE-2019-16143"
  ],
  "summary": "Algorithms compute incorrect results in blake2",
  "details": "An issue was discovered in the blake2 crate before 0.8.1 for Rust. The BLAKE2b and BLAKE2s algorithms, when used with HMAC, produce incorrect results because the block sizes are half of the required sizes.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "blake2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16143"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustCrypto/MACs/issues/19"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustCrypto/hashes/tree/master/blake2"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-327"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"121":{
  "schema_version": "1.2.0",
  "id": "GHSA-wxjf-9f4g-3v44",
  "modified": "2021-08-24T18:02:25Z",
  "published": "2021-08-25T20:56:05Z",
  "aliases": [
    "CVE-2020-36461"
  ],
  "summary": "Data races in noise_search",
  "details": "Affected versions of the `noise_search` crate unconditionally implement Send/Sync for `MvccRwLock`.\nThis can lead to data races when types that are either `!Send` or `!Sync` (e.g. `Rc<T>`, `Arc<Cell<_>>`) are contained inside `MvccRwLock` and sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue).\n\nAlso, safe APIs of `MvccRwLock` allow aliasing violations by allowing `&T` and `LockResult<MutexGuard<Box<T>>>` to co-exist in conflicting lifetime regions. The APIs of `MvccRwLock` should either be marked as `unsafe` or `MbccRwLock` should be changed to private or pub(crate).\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "noise_search"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.7.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36461"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pipedown/noise/issues/72"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0141.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/pipedown/noise"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"122":{
  "schema_version": "1.2.0",
  "id": "GHSA-r57r-j98g-587f",
  "modified": "2022-01-07T18:29:44Z",
  "published": "2022-01-06T22:08:56Z",
  "aliases": [
    "CVE-2021-45705"
  ],
  "summary": "Pointer dereference in nanorand",
  "details": "An issue was discovered in the nanorand crate before 0.6.1 for Rust. There can be multiple mutable references to the same object because the TlsWyRand Deref implementation dereferences a raw pointer.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nanorand"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45705"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Absolucy/nanorand-rs/issues/28"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/nanorand/RUSTSEC-2021-0114.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0114.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Absolucy/nanorand-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"123":{
  "schema_version": "1.2.0",
  "id": "GHSA-773q-5334-5gf9",
  "modified": "2021-08-18T21:38:27Z",
  "published": "2021-08-25T20:55:36Z",
  "aliases": [

  ],
  "summary": "Memory over-allocation in evm-core",
  "details": "Prior to the patch, when executing specific EVM opcodes related\nto memory operations that use `evm_core::Memory::copy_large`, the\ncrate can over-allocate memory when it is not needed, making it\npossible for an attacker to perform denial-of-service attack.\n\nThe flaw was corrected in commit `19ade85`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "evm-core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "evm-core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "evm-core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.24.0","<": "0.24.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "evm-core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.23.0","<": "0.23.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "evm-core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.21.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-blockchain/evm/commit/19ade85"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0066.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-blockchain/evm"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-789"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"124":{
  "schema_version": "1.2.0",
  "id": "GHSA-79wf-qcqv-r22r",
  "modified": "2021-08-18T21:21:03Z",
  "published": "2021-08-25T20:56:00Z",
  "aliases": [
    "CVE-2021-38196"
  ],
  "summary": "Remote code execution in better-macro",
  "details": "An issue was discovered in the better-macro crate through 2021-07-22 for Rust. It intentionally demonstrates that remote attackers can execute arbitrary code via proc-macros, and otherwise has no legitimate purpose.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "better-macro"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 1.0.4"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38196"
    },
    {
      "type": "WEB",
      "url": "https://github.com/raycar5/better-macro/blob/24ff1702397b9c19bbfa4c660e2316cd77d3b900/src/lib.rs#L36-L38"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0077.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/raycar5/better-macro"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-78",
      "CWE-94"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"125":{
  "schema_version": "1.2.0",
  "id": "GHSA-xr7r-88qv-q7hm",
  "modified": "2021-08-19T21:20:43Z",
  "published": "2021-08-25T20:45:51Z",
  "aliases": [
    "CVE-2019-25001"
  ],
  "summary": "Out of bounds write in serde_cbor",
  "details": "An issue was discovered in the serde_cbor crate before 0.10.2 for Rust. The CBOR deserializer can cause stack consumption via nested semantic tags.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "serde_cbor"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25001"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pyfisch/cbor/releases/tag/v0.10.2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0025.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/pyfisch/cbor"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"126":{
  "schema_version": "1.2.0",
  "id": "GHSA-3vjm-36rr-7qrq",
  "modified": "2021-08-19T21:18:36Z",
  "published": "2021-08-25T20:47:16Z",
  "aliases": [
    "CVE-2020-35860"
  ],
  "summary": "NULL Pointer Dereference in cbox",
  "details": "An issue was discovered in the cbox crate through 2020-03-19 for Rust. The CBox API allows dereferencing raw pointers without a requirement for unsafe code.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cbox"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35860"
    },
    {
      "type": "WEB",
      "url": "https://github.com/TomBebbington/cbox-rs/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0005.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/TomBebbington/cbox-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"127":{
  "schema_version": "1.2.0",
  "id": "GHSA-ghpq-vjxw-ch5w",
  "modified": "2021-08-18T20:41:10Z",
  "published": "2021-08-25T20:56:52Z",
  "aliases": [

  ],
  "summary": "Use after free in libpulse-binding",
  "details": "### Overview\n\nVersion 1.2.1 of the `libpulse-binding` Rust crate, released on the 15th of June 2018, fixed a pair of use-after-free issues with the objects returned by the `get_format_info` and `get_context` methods of `Stream` objects. These objects were mistakenly being constructed without setting an important flag to prevent destruction of the underlying C objects they reference upon their own destruction.\n\nThis advisory is being written retrospectively, having previously only been noted in the changelog. No CVE assignment was sought.\n\n### Patches\n\nUsers are required to update to version 1.2.1 or newer.\n\nVersions older than 1.2.1 have been yanked from crates.io. This was believed to have already been done at the time of the 1.2.1 release, but upon double checking now they were found to still be available, so has been done now (22nd October 2020).",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libpulse-binding"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "libpulse_binding::stream::Stream::get_context",
          "libpulse_binding::stream::Stream::get_format_info"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/jnqnfe/pulse-binding-rust/security/advisories/GHSA-ghpq-vjxw-ch5w"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0021.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jnqnfe/pulse-binding-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"128":{
  "schema_version": "1.2.0",
  "id": "GHSA-wrvc-72w7-xpmj",
  "modified": "2021-08-19T21:20:40Z",
  "published": "2021-08-25T20:45:54Z",
  "aliases": [
    "CVE-2019-25002"
  ],
  "summary": "Incorrect Comparison in sodiumoxide",
  "details": "An issue was discovered in the sodiumoxide crate before 0.2.5 for Rust. generichash::Digest::eq compares itself to itself and thus has degenerate security properties.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sodiumoxide"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.5"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25002"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sodiumoxide/sodiumoxide/pull/381"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sodiumoxide/sodiumoxide/pull/381/commits/fae052b834b097ced9a89a8fff8466e18f383070"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0026.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sodiumoxide/sodiumoxide"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-697"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"129":{
  "schema_version": "1.2.0",
  "id": "GHSA-xwxc-j97j-84gf",
  "modified": "2021-08-09T17:05:10Z",
  "published": "2021-08-25T21:00:03Z",
  "aliases": [

  ],
  "summary": "Race condition in Parc",
  "details": "In the affected versions of this crate, `LockWeak<T>` unconditionally implemented `Send` with no trait bounds on `T`. `LockWeak<T>` doesn't own `T` and only provides `&T`.\n\nThis allows concurrent access to a non-Sync `T`, which can cause undefined behavior like data races.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "parc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 1.0.1"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/hyyking/rustracts/pull/6"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0134.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyyking/rustracts/tree/master/parc"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"130":{
  "schema_version": "1.2.0",
  "id": "GHSA-5pg8-h4gv-m3p8",
  "modified": "2021-08-19T17:22:27Z",
  "published": "2021-08-25T20:53:56Z",
  "aliases": [
    "CVE-2021-28306"
  ],
  "summary": "Null pointer deference in fltk",
  "details": "An issue was discovered in the fltk crate before 0.15.3 for Rust. There is a NULL pointer dereference during attempted use of a multi label type if the image is nonexistent.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "fltk"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.15.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28306"
    },
    {
      "type": "WEB",
      "url": "https://github.com/MoAlyousef/fltk-rs/issues/519"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/MoAlyousef/fltk-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"131":{
  "schema_version": "1.2.0",
  "id": "GHSA-fhv4-fx3v-77w6",
  "modified": "2021-08-19T17:25:47Z",
  "published": "2021-08-25T20:52:05Z",
  "aliases": [
    "CVE-2021-28036"
  ],
  "summary": "quinn invalidly assumes the memory layout of std::net::SocketAddr",
  "details": "An issue was discovered in the quinn crate for Rust. It may have invalid memory access for certain versions of the standard library because it relies on a direct cast of std::net::SocketAddrV4 and std::net::SocketAddrV6 data structures.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "quinn"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "quinn"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.6.0","<": "0.6.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28036"
    },
    {
      "type": "WEB",
      "url": "https://github.com/quinn-rs/quinn/issues/968"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0035.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/quinn-rs/quinn"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"132":{
  "schema_version": "1.2.0",
  "id": "GHSA-75cq-g75g-rxff",
  "modified": "2021-08-18T22:36:31Z",
  "published": "2021-08-25T21:00:43Z",
  "aliases": [
    "CVE-2020-35900"
  ],
  "summary": "use-after-free vulnerability in Rust array-queue",
  "details": "An issue was discovered in the array-queue crate through 2020-09-26 for Rust. A pop_back() call may lead to a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "array-queue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.3.0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.3"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35900"
    },
    {
      "type": "WEB",
      "url": "https://github.com/raviqqe/array-queue/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0047.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/raviqqe/array-queue"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"133":{
  "schema_version": "1.2.0",
  "id": "GHSA-64gv-qg2v-vxv6",
  "modified": "2021-08-19T21:21:48Z",
  "published": "2021-08-25T20:45:04Z",
  "aliases": [
    "CVE-2020-25793"
  ],
  "summary": "Array size is not checked in sized-chunks",
  "details": "An issue was discovered in the sized-chunks crate through 0.6.2 for Rust. In the Chunk implementation, the array size is not checked when constructed with From<InlineArray<A, T>>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sized-chunks"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25793"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/sized-chunks/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/sized-chunks"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-129"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"134":{
  "schema_version": "1.2.0",
  "id": "GHSA-jf43-3v8j-qwwr",
  "modified": "2021-08-09T17:20:06Z",
  "published": "2021-08-25T20:59:56Z",
  "aliases": [

  ],
  "summary": "Data races in multiqueue",
  "details": "Affected versions of multiqueue unconditionally implemented `Send` for types used in queue implementations (`InnerSend<RW, T>`, `InnerRecv<RW, T>`, `FutInnerSend<RW, T>`, `FutInnerRecv<RW, T>`).\n\nThis allows users to send non-Send types to other threads, which can lead to data race bugs or other undefined behavior.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "multiqueue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.2"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/schets/multiqueue/issues/31"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0143.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/schets/multiqueue"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"135":{
  "schema_version": "1.2.0",
  "id": "GHSA-8mjx-h23h-w2pg",
  "modified": "2021-08-30T21:56:32Z",
  "published": "2021-09-01T18:30:44Z",
  "aliases": [
    "CVE-2021-28034"
  ],
  "summary": "Double free in stack_dst",
  "details": "An issue was discovered in the stack_dst crate before 0.6.1 for Rust. Because of the push_inner behavior, a double free can occur upon a val.clone() panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "stack_dst"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28034"
    },
    {
      "type": "WEB",
      "url": "https://github.com/thepowersgang/stack_dst-rs/commit/2a4d53809e3000f40085f2b229b6b1a33759881d"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0033.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/thepowersgang/stack_dst-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"136":{
  "schema_version": "1.2.0",
  "id": "GHSA-jpwg-6gf5-5vh9",
  "modified": "2021-08-19T17:17:03Z",
  "published": "2021-08-25T20:54:10Z",
  "aliases": [
    "CVE-2021-29942"
  ],
  "summary": "Out of bounds write in reorder",
  "details": "An issue was discovered in the reorder crate through 1.1.0 for Rust. swap_index can return uninitialized values if an iterator returns a len() that is too large.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "reorder"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.1.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29942"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tiby312/reorder/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0050.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tiby312/reorder"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"137":{
  "schema_version": "1.2.0",
  "id": "GHSA-8gf5-q9p9-wvmc",
  "modified": "2021-08-19T18:48:32Z",
  "published": "2021-08-25T20:51:42Z",
  "aliases": [
    "CVE-2020-36219"
  ],
  "summary": "Data race in atomic-option",
  "details": "An issue was discovered in the atomic-option crate through 2020-10-31 for Rust. Because AtomicOption<T> implements Sync unconditionally, a data race can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "atomic-option"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36219"
    },
    {
      "type": "WEB",
      "url": "https://github.com/reem/rust-atomic-option/issues/4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0113.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/reem/rust-atomic-option"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"138":{
  "schema_version": "1.2.0",
  "id": "GHSA-fc7x-2cmc-8j2g",
  "modified": "2022-01-07T17:57:49Z",
  "published": "2022-01-06T22:10:26Z",
  "aliases": [
    "CVE-2021-45696"
  ],
  "summary": "Incorrect hash in sha2",
  "details": "An issue was discovered in the sha2 crate 0.9.7 before 0.9.8 for Rust. Hashes of long messages may be incorrect when the AVX2-accelerated backend is used.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sha2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.9.7","<": "0.9.8"
            }
          ]
        }
      ],
      "versions": [
        "0.9.7"
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45696"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/sha2/RUSTSEC-2021-0100.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0100.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustCrypto/hashes"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"139":{
  "schema_version": "1.2.0",
  "id": "GHSA-q879-9g95-56mx",
  "modified": "2021-09-17T20:07:13Z",
  "published": "2021-09-20T19:54:26Z",
  "aliases": [
    "CVE-2021-39219"
  ],
  "summary": "Wrong type for `Linker`-define functions when used across two `Engine`s",
  "details": "### Impact\n\nAs a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type.\n\nTriggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`).\n\nIt's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small.\n\nThe fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime.\n\n### Patches\n\nThis bug has been patched and users should upgrade to Wasmtime version 0.30.0.\n\n### Workarounds\n\nIf you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime)\n* Open an issue in [the `bytecodealliance/wasmtime` repository](https://github.com/bytecodealliance/wasmtime/)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.30.0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.29.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39219"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/b39f087414f27ae40c44449ed5d1154e03449bff"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/wasmtime"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/wasmtime"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-843"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"140":{
  "schema_version": "1.2.0",
  "id": "GHSA-jrcf-4jp8-m28v",
  "modified": "2021-08-19T18:54:07Z",
  "published": "2021-08-25T20:50:35Z",
  "aliases": [
    "CVE-2020-35921"
  ],
  "summary": "miow invalidly assumes the memory layout of std::net::SocketAddr",
  "details": "An issue was discovered in the miow crate before 0.3.6 for Rust. It has false expectations about the std::net::SocketAddr memory representation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "miow"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35921"
    },
    {
      "type": "WEB",
      "url": "https://github.com/yoshuawuyts/miow/issues/38"
    },
    {
      "type": "WEB",
      "url": "https://github.com/yoshuawuyts/miow/pull/39"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0080.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/yoshuawuyts/miow"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-188"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"141":{
  "schema_version": "1.2.0",
  "id": "GHSA-cm8g-544f-p9x9",
  "modified": "2022-01-07T16:13:53Z",
  "published": "2022-01-06T22:03:16Z",
  "aliases": [
    "CVE-2021-45716"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. create_collation has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45716"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"142":{
  "schema_version": "1.2.0",
  "id": "GHSA-xvcg-2q82-r87j",
  "modified": "2022-01-07T16:25:11Z",
  "published": "2022-01-06T22:18:19Z",
  "aliases": [
    "CVE-2019-25055"
  ],
  "summary": "Panic mishandled in libpulse-binding",
  "details": "An issue was discovered in the libpulse-binding crate before 2.6.0 for Rust. It mishandles a panic that crosses a Foreign Function Interface (FFI) boundary.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libpulse-binding"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.6.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25055"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/libpulse-binding/RUSTSEC-2019-0038.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jnqnfe/pulse-binding-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"143":{
  "schema_version": "1.2.0",
  "id": "GHSA-m9m5-cg5h-r582",
  "modified": "2021-08-19T18:55:41Z",
  "published": "2021-08-25T20:50:24Z",
  "aliases": [
    "CVE-2020-35926"
  ],
  "summary": "Improper random number generation in nanorand",
  "details": "An issue was discovered in the nanorand crate before 0.5.1 for Rust. It caused any random number generator (even ChaCha) to return all zeroes because integer truncation was mishandled.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nanorand"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35926"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Absolucy/nanorand-rs/commit/5ba218ac29df4786b002d7d12b47fa0c04a331f2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0089.html"
    },
    {
      "type": "WEB",
      "url": "https://twitter.com/aspenluxxxy/status/1336684692284772352"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Absolucy/nanorand-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-338"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"144":{
  "schema_version": "1.2.0",
  "id": "GHSA-5vwc-r48g-wj6c",
  "modified": "2022-01-07T18:26:56Z",
  "published": "2022-01-06T22:08:22Z",
  "aliases": [
    "CVE-2021-45708"
  ],
  "summary": "Exposure of Resource to Wrong Sphere in abomonation",
  "details": "An issue was discovered in the abomonation crate through 2021-10-17 for Rust. Because transmute operations are insufficiently constrained, there can be an information leak or ASLR bypass.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "abomonation"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.7.3"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45708"
    },
    {
      "type": "WEB",
      "url": "https://github.com/TimelyDataflow/abomonation/issues/23"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/abomonation/RUSTSEC-2021-0120.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0120.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/TimelyDataflow/abomonation"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-668"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"145":{
  "schema_version": "1.2.0",
  "id": "GHSA-mh6h-f25p-98f8",
  "modified": "2021-08-19T21:23:35Z",
  "published": "2021-08-25T20:44:05Z",
  "aliases": [
    "CVE-2019-15544"
  ],
  "summary": "Uncontrolled memory consumption in protobuf",
  "details": "An issue was discovered in the protobuf crate before 2.6.0 for Rust. Attackers can exhaust all memory via Vec::reserve calls.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "protobuf"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.6.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15544"
    },
    {
      "type": "WEB",
      "url": "https://github.com/stepancheg/rust-protobuf/issues/411"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r00097d0b5b6164ea428554007121d5dc1f88ba2af7b9e977a10572cd@%3Cdev.hbase.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r4ef574a5621b0e670a3ce641e9922543e34f22bf4c9ee9584aa67fcf@%3Cissues.hbase.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r7fed8dd9bee494094e7011cf3c2ab75bd8754ea314c6734688c42932@%3Ccommon-issues.hadoop.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/rd64381fb8f92d640c1975dc50dcdf1b8512e02a2a7b20292d3565cae@%3Cissues.hbase.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0003.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/stepancheg/rust-protobuf"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-770"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"146":{
  "schema_version": "1.2.0",
  "id": "GHSA-vfqx-hv88-f9cv",
  "modified": "2021-08-19T17:04:13Z",
  "published": "2021-08-25T20:55:22Z",
  "aliases": [
    "CVE-2021-30456"
  ],
  "summary": "Double-free in id-map",
  "details": "An issue was discovered in the id-map crate through 2021-02-26 for Rust. A double free can occur in get_or_insert upon a panic of a user-provided f function.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "id-map"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-30456"
    },
    {
      "type": "WEB",
      "url": "https://github.com/andrewhickman/id-map/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0052.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/andrewhickman/id-map"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"147":{
  "schema_version": "1.2.0",
  "id": "GHSA-c9rv-3jmq-527w",
  "modified": "2021-08-19T20:50:27Z",
  "published": "2021-08-25T20:49:50Z",
  "aliases": [
    "CVE-2020-35918"
  ],
  "summary": "Unexpected panic when decoding tokens in branca",
  "details": "An issue was discovered in the branca crate before 0.10.0 for Rust. Decoding tokens (with invalid base62 data) can panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "branca"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35918"
    },
    {
      "type": "WEB",
      "url": "https://github.com/return/branca/issues/24"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tuupola/branca-spec/issues/22"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0075.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/return/branca"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"148":{
  "schema_version": "1.2.0",
  "id": "GHSA-h45v-vgvp-3h5v",
  "modified": "2021-08-19T20:53:42Z",
  "published": "2021-08-25T20:49:13Z",
  "aliases": [
    "CVE-2020-35895"
  ],
  "summary": "Out-of-bounds write in stack",
  "details": "An issue was discovered in the stack crate before 0.3.1 for Rust. ArrayVec has an out-of-bounds write via element insertion.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "stack"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35895"
    },
    {
      "type": "WEB",
      "url": "https://github.com/arcnmx/stack-rs/issues/4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0042.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/arcnmx/stack-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"149":{
  "schema_version": "1.2.0",
  "id": "GHSA-5xg3-j2j6-rcx4",
  "modified": "2021-09-09T16:46:42Z",
  "published": "2021-08-25T21:01:39Z",
  "aliases": [
    "CVE-2021-36376"
  ],
  "summary": "Relative Path Traversal in git-delta",
  "details": "git-delta before 0.8.3 on Windows resolves an executable's pathname as a relative path from the current directory.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "git-delta"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-36376"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dandavison/delta/commit/f01846bd443aaf92fdd5ac20f461beac3f6ee3fd"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dandavison/delta/releases/tag/0.8.3"
    },
    {
      "type": "WEB",
      "url": "https://vuln.ryotak.me/advisories/54"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dandavison/delta"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-23",
      "CWE-427"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"150":{
  "schema_version": "1.2.0",
  "id": "GHSA-h352-g5vw-3926",
  "modified": "2021-11-19T13:24:04Z",
  "published": "2021-11-16T17:26:47Z",
  "aliases": [
    "CVE-2021-43620"
  ],
  "summary": "Improper Input Validation in fruity",
  "details": "An issue was discovered in the fruity crate through 0.2.0 for Rust. Security-relevant validation of filename extensions is plausibly affected. Methods of NSString for conversion to a string may return a partial result. Because they call CStr::from_ptr on a pointer to the string buffer, the string is terminated at the first '\\0' byte, which might not be the end of the string.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "fruity"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43620"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nvzqz/fruity/issues/14"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rustsec/advisory-db/pull/1102"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0123.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nvzqz/fruity"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"151":{
  "schema_version": "1.2.0",
  "id": "GHSA-vcw4-8ph6-7vw8",
  "modified": "2021-08-19T17:09:45Z",
  "published": "2021-08-25T20:54:20Z",
  "aliases": [
    "CVE-2021-29935"
  ],
  "summary": "Use after free in Rocket",
  "details": "An issue was discovered in the rocket crate before 0.4.7 for Rust. uri::Formatter can have a use-after-free if a user-provided function panics.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rocket"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.7"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29935"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SergioBenitez/Rocket/issues/1534"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0044.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/SergioBenitez/Rocket"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"152":{
  "schema_version": "1.2.0",
  "id": "GHSA-8q5c-93vg-c747",
  "modified": "2021-08-19T19:03:37Z",
  "published": "2021-08-25T21:00:30Z",
  "withdrawn": "2021-08-19T19:03:37Z",
  "aliases": [

  ],
  "summary": "WITHDRAWN",
  "details": "WITHDRAWN",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "toolshed"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.8.1"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/ratel-rust/toolshed/issues/12"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0136.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ratel-rust/toolshed"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"153":{
  "schema_version": "1.2.0",
  "id": "GHSA-4cww-f7w5-x525",
  "modified": "2021-08-19T21:20:03Z",
  "published": "2021-08-25T20:46:13Z",
  "aliases": [
    "CVE-2020-35857"
  ],
  "summary": "Stack consumption in trust-dns-server",
  "details": "An issue was discovered in the trust-dns-server crate before 0.18.1 for Rust. DNS MX and SRV null targets are mishandled, causing stack consumption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "trust-dns-server"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.18.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35857"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bluejekyll/trust-dns/issues/980"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0001.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bluejekyll/trust-dns"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"154":{
  "schema_version": "1.2.0",
  "id": "GHSA-wqxc-qrq4-w5v4",
  "modified": "2021-07-26T17:18:54Z",
  "published": "2021-08-25T21:01:33Z",
  "aliases": [
    "CVE-2020-36213"
  ],
  "summary": "Update unsound DrainFilter and RString::retain",
  "details": "An issue was discovered in the abi_stable crate before 0.9.1 for Rust. A retain call can create an invalid UTF-8 string, violating soundness.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "abi_stable"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36213"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rodrimati1992/abi_stable_crates/issues/44"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0105.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-172"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"155":{
  "schema_version": "1.2.0",
  "id": "GHSA-8gmx-cpcg-f8h5",
  "modified": "2021-08-19T17:04:17Z",
  "published": "2021-08-25T20:55:11Z",
  "aliases": [
    "CVE-2021-30455"
  ],
  "summary": "Double-free in id-map",
  "details": "An issue was discovered in the id-map crate through 2021-02-26 for Rust. A double free can occur in IdMap::clone_from upon a .clone panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "id-map"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-30455"
    },
    {
      "type": "WEB",
      "url": "https://github.com/andrewhickman/id-map/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0052.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/andrewhickman/id-map"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"156":{
  "schema_version": "1.2.0",
  "id": "GHSA-368f-29c3-4f2r",
  "modified": "2021-08-24T18:26:21Z",
  "published": "2021-08-25T20:58:50Z",
  "aliases": [
    "CVE-2020-36437"
  ],
  "summary": "Data race in conqueue",
  "details": "Affected versions of this crate unconditionally implemented `Send`/`Sync` for `QueueSender<T>`,\nallowing to send non-Send `T` to other threads by invoking `(&QueueSender<T>).send()`.\n\nThis fails to prevent users from creating data races by sending types like `Rc<T>` or `Arc<Cell<T>>` to other threads, which can lead to memory corruption.\n\nThe flaw was corrected in commit 1e462c3 by imposing `T: Send` to both `Send`/`Sync` impls for `QueueSender<T>`/`QueueReceiver<T>`.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "conqueue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36437"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0117.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/longshorej/conqueue"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"157":{
  "schema_version": "1.2.0",
  "id": "GHSA-9pp4-8p8v-g78w",
  "modified": "2021-08-18T20:22:32Z",
  "published": "2021-08-25T20:57:26Z",
  "aliases": [
    "CVE-2020-36457"
  ],
  "summary": "Data races in lever",
  "details": "An issue was discovered in the lever crate before 0.1.1 for Rust. AtomicBox<T> implements the Send and Sync traits for all types T. This allows non-Send types such as Rc and non-Sync types such as Cell to be used across thread boundaries which can trigger undefined behavior and memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lever"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36457"
    },
    {
      "type": "WEB",
      "url": "https://github.com/vertexclique/lever/issues/15"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0137.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/vertexclique/lever"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"158":{
  "schema_version": "1.2.0",
  "id": "GHSA-g4vj-x7v9-h82m",
  "modified": "2021-08-18T21:20:32Z",
  "published": "2021-08-25T20:56:03Z",
  "aliases": [
    "CVE-2021-38195"
  ],
  "summary": "Overflow in libsecp256k1",
  "details": "An issue was discovered in the libsecp256k1 crate before 0.5.0 for Rust. It can verify an invalid signature because it allows the R or S parameter to be larger than the curve order, aka an overflow.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libsecp256k1"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38195"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/libsecp256k1/pull/67"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0076.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/paritytech/libsecp256k1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190",
      "CWE-347"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"159":{
  "schema_version": "1.2.0",
  "id": "GHSA-3837-87vh-xq3w",
  "modified": "2021-08-18T20:31:57Z",
  "published": "2021-08-25T20:57:07Z",
  "aliases": [
    "CVE-2020-36447"
  ],
  "summary": "Data race in v9",
  "details": "An issue was discovered in the v9 crate through 2020-12-18 for Rust. There is an unconditional implementation of Sync for SyncRef<T>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "v9"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.43"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36447"
    },
    {
      "type": "WEB",
      "url": "https://github.com/purpleposeidon/v9/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/v9/RUSTSEC-2020-0127.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0127.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/purpleposeidon/v9"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"160":{
  "schema_version": "1.2.0",
  "id": "GHSA-3vv3-frrq-6486",
  "modified": "2021-08-24T19:10:18Z",
  "published": "2021-08-25T20:59:20Z",
  "aliases": [
    "CVE-2020-36432"
  ],
  "summary": "Use of Uninitialized Resource in alg_ds",
  "details": "An issue was discovered in the alg_ds crate through 2020-08-25 for Rust. `Matrix::new()` internally calls `Matrix::fill_with()` which uses `*ptr = value` pattern to initialize the buffer. This pattern assumes that there is an initialized struct at the address and drops it, which results in dropping of uninitialized struct.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "alg_ds"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36432"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/dvshapkin/alg-ds/-/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0033.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://gitlab.com/dvshapkin/alg-ds"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-665",
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"161":{
  "schema_version": "1.2.0",
  "id": "GHSA-whc7-5p35-4ww2",
  "modified": "2021-08-19T20:54:21Z",
  "published": "2021-08-25T20:49:06Z",
  "aliases": [
    "CVE-2020-35899"
  ],
  "summary": "Use after free in actix-service",
  "details": "An issue was discovered in the actix-service crate before 1.0.6 for Rust. The Cell implementation allows obtaining more than one mutable reference to the same data.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-service"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.0.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35899"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-net/pull/158"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0046.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-net"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"162":{
  "schema_version": "1.2.0",
  "id": "GHSA-fqpx-cq8x-9wp4",
  "modified": "2021-08-19T21:20:35Z",
  "published": "2021-08-25T20:46:03Z",
  "aliases": [
    "CVE-2020-25796"
  ],
  "summary": "Unaligned references in sized-chunks",
  "details": "An issue was discovered in the sized-chunks crate through 0.6.2 for Rust. In the InlineArray implementation, an unaligned reference may be generated for a type that has a large alignment requirement.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sized-chunks"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25796"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/sized-chunks/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/sized-chunks"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-129"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"163":{
  "schema_version": "1.2.0",
  "id": "GHSA-hj9h-wrgg-hgmx",
  "modified": "2021-08-19T18:59:37Z",
  "published": "2021-08-25T20:50:02Z",
  "aliases": [
    "CVE-2020-35913"
  ],
  "summary": "Data races in lock_api",
  "details": "An issue was discovered in the lock_api crate before 0.4.2 for Rust. A data race can occur because of RwLockReadGuard unsoundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lock_api"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35913"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Amanieu/parking_lot/pull/262"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Amanieu/parking_lot"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"164":{
  "schema_version": "1.2.0",
  "id": "GHSA-9xjr-m6f3-v5wm",
  "modified": "2021-08-19T21:25:12Z",
  "published": "2021-08-25T20:43:06Z",
  "aliases": [
    "CVE-2016-10932"
  ],
  "summary": "HTTPS MitM vulnerability due to lack of hostname verification",
  "details": "An issue was discovered in the hyper crate before 0.9.4 for Rust on Windows. There is an HTTPS man-in-the-middle vulnerability because hostname verification was omitted.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-10932"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/blob/master/CHANGELOG.md#v094-2016-05-09"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2016-0002.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-347"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"165":{
  "schema_version": "1.2.0",
  "id": "GHSA-5h46-h7hh-c6x9",
  "modified": "2021-09-07T21:47:36Z",
  "published": "2021-07-12T16:55:37Z",
  "aliases": [
    "CVE-2021-32714"
  ],
  "summary": "Integer Overflow in Chunked Transfer-Encoding",
  "details": "### Summary\n\nhyper's HTTP server and client code had a flaw that could trigger an integer overflow when decoding chunk sizes that are too big. This allows possible data loss, or if combined with an upstream HTTP proxy that allows chunk sizes larger than hyper does, can result in \"request smuggling\" or \"desync attacks\".\n\n### Vulnerability\n\nExample:\n\n```\nGET / HTTP/1.1\nHost: example.com\nTransfer-Encoding: chunked\n\nf0000000000000003\nabc\n0\n\n```\n\nhyper only reads the rightmost 64-bit integer as the chunk size. So it reads `f0000000000000003` as `3`. A loss of data can occur since hyper would then read only 3 bytes of the body. Additionally, an HTTP request smuggling vulnerability would occur if using a proxy which instead has prefix truncation in the chunk size, or that understands larger than 64-bit chunk sizes.\n\nRead more about desync attacks: https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn\n\n### Impact\n\nTo determine if vulnerable to _data loss_, these things must be true:\n\n- **Using HTTP/1.1.** Since HTTP/2 does not use chunked encoding, it is not vulnerable.\n- **Using hyper as a server or client.** The body would be improperly truncated in either case.\n- **Users send requests or responses with chunk sizes greater than 18 exabytes**.\n\nTo determine if vulnerable to _desync attacks_, these things must be true:\n\n- **Using an upstream proxy that allows chunks sizes larger than 64-bit.** If the proxy rejects chunk sizes that are too large, that request won't be forwarded to hyper.\n\n### Patches\n\nWe have released the following patch versions:\n\n - v0.14.10 (to be released when this advisory is published)\n\n### Workarounds\n\nBesides upgrading hyper, you can take the following options:\n\n- Reject requests manually that contain a `Transfer-Encoding` header.\n- Ensure any upstream proxy rejects `Transfer-Encoding` chunk sizes greater than what fits in 64-bit unsigned integers.\n\n\n### Credits\nThis issue was initially reported by [Mattias Grenfeldt](https://grenfeldt.dev/) and Asta Olofsson.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.14.10"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/security/advisories/GHSA-5h46-h7hh-c6x9"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32714"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0079.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/hyper"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"166":{
  "schema_version": "1.2.0",
  "id": "GHSA-9658-c26v-7qvf",
  "modified": "2021-08-19T16:50:37Z",
  "published": "2021-08-25T20:55:30Z",
  "aliases": [
    "CVE-2021-27377"
  ],
  "summary": "Use-after-free in yottadb",
  "details": "An issue was discovered in the yottadb crate before 1.2.0 for Rust. For some memory-allocation patterns, ydb_subscript_next_st and ydb_subscript_prev_st have a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "yottadb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.2.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27377"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0022.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://gitlab.com/YottaDB/Lang/YDBRust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"167":{
  "schema_version": "1.2.0",
  "id": "GHSA-8gjm-h3xj-mp6w",
  "modified": "2022-01-07T17:55:53Z",
  "published": "2022-01-06T22:10:43Z",
  "aliases": [
    "CVE-2021-45698"
  ],
  "summary": "RPC call failure in ckb",
  "details": "An issue was discovered in the ckb crate before 0.40.0 for Rust. A get_block_template RPC call may fail in situations where it is supposed to select a Nervos CKB blockchain transaction with a higher fee rate than another transaction.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ckb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.40.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45698"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ckb/RUSTSEC-2021-0107.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0107.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nervosnetwork/ckb"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"168":{
  "schema_version": "1.2.0",
  "id": "GHSA-5wg8-7c9q-794v",
  "modified": "2021-08-19T18:59:40Z",
  "published": "2021-08-25T20:50:00Z",
  "aliases": [
    "CVE-2020-35912"
  ],
  "summary": "Data races in lock_api",
  "details": "An issue was discovered in the lock_api crate before 0.4.2 for Rust. A data race can occur because of MappedRwLockWriteGuard unsoundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lock_api"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35912"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Amanieu/parking_lot/pull/262"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Amanieu/parking_lot"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"169":{
  "schema_version": "1.2.0",
  "id": "GHSA-gjrj-9rj4-pgwx",
  "modified": "2021-12-17T19:33:49Z",
  "published": "2021-12-15T22:51:07Z",
  "aliases": [

  ],
  "summary": "DoS Vulnerability from Upstream Actix Web Issues",
  "details": "### Impact\nThis vulnerability affects all users of the `perseus deploy` functionality who have not exported their sites to static files. If you are using the inbuilt Perseus server in production, there is a memory leak in Actix Web stemming from [this upstream issue](https://github.com/actix/actix-web/issues/1780) which can allow even a single user to cause the process to exhaust its memory on low-memory servers by continuously reloading the page. Note that this issue does not affect all Actix Web applications, but rather results from certain usage patterns which appear to be present in Perseus' server mechanics.\n\n### Patches\nThis vulnerability is addressed in all versions after Perseus `v0.3.0-beta.21`, which temporarily discontinues the use of `perseus-actix-web` (until the upstream bug is fixed) and switches to `perseus-warp` instead, which utilizes [Warp](https://github.com/seanmonstar/warp).\n\nAdditionally, as of Perseus `v0.3.0-beta.22`, the Actix Web integration has been upgraded to use the latest unstable beta version of Actix Web, which appears to partially resolve this issue (the severity of the memory leak is reduced). However, due to the instability of this version, the default integration will remain Warp for now, and a warning will appear if you attempt to use the Actix Web integration.\n\n<details>\n<summary>Using the Actix Web integration</summary>\n\nIf the instability of the latest beta version of Actix Web is not a concern for you, you can use this integration by adding `-i actix-web` to `perseus serve` and the like. This will print a warning about instability, and will then operate with the beta version. Please report any failures in functionality that are not security-related to the Perseus team by [opening an issue on the repository](https://github.com/arctic-hen7/perseus/issues/new/choose).\n\nNote however that switching to the Warp integration requires no code changes whatsoever unless you've ejected, so there are very few disadvantages to this change.\n\n</details>\n\n### Workarounds\nDue to significant infrastructural changes within other Perseus packages that were needed to support Warp, this integration is not backward-compatible with any previous version of Perseus, meaning there are no easily feasible workarounds. If you're only in development though, this vulnerability is irrelevant until you push to production.\n\n### CVE Status\n\nDue to GitHub's requirements, a CVE can't be issued for this security advisory because the issue is technically one with Actix Web (though it's only in combination with certain mechanics in the Perseus server that this problem arises).\n\n### References\nSee [this upstream issue](https://github.com/actix/actix-web/issues/1780) in Actix Web.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue on this repository\n* Email me at [arctic_hen7@pm.me](mailto:arctic_hen7@pm.me)\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "perseus-actix-web"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0-beta.22"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.0-beta.21"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/arctic-hen7/perseus/security/advisories/GHSA-gjrj-9rj4-pgwx"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-web/issues/1780"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/arctic-hen7/perseus"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"170":{
  "schema_version": "1.2.0",
  "id": "GHSA-7x36-h62w-vw65",
  "modified": "2022-01-06T18:34:36Z",
  "published": "2022-01-06T22:18:58Z",
  "aliases": [
    "CVE-2018-25026"
  ],
  "summary": "Out-of-bounds Write in actix-web",
  "details": "An issue was discovered in the actix-web crate before 0.7.15 for Rust. It can add the Send marker trait to an object that cannot be sent between threads safely, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-web"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25026"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/actix-web/RUSTSEC-2018-0019.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-web.git"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"171":{
  "schema_version": "1.2.0",
  "id": "GHSA-vjmg-pc8h-p6p8",
  "modified": "2021-08-19T17:22:11Z",
  "published": "2021-08-25T20:53:58Z",
  "aliases": [
    "CVE-2021-28308"
  ],
  "summary": "Out of bounds read in fltk",
  "details": "An issue was discovered in the fltk crate before 0.15.3 for Rust. There is an out-of bounds read because the pixmap constructor lacks pixmap input validation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "fltk"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.15.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28308"
    },
    {
      "type": "WEB",
      "url": "https://github.com/MoAlyousef/fltk-rs/issues/519"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/MoAlyousef/fltk-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"172":{
  "schema_version": "1.2.0",
  "id": "GHSA-rh7x-ppxx-p34c",
  "modified": "2021-08-19T20:53:37Z",
  "published": "2021-08-25T20:49:32Z",
  "aliases": [
    "CVE-2020-35896"
  ],
  "summary": "Insufficient size checks in ws",
  "details": "An issue was discovered in the ws crate through 2020-09-25 for Rust. The outgoing buffer is not properly limited, leading to a remote memory-consumption attack.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ws"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35896"
    },
    {
      "type": "WEB",
      "url": "https://github.com/housleyjk/ws-rs/issues/291"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0043.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/housleyjk/ws-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"173":{
  "schema_version": "1.2.0",
  "id": "GHSA-48vq-8jqv-gm6f",
  "modified": "2021-08-02T21:53:41Z",
  "published": "2021-08-25T21:01:23Z",
  "aliases": [

  ],
  "summary": "Remote memory exhaustion in ckb",
  "details": "In the ckb sync protocol, SyncState maintains a HashMap called 'misbehavior' that keeps a score of a peer's violations of the protocol. This HashMap is keyed to PeerIndex (an alias for SessionId), and entries are never removed from it. SessionId is an integer that increases monotonically with every new connection.\n\nA remote attacker can manipulate this HashMap to grow forever, resulting in degraded performance and ultimately a panic on allocation failure or being killed by the OS, depending on the platform.\n\nThis is a critical severity security bug. It could be exploited to create a targeted or network-wide denial of service, to reduce the hash power of the network as part of a 51% attack, and perhaps in other creative ways.\n\nAn attack is trivial:\n\n1. connect to another node\n2. send an invalid sync protocol request, such as `SendHeaders` for non-consecutive blocks\n3. disconnect\n4. repeat",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ckb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.40.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/nervosnetwork/ckb/security/advisories/GHSA-48vq-8jqv-gm6f"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"174":{
  "schema_version": "1.2.0",
  "id": "GHSA-gmv4-vmx3-x9f3",
  "modified": "2021-08-19T20:52:14Z",
  "published": "2021-08-25T20:49:37Z",
  "aliases": [
    "CVE-2020-35914"
  ],
  "summary": "Data races in lock_api",
  "details": "An issue was discovered in the lock_api crate before 0.4.2 for Rust. A data race can occur because of RwLockWriteGuard unsoundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lock_api"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35914"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Amanieu/parking_lot/pull/262"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Amanieu/parking_lot"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"175":{
  "schema_version": "1.2.0",
  "id": "GHSA-cgmg-2v6m-fjg7",
  "modified": "2021-08-19T18:53:20Z",
  "published": "2021-08-25T20:50:41Z",
  "aliases": [
    "CVE-2020-36210"
  ],
  "summary": "Free of uninitialized memory in autorand",
  "details": "An issue was discovered in the autorand crate before 0.2.3 for Rust. Because of impl Random on arrays, uninitialized memory can be dropped when a panic occurs, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "autorand"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36210"
    },
    {
      "type": "WEB",
      "url": "https://github.com/mersinvald/autorand-rs/issues/5"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0103.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/mersinvald/autorand-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"176":{
  "schema_version": "1.2.0",
  "id": "GHSA-4qr3-m7ww-hh9g",
  "modified": "2022-01-06T20:21:05Z",
  "published": "2022-01-06T22:01:40Z",
  "aliases": [
    "CVE-2021-45717"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. commit_hook has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45717"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"177":{
  "schema_version": "1.2.0",
  "id": "GHSA-29v7-3v4c-gf38",
  "modified": "2021-08-18T20:23:35Z",
  "published": "2021-08-25T20:57:24Z",
  "aliases": [
    "CVE-2020-36454"
  ],
  "summary": "Data races in parc",
  "details": "An issue was discovered in the parc crate through 2020-11-14 for Rust. LockWeak<T> has an unconditional implementation of Send without trait bounds on T.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "parc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 1.0.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36454"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyyking/rustracts/pull/6"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/parc/RUSTSEC-2020-0134.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0134.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyyking/rustracts/tree/master/parc"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"178":{
  "schema_version": "1.2.0",
  "id": "GHSA-r88h-6987-g79f",
  "modified": "2021-08-18T23:32:42Z",
  "published": "2021-08-25T21:00:28Z",
  "aliases": [

  ],
  "summary": "Data races on syncpool",
  "details": "Affected versions of this crate unconditionally implements `Send` for `Bucket2`. This allows sending non-Send types to other threads.\n\nThis can lead to data races when non Send types like `Cell<T>` or `Rc<T>` are contained inside `Bucket2` and sent across thread boundaries. The data races can potentially lead to memory corruption (as demonstrated in the PoC from the original report issue).\n\nThe flaw was corrected in commit 15b2828 by adding a `T: Send` bound to the `Send` impl of `Bucket2<T>`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "syncpool"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/Chopinsky/byte_buffer/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/blob/main/crates/syncpool/RUSTSEC-2020-0142.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0142.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Chopinsky/byte_buffer/tree/master/syncpool"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"179":{
  "schema_version": "1.2.0",
  "id": "GHSA-fvhr-7j8m-3cvc",
  "modified": "2021-08-24T19:08:25Z",
  "published": "2021-08-25T20:57:02Z",
  "aliases": [
    "CVE-2020-36469"
  ],
  "summary": "Data races in appendix",
  "details": "The `appendix` crate implements a key-value mapping data structure called\n`Index<K, V>` that is stored on disk. The crate allows for any type to inhabit\nthe generic `K` and `V` type parameters and implements Send and Sync for them\nunconditionally.\n\nUsing a type that is not marked as `Send` or `Sync` with `Index` can allow it\nto be used across multiple threads leading to data races. Additionally using\nreference types for the keys or values will lead to the segmentation faults\nin the crate's code.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "appendix"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36469"
    },
    {
      "type": "WEB",
      "url": "https://github.com/krl/appendix/issues/6"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0149.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/krl/appendix"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"180":{
  "schema_version": "1.2.0",
  "id": "GHSA-cw4j-cf6c-mmfv",
  "modified": "2022-01-07T17:36:37Z",
  "published": "2022-01-06T22:14:24Z",
  "aliases": [
    "CVE-2021-45683"
  ],
  "summary": "Use of Uninitialized Resource in binjs_io.",
  "details": "An issue was discovered in the binjs_io crate through 2021-01-03 for Rust. The Read method may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "binjs_io"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45683"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/binjs_io/RUSTSEC-2021-0085.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0085.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Yoric/binjs-ref"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"181":{
  "schema_version": "1.2.0",
  "id": "GHSA-hr3c-6mmp-6m39",
  "modified": "2021-08-19T21:25:30Z",
  "published": "2021-08-25T20:42:57Z",
  "aliases": [
    "CVE-2018-20995"
  ],
  "summary": "Memory corruption slice-deque",
  "details": "An issue was discovered in the slice-deque crate before 0.1.16 for Rust. move_head_unchecked allows memory corruption because deque updates are mishandled.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "slice-deque"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.16"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20995"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0008.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gnzlbg/slice_deque"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"182":{
  "schema_version": "1.2.0",
  "id": "GHSA-m8h8-v6jh-c762",
  "modified": "2021-08-19T20:51:01Z",
  "published": "2021-08-25T20:49:43Z",
  "aliases": [
    "CVE-2020-35904"
  ],
  "summary": "Incorrect buffer size in crossbeam-channel",
  "details": "An issue was discovered in the crossbeam-channel crate before 0.4.4 for Rust. It has incorrect expectations about the relationship between the memory allocation and how many iterator elements there are.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crossbeam-channel"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35904"
    },
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/pull/533"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0052.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/crossbeam-rs/crossbeam"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-131"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"183":{
  "schema_version": "1.2.0",
  "id": "GHSA-4wj3-p7hj-cvx8",
  "modified": "2021-08-19T21:06:30Z",
  "published": "2021-08-25T20:48:47Z",
  "aliases": [
    "CVE-2020-35891"
  ],
  "summary": "Double free in ordnung",
  "details": "An issue was discovered in the ordnung crate through 2020-09-03 for Rust. compact::Vec violates memory safety via a remove() double free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ordnung"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.0.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35891"
    },
    {
      "type": "WEB",
      "url": "https://github.com/maciejhirsz/ordnung/issues/8"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/maciejhirsz/ordnung"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"184":{
  "schema_version": "1.2.0",
  "id": "GHSA-92cx-4xm7-jr9m",
  "modified": "2022-01-07T16:09:58Z",
  "published": "2022-01-06T22:02:56Z",
  "aliases": [
    "CVE-2021-45713"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. create_scalar_function has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45713"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"185":{
  "schema_version": "1.2.0",
  "id": "GHSA-39xg-8p43-h76x",
  "modified": "2021-08-19T18:49:46Z",
  "published": "2021-08-25T20:51:40Z",
  "aliases": [
    "CVE-2020-36203"
  ],
  "summary": "Data races in reffers",
  "details": "An issue was discovered in the reffers crate through 2020-12-01 for Rust. ARefss can contain a !Send,!Sync object, leading to a data race and memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "reffers"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.6.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36203"
    },
    {
      "type": "WEB",
      "url": "https://github.com/diwic/reffers-rs/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0094.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/diwic/reffers-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"186":{
  "schema_version": "1.2.0",
  "id": "GHSA-h3qr-rq2j-74w4",
  "modified": "2021-08-19T21:20:11Z",
  "published": "2021-08-25T20:46:08Z",
  "aliases": [
    "CVE-2020-35863"
  ],
  "summary": "HTTP Request Smuggling in hyper",
  "details": "An issue was discovered in the hyper crate before 0.12.34 for Rust. HTTP request smuggling can occur. Remote code execution can occur in certain situations with an HTTP server on the loopback interface.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.11.0","<": "0.12.34"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35863"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/issues/1925"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0008.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/hyper"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-444"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"187":{
  "schema_version": "1.2.0",
  "id": "GHSA-v362-2895-h9r2",
  "modified": "2022-01-07T20:44:44Z",
  "published": "2022-01-07T22:37:01Z",
  "aliases": [
    "CVE-2021-45720"
  ],
  "summary": "Use After Free in lru",
  "details": "An issue was discovered in the lru crate before 0.7.1 for Rust. The iterators have a use-after-free, as demonstrated by an access after a pop operation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lru"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45720"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/lru/RUSTSEC-2021-0130.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0130.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jeromefroe/lru-rs.git"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"188":{
  "schema_version": "1.2.0",
  "id": "GHSA-28ph-f7gx-fqj8",
  "modified": "2021-08-19T21:08:12Z",
  "published": "2021-08-25T20:47:57Z",
  "aliases": [
    "CVE-2020-35867"
  ],
  "summary": "Data races in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via create_module.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35867"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/3c6b57fe1b2cc87e7ebecde43dd836ffb1c4ea5c"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"189":{
  "schema_version": "1.2.0",
  "id": "GHSA-r98r-j25q-rmpr",
  "modified": "2021-08-19T21:19:54Z",
  "published": "2021-08-25T20:46:38Z",
  "aliases": [
    "CVE-2019-25010"
  ],
  "summary": "Type confusion in failure",
  "details": "An issue was discovered in the failure crate through 2019-11-13 for Rust. Type confusion can occur when __private_get_type_id__ is overridden.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "failure"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.8"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25010"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang-nursery/failure/issues/336"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0036.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-lang-nursery/failure"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-843"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"190":{
  "schema_version": "1.2.0",
  "id": "GHSA-w3g5-2848-2v8r",
  "modified": "2021-08-24T18:04:25Z",
  "published": "2021-08-25T20:57:05Z",
  "aliases": [
    "CVE-2020-36471"
  ],
  "summary": "Data races in generator",
  "details": "The `Generator` type is an iterable which uses a generator function that yields\nvalues. In affected versions of the crate, the provided function yielding values\nhad no `Send` bounds despite the `Generator` itself implementing `Send`.\n\nThe generator function lacking a `Send` bound means that types that are\ndangerous to send across threads such as `Rc` could be sent as part of a\ngenerator, potentially leading to data races.\n\nThis flaw was fixed in commit [`f7d120a3b`](https://github.com/Xudong-Huang/generator-rs/commit/f7d120a3b724d06a7b623d0a4306acf8f78cb4f0)\nby enforcing that the generator function be bound by `Send`.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generator"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36471"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/issues/27"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/commit/f7d120a3b724d06a7b623d0a4306acf8f78cb4f0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0151.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Xudong-Huang/generator-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"191":{
  "schema_version": "1.2.0",
  "id": "GHSA-2grh-hm3w-w7hv",
  "modified": "2021-08-18T21:30:23Z",
  "published": "2021-08-25T20:55:51Z",
  "aliases": [
    "CVE-2021-38191"
  ],
  "summary": "Race condition in tokio",
  "details": "An issue was discovered in the tokio crate before 1.8.1 for Rust. Upon a JoinHandle::abort, a Task may be dropped in the wrong thread.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "tokio::task::JoinHandle::abort"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "1.8.0","<": "1.8.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "tokio::task::JoinHandle::abort"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "1.7.0","<": "1.7.2"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "tokio::task::JoinHandle::abort"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "1.6.0","<": "1.6.3"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "tokio::task::JoinHandle::abort"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.3.0","<": "1.5.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38191"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tokio-rs/tokio/issues/3929"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tokio/RUSTSEC-2021-0072.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0072.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tokio-rs/tokio"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-366"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"192":{
  "schema_version": "1.2.0",
  "id": "GHSA-2gxj-qrp2-53jv",
  "modified": "2022-01-07T18:24:36Z",
  "published": "2022-01-06T22:11:11Z",
  "aliases": [
    "CVE-2021-45695"
  ],
  "summary": "Incorrect reliance on Trait memory layout in mopa",
  "details": "An issue was discovered in the mopa crate through 2021-06-01 for Rust. It incorrectly relies on Trait memory layout, possibly leading to future occurrences of arbitrary code execution or ASLR bypass.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "mopa"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45695"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/mopa/RUSTSEC-2021-0095.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0095.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/chris-morgan/mopa"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"193":{
  "schema_version": "1.2.0",
  "id": "GHSA-pwhf-7427-9vv2",
  "modified": "2021-08-18T20:39:03Z",
  "published": "2021-08-25T20:56:57Z",
  "aliases": [
    "CVE-2020-36468"
  ],
  "summary": "Non-atomic writes in cgc",
  "details": "An issue was discovered in the cgc crate through 2020-12-10 for Rust. Ptr::write performs non-atomic write operations on an underlying pointer.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cgc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.4.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36468"
    },
    {
      "type": "WEB",
      "url": "https://github.com/playXE/cgc/issues/5"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/cgc/RUSTSEC-2020-0148.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0148.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/playXE/cgc"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-657"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"194":{
  "schema_version": "1.2.0",
  "id": "GHSA-mm4m-qg48-f7wc",
  "modified": "2021-07-26T20:45:48Z",
  "published": "2021-08-25T21:01:29Z",
  "aliases": [
    "CVE-2020-13759"
  ],
  "summary": "Improper Synchronization and Race Condition in vm-memory",
  "details": "rust-vmm vm-memory before 0.1.1 and 0.2.x before 0.2.1 allows attackers to cause a denial of service (loss of IP networking) because read_obj and write_obj do not properly access memory. This affects aarch64 (with musl or glibc) and x86_64 (with musl).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "vm-memory"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "vm-memory"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.2.0","<": "0.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-13759"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-vmm/vm-memory/issues/93"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-vmm/vm-memory/releases/tag/v0.1.1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-vmm/vm-memory/releases/tag/v0.2.1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-662"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"195":{
  "schema_version": "1.2.0",
  "id": "GHSA-jv2r-jx6q-89jg",
  "modified": "2022-01-07T16:16:57Z",
  "published": "2022-01-06T22:16:32Z",
  "aliases": [
    "CVE-2021-45682"
  ],
  "summary": "Use of Uninitialized Resource in bronzedb-protocol.",
  "details": "An issue was discovered in the bronzedb-protocol crate through 2021-01-03 for Rust. ReadKVExt may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bronzedb-protocol"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45682"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/bronzedb-protocol/RUSTSEC-2021-0084.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0084.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Hexilee/BronzeDB"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"196":{
  "schema_version": "1.2.0",
  "id": "GHSA-566x-hhrf-qf8m",
  "modified": "2021-08-19T18:54:34Z",
  "published": "2021-08-25T20:50:30Z",
  "aliases": [
    "CVE-2020-35923"
  ],
  "summary": "Use after free in ordered-float",
  "details": "An issue was discovered in the ordered-float crate before 1.1.1 and 2.x before 2.0.1 for Rust. A NotNan value can contain a NaN.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ordered-float"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35923"
    },
    {
      "type": "WEB",
      "url": "https://github.com/reem/rust-ordered-float/pull/71"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0082.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/reem/rust-ordered-float"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"197":{
  "schema_version": "1.2.0",
  "id": "GHSA-29hg-r7c7-54fr",
  "modified": "2021-08-19T17:05:09Z",
  "published": "2021-08-25T20:55:06Z",
  "aliases": [
    "CVE-2021-29933"
  ],
  "summary": "Double free in insert_many",
  "details": "An issue was discovered in the insert_many crate through 2021-01-26 for Rust. Elements may be dropped twice if a .next() method panics.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "insert_many"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29933"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rphmeier/insert_many/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0042.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rphmeier/insert_many"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"198":{
  "schema_version": "1.2.0",
  "id": "GHSA-w9r2-qrpm-4rmj",
  "modified": "2021-08-18T20:36:20Z",
  "published": "2021-08-25T20:56:59Z",
  "aliases": [
    "CVE-2020-36470"
  ],
  "summary": "Data race in disrustor",
  "details": "An issue was discovered in the disrustor crate through 2020-12-17 for Rust. RingBuffer doe not properly limit the number of mutable references.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "disrustor"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36470"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sklose/disrustor/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0150.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sklose/disrustor"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"199":{
  "schema_version": "1.2.0",
  "id": "GHSA-hxjf-h2mh-r6hj",
  "modified": "2022-01-06T18:32:15Z",
  "published": "2022-01-06T22:20:12Z",
  "aliases": [
    "CVE-2018-25027"
  ],
  "summary": "Use After Free in libpulse-binding",
  "details": "An issue was discovered in the libpulse-binding crate before 1.2.1 for Rust. get_format_info can cause a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libpulse-binding"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25027"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/libpulse-binding/RUSTSEC-2018-0021.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0021.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jnqnfe/pulse-binding-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"200":{
  "schema_version": "1.2.0",
  "id": "GHSA-qxjq-v4wf-ppvh",
  "modified": "2021-08-19T20:50:45Z",
  "published": "2021-08-25T20:49:47Z",
  "aliases": [
    "CVE-2020-35903"
  ],
  "summary": "Out of bounds read in dync",
  "details": "An issue was discovered in the dync crate before 0.5.0 for Rust. VecCopy allows misaligned element access because u8 is not always the type in question.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "dync"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35903"
    },
    {
      "type": "WEB",
      "url": "https://github.com/elrnv/dync/issues/4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0050.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/elrnv/dync"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"201":{
  "schema_version": "1.2.0",
  "id": "GHSA-9hfg-pxr6-q4vp",
  "modified": "2022-01-07T18:25:56Z",
  "published": "2022-01-06T22:04:51Z",
  "aliases": [
    "CVE-2021-45709"
  ],
  "summary": "Use of a Broken or Risky Cryptographic Algorithm in crypto2",
  "details": "An issue was discovered in the crypto2 crate through 2021-10-08 for Rust. During Chacha20 encryption and decryption, an unaligned read of a u32 may occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crypto2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45709"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/crypto2/RUSTSEC-2021-0121.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0121.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/shadowsocks/crypto2"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-327"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"202":{
  "schema_version": "1.2.0",
  "id": "GHSA-hrjm-c879-pp86",
  "modified": "2021-08-19T21:19:40Z",
  "published": "2021-08-25T20:46:46Z",
  "aliases": [
    "CVE-2019-25003"
  ],
  "summary": "Side-channel timing attack in libsecp256k1",
  "details": "An issue was discovered in the libsecp256k1 crate before 0.3.1 for Rust. Scalar::check_overflow allows a timing side-channel attack; consequently, attackers can obtain sensitive information.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libsecp256k1"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25003"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/libsecp256k1/commit/11ba23a9766a5079918cd9f515bc100bc8164b50"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0027.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/paritytech/libsecp256k1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-208"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"203":{
  "schema_version": "1.2.0",
  "id": "GHSA-84rm-qf37-fgc2",
  "modified": "2021-08-19T17:35:19Z",
  "published": "2021-08-25T20:52:21Z",
  "aliases": [
    "CVE-2021-23841"
  ],
  "summary": "Integer Overflow in openssl-src",
  "details": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl-src"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "111.14"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23841"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=122a19ab48091c657f7cb1fb3af9fc07bd557bbf"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=6a51b9e1d0cf0bf8515f7201b68fb0a3482b3dc1"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=8252ee4d90f3f2004d3d0aeeed003ad49c9a7807"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=9b1129239f3ebb1d1c98ce9ed41d5c9476c47cb2"
    },
    {
      "type": "WEB",
      "url": "https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44846"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0058"
    },
    {
      "type": "WEB",
      "url": "https://security.gentoo.org/glsa/202103-03"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20210219-0009/"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20210513-0002/"
    },
    {
      "type": "WEB",
      "url": "https://support.apple.com/kb/HT212528"
    },
    {
      "type": "WEB",
      "url": "https://support.apple.com/kb/HT212529"
    },
    {
      "type": "WEB",
      "url": "https://support.apple.com/kb/HT212534"
    },
    {
      "type": "WEB",
      "url": "https://www.debian.org/security/2021/dsa-4855"
    },
    {
      "type": "WEB",
      "url": "https://www.openssl.org/news/secadv/20210216.txt"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-03"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-09"
    },
    {
      "type": "WEB",
      "url": "http://seclists.org/fulldisclosure/2021/May/67"
    },
    {
      "type": "WEB",
      "url": "http://seclists.org/fulldisclosure/2021/May/68"
    },
    {
      "type": "WEB",
      "url": "http://seclists.org/fulldisclosure/2021/May/70"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexcrichton/openssl-src-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"204":{
  "schema_version": "1.2.0",
  "id": "GHSA-rjh8-p66p-jrh5",
  "modified": "2021-08-19T21:18:47Z",
  "published": "2021-08-25T20:46:59Z",
  "aliases": [
    "CVE-2020-35871"
  ],
  "summary": "Data races in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via an Auxdata API data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35871"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"205":{
  "schema_version": "1.2.0",
  "id": "GHSA-2367-c296-3mp2",
  "modified": "2021-08-19T21:24:12Z",
  "published": "2021-08-25T20:43:54Z",
  "aliases": [
    "CVE-2018-20990"
  ],
  "summary": "Link following in tar",
  "details": "An issue was discovered in the tar crate before 0.4.16 for Rust. Arbitrary file overwrite can occur via a symlink or hardlink in a TAR archive.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tar"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.16"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20990"
    },
    {
      "type": "WEB",
      "url": "https://github.com/alexcrichton/tar-rs/pull/156"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0002.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexcrichton/tar-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-59"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"206":{
  "schema_version": "1.2.0",
  "id": "GHSA-j2r6-2m5c-vgh5",
  "modified": "2021-08-19T21:20:52Z",
  "published": "2021-08-25T20:45:20Z",
  "aliases": [
    "CVE-2019-25005"
  ],
  "summary": "Counter overflow in chacha20",
  "details": "An issue was discovered in the chacha20 crate before 0.2.3 for Rust. A ChaCha20 counter overflow makes it easier for attackers to determine plaintext.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "chacha20"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25005"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustCrypto/stream-ciphers/pull/64"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0029.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustCrypto/stream-ciphers/tree/master/chacha20"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"207":{
  "schema_version": "1.2.0",
  "id": "GHSA-wcxc-jf6c-8rx9",
  "modified": "2021-08-18T20:24:24Z",
  "published": "2021-08-25T20:57:21Z",
  "aliases": [

  ],
  "summary": " Uncaught Exception in libpulse-binding",
  "details": "Affected versions of this crate failed to catch panics crossing FFI boundaries via callbacks, which\nis a form of UB. This flaw was corrected by [this commit][1] which was included in version 2.6.0.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libpulse-binding"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.6.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/jnqnfe/pulse-binding-rust/commit/7fd282aef7787577c385aed88cb25d004b85f494"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jnqnfe/pulse-binding-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-248"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"208":{
  "schema_version": "1.2.0",
  "id": "GHSA-xjxc-vfw2-cg96",
  "modified": "2021-08-19T21:24:24Z",
  "published": "2021-08-25T20:43:45Z",
  "aliases": [
    "CVE-2018-20997"
  ],
  "summary": "Use after free in openssl",
  "details": "An issue was discovered in the openssl crate before 0.10.9 for Rust. A use-after-free occurs in CMS Signing.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.9"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20997"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sfackler/rust-openssl/pull/942"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0010.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sfackler/rust-openssl"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"209":{
  "schema_version": "1.2.0",
  "id": "GHSA-p4cr-64x4-f92f",
  "modified": "2022-01-07T16:21:25Z",
  "published": "2022-01-06T22:17:23Z",
  "aliases": [
    "CVE-2020-36514"
  ],
  "summary": "Use of Uninitialized Resource in acc_reader.",
  "details": "An issue was discovered in the acc_reader crate through 2020-12-27 for Rust. fill_buf may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "acc_reader"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 2.0.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36514"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/acc_reader/RUSTSEC-2020-0155.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0155.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/netvl/acc_reader"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"210":{
  "schema_version": "1.2.0",
  "id": "GHSA-6c65-xcf5-299x",
  "modified": "2021-08-18T17:52:08Z",
  "published": "2021-08-25T20:58:25Z",
  "aliases": [
    "CVE-2019-16144"
  ],
  "summary": "Uninitialized memory use in generator",
  "details": "An issue was discovered in the generator crate before 0.6.18 for Rust. Uninitialized memory is used by Scope, done, and yield_ during API calls.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generator"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.18"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16144"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/issues/13"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/issues/14"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/generator-rs/issues/9"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0020.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Xudong-Huang/generator-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"211":{
  "schema_version": "1.2.0",
  "id": "GHSA-8928-2fgm-6x9x",
  "modified": "2021-08-18T20:13:40Z",
  "published": "2021-08-25T20:58:21Z",
  "aliases": [
    "CVE-2021-38512"
  ],
  "summary": "HTTP Request Smuggling in actix-http",
  "details": "Affected versions of this crate did not properly detect invalid requests that could allow HTTP/1 request smuggling (HRS) attacks when running alongside a vulnerable front-end proxy server. This can result in leaked internal and/or user data, including credentials, when the front-end proxy is also vulnerable.\n\nPopular front-end proxies and load balancers already mitigate HRS attacks so it is recommended that they are also kept up to date; check your specific set up. You should upgrade even if the front-end proxy receives exclusively HTTP/2 traffic and connects to the back-end using HTTP/1; several downgrade attacks are known that can also expose HRS vulnerabilities.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-http"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38512"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-web/pull/2363"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-web/commit/e965d8298f421e9c89fe98b1300b8361e948c324"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/67URRW4K47SR6LNQB4YALPLGGQMQK7HO/"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/actix-http/RUSTSEC-2021-0081.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0081.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-web"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-444"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"212":{
  "schema_version": "1.2.0",
  "id": "GHSA-r6ff-2q3c-v3pv",
  "modified": "2021-08-09T17:13:06Z",
  "published": "2021-08-25T21:00:01Z",
  "aliases": [

  ],
  "summary": "Compiler optimisation leads to SEGFAULT",
  "details": "Affected versions of the `pnet` crate were optimized out by compiler, which caused dereference of uninitialized file descriptor which caused segfault.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pnet"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "pnet::transport::IcmpTransportChannelIterator"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.27.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/libpnet/libpnet/issues/449"
    },
    {
      "type": "WEB",
      "url": "https://github.com/libpnet/libpnet/pull/455"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0037.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/libpnet/libpnet"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"213":{
  "schema_version": "1.2.0",
  "id": "GHSA-hw4v-5x4h-c3xm",
  "modified": "2021-09-03T20:22:28Z",
  "published": "2021-09-01T18:22:48Z",
  "aliases": [
    "CVE-2021-39193"
  ],
  "summary": "Transaction validity oversight in pallet-ethereum",
  "details": "### Impact\n\nA bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints.\n\n### Patches\n\nPatches are applied in PR #465.\n\n### Workarounds\n\nNone.\n\n### References\n\nPatch PR: https://github.com/paritytech/frontier/pull/465\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Frontier repo](https://github.com/paritytech/frontier)\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "frontier"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/security/advisories/GHSA-hw4v-5x4h-c3xm"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39193"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/pull/465"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/pull/465/commits/8a2b890a2fb477d5fedd0e4335b00623832849ae"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/commit/0b962f218f0cdd796dadfe26c3f09e68f7861b26"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/commit/dd112e"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/paritytech/frontier"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"214":{
  "schema_version": "1.2.0",
  "id": "GHSA-q2x5-6q7q-r872",
  "modified": "2022-01-07T17:52:38Z",
  "published": "2022-01-06T22:10:17Z",
  "aliases": [
    "CVE-2021-45701"
  ],
  "summary": "Use After Free in tremor-script",
  "details": "An issue was discovered in the tremor-script crate before 0.11.6 for Rust. A patch operation may result in a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tremor-script"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.11.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45701"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tremor-script/RUSTSEC-2021-0111.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0111.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"215":{
  "schema_version": "1.2.0",
  "id": "GHSA-wcg3-cvx6-7396",
  "modified": "2021-10-18T20:47:30Z",
  "published": "2021-08-25T20:56:46Z",
  "aliases": [
    "CVE-2020-26235"
  ],
  "summary": "Segmentation fault in time",
  "details": "### Impact\n\nUnix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\nThe affected functions from time 0.2.7 through 0.2.22 are:\n\n- `time::UtcOffset::local_offset_at`\n- `time::UtcOffset::try_local_offset_at`\n- `time::UtcOffset::current_local_offset`\n- `time::UtcOffset::try_current_local_offset`\n- `time::OffsetDateTime::now_local`\n- `time::OffsetDateTime::try_now_local`\n\nThe affected functions in time 0.1 (all versions) are:\n\n- `at`\n- `at_utc`\n- `now`\n\nNon-Unix targets (including Windows and wasm) are unaffected.\n\n### Patches\n\nPending a proper fix, the internal method that determines the local offset has been modified to always return `None` on the affected operating systems. This has the effect of returning an `Err` on the `try_*` methods and `UTC` on the non-`try_*` methods.\n\nUsers and library authors with time in their dependency tree should perform `cargo update`, which will pull in the updated, unaffected code.\n\nUsers of time 0.1 do not have a patch and should upgrade to an unaffected version: time 0.2.23 or greater or the 0.3. series.\n\n### Workarounds\n\nNo workarounds are known.\n\n### References\n\ntime-rs/time#293",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "time"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.2.7","<": "0.2.23"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/time-rs/time/security/advisories/GHSA-wcg3-cvx6-7396"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26235"
    },
    {
      "type": "WEB",
      "url": "https://github.com/time-rs/time/issues/293"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0071.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/time-rs/time"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"216":{
  "schema_version": "1.2.0",
  "id": "GHSA-m3ww-7hrp-gw9w",
  "modified": "2021-08-19T21:08:59Z",
  "published": "2021-08-25T20:47:41Z",
  "aliases": [
    "CVE-2020-35878"
  ],
  "summary": "Drop of uninitialized memory in Ozone",
  "details": "An issue was discovered in the ozone crate through 2020-07-04 for Rust. Memory safety is violated because of the dropping of uninitialized memory.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ozone"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35878"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0022.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bqv/ozone"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"217":{
  "schema_version": "1.2.0",
  "id": "GHSA-87xh-9q6h-r5cc",
  "modified": "2022-01-07T16:08:56Z",
  "published": "2022-01-06T22:00:49Z",
  "aliases": [
    "CVE-2021-45715"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. create_window_function has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45715"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"218":{
  "schema_version": "1.2.0",
  "id": "GHSA-gh87-6jr3-8q47",
  "modified": "2021-08-19T18:45:43Z",
  "published": "2021-08-25T20:52:57Z",
  "aliases": [
    "CVE-2021-25903"
  ],
  "summary": "Null pointer deference in cache",
  "details": "An issue was discovered in the cache crate through 2021-01-01 for Rust. A raw pointer is dereferenced.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cache"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25903"
    },
    {
      "type": "WEB",
      "url": "https://github.com/krl/cache/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0006.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/krl/cache"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"219":{
  "schema_version": "1.2.0",
  "id": "GHSA-45w7-7g63-2m5w",
  "modified": "2021-08-30T21:56:02Z",
  "published": "2021-09-01T18:30:55Z",
  "aliases": [
    "CVE-2021-28035"
  ],
  "summary": "Drop of uninitialized memory in stack_dst",
  "details": "Affected versions of stack_dst used a push_inner function that increased the internal length of the array and then called val.clone(). If the val.clone() call panics, the stack could drop an already dropped element or drop uninitialized memory. This issue was fixed in 2a4d538 by increasing the length of the array after elements are cloned.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "stack_dst"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "stack_dst::StackA::push_cloned"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28035"
    },
    {
      "type": "WEB",
      "url": "https://github.com/thepowersgang/stack_dst-rs/issues/5"
    },
    {
      "type": "WEB",
      "url": "https://github.com/thepowersgang/stack_dst-rs/commit/2a4d538"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0033.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/thepowersgang/stack_dst-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"220":{
  "schema_version": "1.2.0",
  "id": "GHSA-8c6g-4xc5-w96c",
  "modified": "2021-08-19T21:24:16Z",
  "published": "2021-08-25T20:43:52Z",
  "aliases": [
    "CVE-2018-20992"
  ],
  "summary": "Uninitialized memory exposure in claxon",
  "details": "An issue was discovered in the claxon crate before 0.4.1 for Rust. Uninitialized memory can be exposed because certain decode buffer sizes are mishandled.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "claxon"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20992"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ruuda/claxon/commit/8f28ec275e412dd3af4f3cda460605512faf332c"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0004.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ruuda/claxon"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"221":{
  "schema_version": "1.2.0",
  "id": "GHSA-9p8q-j6q5-mjw8",
  "modified": "2022-02-25T15:29:16Z",
  "published": "2022-02-15T00:02:45Z",
  "aliases": [
    "CVE-2022-24988"
  ],
  "summary": "Buffer Overflow in galois_2p8",
  "details": "In galois_2p8 before 0.1.2, PrimitivePolynomialField::new has an off-by-one buffer overflow for a vector.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "galois_2p8"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24988"
    },
    {
      "type": "WEB",
      "url": "https://github.com/djsweet/galois_2p8/blob/master/CHANGELOG.md"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/djsweet/galois_2p8"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-120"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"222":{
  "schema_version": "1.2.0",
  "id": "GHSA-q9h2-4xhf-23xx",
  "modified": "2021-08-19T18:49:57Z",
  "published": "2021-08-25T20:51:36Z",
  "aliases": [
    "CVE-2020-36204"
  ],
  "summary": "Data races in im",
  "details": "An issue was discovered in the im crate through 2020-11-09 for Rust. Because TreeFocus does not have bounds on its Send trait or Sync trait, a data race can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "im"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "12.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36204"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/im-rs/issues/157"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0096.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/im-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"223":{
  "schema_version": "1.2.0",
  "id": "GHSA-fg42-vwxx-xx5j",
  "modified": "2021-08-18T19:41:50Z",
  "published": "2021-08-25T20:58:53Z",
  "aliases": [
    "CVE-2020-36438"
  ],
  "summary": "Data race in tiny_future",
  "details": "An issue was discovered in the tiny_future crate before 0.4.0 for Rust. Future<T> does not have bounds on its Send and Sync traits.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tiny_future"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36438"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tiny_future/RUSTSEC-2020-0118.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0118.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/KizzyCode/tiny_future"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"224":{
  "schema_version": "1.2.0",
  "id": "GHSA-v5r6-6r3c-wqxc",
  "modified": "2021-08-19T21:22:28Z",
  "published": "2021-08-25T20:44:56Z",
  "aliases": [
    "CVE-2019-15549"
  ],
  "summary": "Memory exhaustion in asn1_der",
  "details": "An issue was discovered in the asn1_der crate before 0.6.2 for Rust. Attackers can trigger memory exhaustion by supplying a large value in a length field.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "asn1_der"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15549"
    },
    {
      "type": "WEB",
      "url": "https://github.com/KizzyCode/asn1_der/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0007.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/KizzyCode/asn1_der"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"225":{
  "schema_version": "1.2.0",
  "id": "GHSA-c7fw-cr3w-wvfc",
  "modified": "2021-08-19T20:56:00Z",
  "published": "2021-08-25T20:49:04Z",
  "aliases": [
    "CVE-2020-35886"
  ],
  "summary": "Data races in arr",
  "details": "An issue was discovered in the arr crate through 2020-08-25 for Rust. An attacker can smuggle non-Sync/Send types across a thread boundary to cause a data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "arr"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.6.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35886"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sjep/array/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0034.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sjep/array"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"226":{
  "schema_version": "1.2.0",
  "id": "GHSA-gwfj-pw2x-h6c2",
  "modified": "2021-08-19T21:23:48Z",
  "published": "2021-08-25T20:43:56Z",
  "aliases": [
    "CVE-2019-15550"
  ],
  "summary": "Out of bounds read in simd-json",
  "details": "An issue was discovered in the simd-json crate before 0.1.15 for Rust. There is an out-of-bounds read and an incorrect crossing of a page boundary.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "simd-json"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15550"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Licenser/simdjson-rs/pull/27"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0008.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Licenser/simdjson-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"227":{
  "schema_version": "1.2.0",
  "id": "GHSA-36cg-4jff-5863",
  "modified": "2021-08-18T20:06:20Z",
  "published": "2021-08-25T20:59:13Z",
  "aliases": [
    "CVE-2020-36446"
  ],
  "summary": "Data races in signal-simple",
  "details": "An issue was discovered in the signal-simple crate through 2020-11-15 for Rust. There are unconditional implementations of Send and Sync for SyncChannel<T>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "signal-simple"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36446"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/signal-simple/RUSTSEC-2020-0126.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0126.html"
    },
    {
      "type": "PACKAGE",
      "url": "http://github.com/kitsuneninetails/signal-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"228":{
  "schema_version": "1.2.0",
  "id": "GHSA-7v2r-wxmg-mgvc",
  "modified": "2021-12-14T15:33:44Z",
  "published": "2021-08-25T20:48:56Z",
  "aliases": [
    "CVE-2020-35884"
  ],
  "summary": "HTTP Request smuggling in tiny_http",
  "details": "An issue was discovered in the tiny_http crate through 2020-06-16 for Rust. HTTP Request smuggling can occur via a malformed Transfer-Encoding header.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tiny_http"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35884"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tiny-http/tiny-http/issues/173"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tiny-http/tiny-http/pull/190"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M3JDNRE5RXJOWZZZF5QSCG4GUCSLTHF2/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VO6SRTCEPEYO2OX647I3H5XUWLFDRDWL/"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0031.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tiny-http/tiny-http"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-444"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"229":{
  "schema_version": "1.2.0",
  "id": "GHSA-pq6v-x7gp-7776",
  "modified": "2021-08-19T21:25:09Z",
  "published": "2021-08-25T20:43:09Z",
  "aliases": [
    "CVE-2016-10933"
  ],
  "summary": "Source code is downloaded over cleartext HTTP in portaudio",
  "details": "An issue was discovered in the portaudio crate through 0.7.0 for Rust. There is a man-in-the-middle issue because the source code is downloaded over cleartext HTTP.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "portaudio"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.7.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-10933"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustAudio/rust-portaudio/issues/144"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2016-0003.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustAudio/rust-portaudio"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-319"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"230":{
  "schema_version": "1.2.0",
  "id": "GHSA-jjx5-3f36-6927",
  "modified": "2021-08-18T21:31:51Z",
  "published": "2021-08-25T20:55:47Z",
  "aliases": [
    "CVE-2021-38188"
  ],
  "summary": "Incorrect buffer size calculation in iced-x86",
  "details": "An issue was discovered in the iced-x86 crate through 1.10.3 for Rust. In Decoder::new(), slice.get_unchecked(slice.length()) is used unsafely.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "iced-x86"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "iced_x86::Decoder::new"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.11.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38188"
    },
    {
      "type": "WEB",
      "url": "https://github.com/icedland/iced/issues/168"
    },
    {
      "type": "WEB",
      "url": "https://github.com/icedland/iced/commit/3c607a003e03b773108401d109167d1840487dce"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0068.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/icedland/iced"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-131"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"231":{
  "schema_version": "1.2.0",
  "id": "GHSA-hc92-9h3m-c39j",
  "modified": "2021-08-18T21:32:29Z",
  "published": "2021-08-25T20:55:45Z",
  "aliases": [
    "CVE-2021-38187"
  ],
  "summary": "Incorrect cast in anymap",
  "details": "An issue was discovered in the anymap crate through 0.12.1 for Rust. It violates soundness via conversion of a *u8 to a *u64.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "anymap"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.12.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38187"
    },
    {
      "type": "WEB",
      "url": "https://github.com/chris-morgan/anymap/issues/37"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0065.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/chris-morgan/anymap"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-681",
      "CWE-704"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"232":{
  "schema_version": "1.2.0",
  "id": "GHSA-v3j6-xf77-8r9c",
  "modified": "2021-08-19T20:51:41Z",
  "published": "2021-08-25T20:49:39Z",
  "aliases": [
    "CVE-2020-35901"
  ],
  "summary": "Use-after-free in actix-http",
  "details": "An issue was discovered in the actix-http crate before 2.0.0-alpha.1 for Rust. There is a use-after-free in BodyStream.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-http"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35901"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-web/issues/1321"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0048.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-web"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"233":{
  "schema_version": "1.2.0",
  "id": "GHSA-wv4p-jp67-jr97",
  "modified": "2021-08-19T18:56:53Z",
  "published": "2021-08-25T20:50:05Z",
  "aliases": [
    "CVE-2020-35925"
  ],
  "summary": "Data races in magnetic",
  "details": "An issue was discovered in the magnetic crate before 2.0.1 for Rust. MPMCConsumer and MPMCProducer allow cross-thread sending of a non-Send type.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "magnetic"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35925"
    },
    {
      "type": "WEB",
      "url": "https://github.com/johnshaw/magnetic/issues/9"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0088.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/johnshaw/magnetic"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"234":{
  "schema_version": "1.2.0",
  "id": "GHSA-8r7q-r9mx-35rh",
  "modified": "2021-08-19T21:18:40Z",
  "published": "2021-08-25T20:47:18Z",
  "aliases": [
    "CVE-2020-35869"
  ],
  "summary": "Mishandling of format strings in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated because rusqlite::trace::log mishandles format strings.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35869"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-134"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"235":{
  "schema_version": "1.2.0",
  "id": "GHSA-3cj3-jrrp-9rxf",
  "modified": "2021-08-19T17:44:11Z",
  "published": "2021-08-25T20:53:18Z",
  "aliases": [
    "CVE-2021-26958"
  ],
  "summary": "Unchecked Return Value in xcb",
  "details": "An issue was discovered in the xcb crate through 2021-02-04 for Rust. It has a soundness violation because transmutation to the wrong type can happen after xcb::base::cast_event uses std::mem::transmute to return a reference to an arbitrary type.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "xcb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26958"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/653"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rtbo/rust-xcb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-252"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"236":{
  "schema_version": "1.2.0",
  "id": "GHSA-6hfq-h8hq-87mf",
  "modified": "2021-08-18T21:07:17Z",
  "published": "2021-08-25T20:56:18Z",
  "aliases": [
    "CVE-2021-21299"
  ],
  "summary": "HTTP Request Smuggling in hyper",
  "details": "### Summary\n\nhyper's HTTP server code had a flaw that incorrectly understands some requests with multiple transfer-encoding headers to have a chunked payload, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that understands the request payload boundary differently can result in \"request smuggling\" or \"desync attacks\".\n\n### Vulnerability\n\nThe flaw was introduced in https://github.com/hyperium/hyper/commit/26417fc24a7d05df538e0f39239b373c5c3d61f6, released in v0.12.0.\n\nConsider this example request:\n\n```\nPOST /yolo HTTP/1.1\nTransfer-Encoding: chunked\nTransfer-Encoding: cow\n```\n\nThis request *should* be rejected, according to RFC 7230, since it has a `Transfer-Encoding` header, but after folding, it does not end in `chunked`. hyper would notice the `chunked` in the first line, and then check the second line, and thanks to a missing boolean assignment, *not* set the error condition. hyper would treat the payload as being `chunked`. By differing from the spec, it is possible to send requests like these to endpoints that have different HTTP implementations, with different interpretations of the payload semantics, and cause \"desync attacks\".\n\nThere are several parts of the spec that must also be checked, and hyper correctly handles all of those. Additionally, hyper's *client* does not allow sending requests with improper headers, so the misunderstanding cannot be propagated further.\n\nRead more about desync attacks: https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn\n\n### Impact\n\nTo determine if vulnerable, all these things must be true:\n\n- **Using hyper as an HTTP *server*.** The client is not affected.\n- **Using HTTP/1.1.** HTTP/2 does not use `transfer-encoding`.\n- **Using a vulnerable HTTP proxy upstream to hyper.** If an upstream proxy correctly rejects the illegal transfer-encoding headers, the desync attack cannot succeed. If there is *no* proxy upstream of hyper, hyper cannot *start* the desync attack, as the client will repair the headers before forwarding.\n\n### Patches\n\nWe have released and backported the following patch versions:\n\n- v0.14.3\n- v0.13.10\n\n### Workarounds\n\nBesides upgrading hyper, you can take the following options:\n\n- Reject requests that contain a `transfer-encoding` header.\n- Ensure any upstream proxy handles `transfer-encoding` correctly.\n\n### Credits\n\nThis issue was initially reported by ZeddYu Lu From Qi An Xin Technology Research Institute.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.14.0","<": "0.14.3"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.13.0","<": "0.13.10"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.12.0","<": "0.12.36"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/security/advisories/GHSA-6hfq-h8hq-87mf"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21299"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/commit/8f93123efef5c1361086688fe4f34c83c89cec02"
    },
    {
      "type": "WEB",
      "url": "https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0020.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/hyper"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-444"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"237":{
  "schema_version": "1.2.0",
  "id": "GHSA-vp6r-mrq9-8f4h",
  "modified": "2021-08-18T20:18:30Z",
  "published": "2021-08-25T20:58:11Z",
  "aliases": [
    "CVE-2020-36462"
  ],
  "summary": "Data race in syncpool",
  "details": "An issue was discovered in the syncpool crate before 0.1.6 for Rust. There is an unconditional implementation of Send for Bucket2.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "syncpool"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36462"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Chopinsky/byte_buffer/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/syncpool/RUSTSEC-2020-0142.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0142.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Chopinsky/byte_buffer/tree/master/syncpool"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"238":{
  "schema_version": "1.2.0",
  "id": "GHSA-gvvv-w559-2hg6",
  "modified": "2021-08-24T17:59:17Z",
  "published": "2021-08-25T20:57:17Z",
  "aliases": [
    "CVE-2020-36453"
  ],
  "summary": "Data races in scottqueue",
  "details": "An issue was discovered in the scottqueue crate through 2020-11-15 for Rust. There are unconditional implementations of Send and Sync for Queue<T>. This allows (1) creating data races to a `T: !Sync` and (2) sending `T: !Send` to other threads, resulting in memory corruption or other undefined behavior.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "scottqueue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36453"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rossdylan/rust-scottqueue/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0133.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rossdylan/rust-scottqueue"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"239":{
  "schema_version": "1.2.0",
  "id": "GHSA-77m6-x95j-75r5",
  "modified": "2021-08-18T20:00:14Z",
  "published": "2021-08-25T20:58:58Z",
  "aliases": [
    "CVE-2020-36439"
  ],
  "summary": "Data races in ticketed_lock",
  "details": "An issue was discovered in the ticketed_lock crate before 0.3.0 for Rust. There are unconditional implementations of Send for ReadTicket<T> and WriteTicket<T>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ticketed_lock"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36439"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ticketed_lock/RUSTSEC-2020-0119.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0119.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/kvark/ticketed_lock/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"240":{
  "schema_version": "1.2.0",
  "id": "GHSA-fg7r-2g4j-5cgr",
  "modified": "2022-01-07T18:26:27Z",
  "published": "2022-01-06T22:04:37Z",
  "aliases": [
    "CVE-2021-45710"
  ],
  "summary": "Race Condition in tokio",
  "details": "An issue was discovered in the tokio crate before 1.8.4, and 1.9.x through 1.13.x before 1.13.1, for Rust. In certain circumstances involving a closed oneshot channel, there is a data race and memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.8.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "1.9.0","<": "1.13.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45710"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tokio/RUSTSEC-2021-0124.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0124.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tokio-rs/tokio"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"241":{
  "schema_version": "1.2.0",
  "id": "GHSA-9qvw-46gf-4fv8",
  "modified": "2022-01-07T17:41:11Z",
  "published": "2022-01-06T22:09:07Z",
  "aliases": [
    "CVE-2021-45702"
  ],
  "summary": "Use After Free in tremor-script",
  "details": "An issue was discovered in the tremor-script crate before 0.11.6 for Rust. A merge operation may result in a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tremor-script"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.11.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45702"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tremor-script/RUSTSEC-2021-0111.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0111.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"242":{
  "schema_version": "1.2.0",
  "id": "GHSA-458v-4hrf-g3m4",
  "modified": "2021-08-24T17:42:57Z",
  "published": "2021-08-25T20:50:37Z",
  "aliases": [
    "CVE-2020-35920"
  ],
  "summary": "socket2 invalidly assumes the memory layout of std::net::SocketAddr",
  "details": "The socket2 crate has assumed `std::net::SocketAddrV4` and `std::net::SocketAddrV6` have the same memory layout as the system C representation `sockaddr`. It has simply casted the pointers to convert the socket addresses to the system representation. The standard library does not say anything about the memory layout, and this will cause invalid memory access if the standard library changes the implementation. No warnings or errors will be emitted once the change happens.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "socket2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.16"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35920"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/socket2-rs/issues/119"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0079.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-lang/socket2-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-188"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"243":{
  "schema_version": "1.2.0",
  "id": "GHSA-7mg7-m5c3-3hqj",
  "modified": "2021-08-24T17:47:15Z",
  "published": "2021-08-25T21:00:39Z",
  "withdrawn": "2021-08-24T17:47:15Z",
  "aliases": [

  ],
  "summary": "Data races in unicycle",
  "details": "Affected versions of this crate unconditionally implemented `Send` & `Sync` for types `PinSlab<T>` & `Unordered<T, S>`. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads.\n\nThis can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained within `PinSlab<T>` or `Unordered<T, S>` and accessed concurrently from multiple threads.\n\nThe flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait bound `T: Send` to `Send` impls for `PinSlab<T>` & `Unordered<T, S>` and adding `T: Sync` to `Sync` impls for `PinSlab<T>` & `Unordered<T, S>`.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "unicycle"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/udoprog/unicycle/issues/8"
    },
    {
      "type": "WEB",
      "url": "https://github.com/udoprog/unicycle/commit/6a6c367a0c25f86f998fa315ea90c328f685b194"
    },
    {
      "type": "WEB",
      "url": "https://github.com/udoprog/unicycle/commit/92f40b4a2c671553dfa96feacff0265206c44ce5"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0116.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/udoprog/unicycle"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"244":{
  "schema_version": "1.2.0",
  "id": "GHSA-vc5p-j8vw-mc6x",
  "modified": "2021-06-08T17:14:30Z",
  "published": "2021-08-25T21:01:47Z",
  "aliases": [
    "CVE-2021-31155"
  ],
  "summary": "Permissions bypass in pleaser",
  "details": "Failure to normalize the umask in pleaser before 0.4 allows a local attacker to gain full root privileges if they are allowed to execute at least one command.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pleaser"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31155"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/pleaser"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/edneville/please"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/edneville/please/-/tree/master/src/bin"
    },
    {
      "type": "WEB",
      "url": "https://www.openwall.com/lists/oss-security/2021/05/18/1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-269",
      "CWE-279"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"245":{
  "schema_version": "1.2.0",
  "id": "GHSA-f6f2-3w33-54r9",
  "modified": "2022-01-07T16:14:05Z",
  "published": "2022-01-06T22:02:36Z",
  "aliases": [
    "CVE-2021-45714"
  ],
  "summary": "Use After Free in rusqlite",
  "details": "An issue was discovered in the rusqlite crate 0.25.x before 0.25.4 and 0.26.x before 0.26.2 for Rust. create_aggregate_function has a use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.25.0","<": "0.25.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.26.0","<": "0.26.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45714"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/rusqlite/RUSTSEC-2021-0128.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"246":{
  "schema_version": "1.2.0",
  "id": "GHSA-3358-4f7f-p4j4",
  "modified": "2021-08-18T21:16:25Z",
  "published": "2021-08-25T20:56:12Z",
  "aliases": [
    "CVE-2020-36465"
  ],
  "summary": "Use after free in generic-array",
  "details": "An issue was discovered in the generic-array crate before 0.13.3 for Rust. It violates soundness by using the arr! macro to extend lifetimes.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generic-array"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.13.0","<": "0.13.3"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generic-array"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.12.0","<": "0.12.4"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generic-array"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.11.0","<": "0.11.2"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generic-array"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.10.0","<": "0.10.1"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "generic-array"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.8.0","<": "0.9.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36465"
    },
    {
      "type": "WEB",
      "url": "https://github.com/fizyk20/generic-array/issues/98"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0146.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/fizyk20/generic-array"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"247":{
  "schema_version": "1.2.0",
  "id": "GHSA-6mv9-qcx2-3hh3",
  "modified": "2021-11-15T14:48:03Z",
  "published": "2021-11-11T00:55:08Z",
  "aliases": [
    "CVE-2021-43174"
  ],
  "summary": "Memory exhaustion in routinator",
  "details": "NLnet Labs Routinator versions 0.9.0 up to and including 0.10.1, support the gzip transfer encoding when querying RRDP repositories. This encoding can be used by an RRDP repository to cause an out-of-memory crash in these versions of Routinator. RRDP uses XML which allows arbitrary amounts of white space in the encoded data. The gzip scheme compresses such white space extremely well, leading to very small compressed files that become huge when being decompressed for further processing, big enough that Routinator runs out of memory when parsing input data waiting for the next XML element.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "routinator"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.9.0","<": "0.10.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43174"
    },
    {
      "type": "WEB",
      "url": "https://www.debian.org/security/2022/dsa-5041"
    },
    {
      "type": "WEB",
      "url": "https://www.nlnetlabs.nl/downloads/routinator/CVE-2021-43172_CVE-2021-43173_CVE-2021-43174.txt"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/NLnetLabs/routinator"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"248":{
  "schema_version": "1.2.0",
  "id": "GHSA-r7rv-2rph-hvhj",
  "modified": "2021-08-19T18:48:19Z",
  "published": "2021-08-25T20:51:45Z",
  "aliases": [
    "CVE-2020-36218"
  ],
  "summary": "Improper synchronization in buttplug",
  "details": "An issue was discovered in the buttplug crate before 1.0.4 for Rust. ButtplugFutureStateShared does not properly consider (!Send|!Sync) objects, leading to a data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "buttplug"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36218"
    },
    {
      "type": "WEB",
      "url": "https://github.com/buttplugio/buttplug-rs/issues/225"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0112.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/buttplugio/buttplug-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"249":{
  "schema_version": "1.2.0",
  "id": "GHSA-v938-qcc9-rwv8",
  "modified": "2022-01-07T16:24:01Z",
  "published": "2022-01-06T22:17:09Z",
  "aliases": [
    "CVE-2020-36512"
  ],
  "summary": "Use of Uninitialized Resource in buffoon.",
  "details": "An issue was discovered in the buffoon crate through 2020-12-31 for Rust. InputStream::read_exact may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "buffoon"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.5.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36512"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/buffoon/RUSTSEC-2020-0154.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0154.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/carllerche/buffoon"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"250":{
  "schema_version": "1.2.0",
  "id": "GHSA-6vmq-jh76-hq43",
  "modified": "2021-08-19T17:03:35Z",
  "published": "2021-08-25T20:55:25Z",
  "aliases": [
    "CVE-2021-30454"
  ],
  "summary": "Uninitialized memory access in outer_cgi",
  "details": "An issue was discovered in the outer_cgi crate before 0.2.1 for Rust. A user-provided Read instance receives an uninitialized memory buffer from KeyValueReader.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "outer_cgi"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-30454"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SolraBizna/outer_cgi/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/SolraBizna/outer_cgi/commit/dd59b3066e616a08e756f72de8dc3ab11b7036c4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0051.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/SolraBizna/outer_cgi"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"251":{
  "schema_version": "1.2.0",
  "id": "GHSA-wgx2-6432-j3fw",
  "modified": "2021-08-19T21:07:53Z",
  "published": "2021-08-25T20:48:04Z",
  "aliases": [
    "CVE-2020-35880"
  ],
  "summary": "Unsoundness in bigint",
  "details": "An issue was discovered in the bigint crate through 2020-05-07 for Rust. It allows a soundness violation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bigint"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 4.4.3"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35880"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rustsec/advisory-db/pull/290"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/bigint/commit/7e71521a61b009afc94c91135353102658550d42"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0025.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/paritytech/bigint"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-704"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"252":{
  "schema_version": "1.2.0",
  "id": "GHSA-pvh2-pj76-4m96",
  "modified": "2021-10-25T20:07:57Z",
  "published": "2021-10-19T15:28:35Z",
  "aliases": [
    "CVE-2021-41153"
  ],
  "summary": "Specification non-compliance in JUMPI",
  "details": "### Impact \n\nIn `evm` crate `< 0.31.0`, `JUMPI` opcode's condition is checked after the destination validity check. However, according to Geth and OpenEthereum, the condition check should happen before the destination validity check.\n\n### Patches\n\nThis is a **high** severity security advisory if you use `evm` crate for Ethereum mainnet. In this case, you should update your library dependency immediately to on or after `0.31.0`.\n\nThis is a **low** severity security advisory if you use `evm` crate in Frontier or in a standalone blockchain, because there's no security exploit possible with this advisory. It is **not** recommended to update to on or after `0.31.0` until all the normal chain upgrade preparations have been done. If you use Frontier or other `pallet-evm` based Substrate blockchain, please ensure to update your `spec_version` before updating this. For other blockchains, please make sure to follow a hard-fork process before you update this.\n\n### Workarounds\n\nIf you are dependent on an older version of `evm` and cannot update due to API interface changes, please contact Wei by email (wei@that.world), who will be happy to help you to publish patch releases for older `evm` versions.\n\n### References\n\nFix PR: https://github.com/rust-blockchain/evm/pull/67\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in the `evm` repo.\n\n### Special thanks\n\nSpecial thanks to @rakita for reporting this issue.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "evm"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.31.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-blockchain/evm/security/advisories/GHSA-pvh2-pj76-4m96"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41153"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-blockchain/evm/pull/67"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-blockchain/evm"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-670"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"253":{
  "schema_version": "1.2.0",
  "id": "GHSA-hv7x-f3pv-gpwr",
  "modified": "2021-08-19T21:22:40Z",
  "published": "2021-08-25T20:44:46Z",
  "aliases": [
    "CVE-2019-16137"
  ],
  "summary": "Wrong memory orderings violates mutual exclusion in spin",
  "details": "An issue was discovered in the spin crate before 0.5.2 for Rust, when RwLock is used. Because memory ordering is mishandled, two writers can acquire the lock at the same time, violating mutual exclusion.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "spin"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16137"
    },
    {
      "type": "WEB",
      "url": "https://github.com/mvdnes/spin-rs/issues/65"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0013.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/mvdnes/spin-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"254":{
  "schema_version": "1.2.0",
  "id": "GHSA-rpcm-whqc-jfw8",
  "modified": "2021-08-19T21:22:31Z",
  "published": "2021-08-25T20:44:53Z",
  "aliases": [
    "CVE-2019-15552"
  ],
  "summary": "Use after free in libflate",
  "details": "An issue was discovered in the libflate crate before 0.1.25 for Rust. MultiDecoder::read has a use-after-free, leading to arbitrary code execution.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libflate"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.25"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15552"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sile/libflate/issues/35"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0010.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sile/libflate"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"255":{
  "schema_version": "1.2.0",
  "id": "GHSA-x4qm-mcjq-v2gf",
  "modified": "2021-08-18T21:29:54Z",
  "published": "2021-08-25T20:55:53Z",
  "aliases": [
    "CVE-2021-38192"
  ],
  "summary": "Overflow in prost-types",
  "details": "An issue was discovered in the prost-types crate before 0.8.0 for Rust. An overflow can occur during conversion from Timestamp to SystemTime.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "prost-types"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "prost_types::Timestamp::Into<SystemTime>"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38192"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tokio-rs/prost/issues/438"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0073.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tokio-rs/prost/tree/master/prost-types"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-120",
      "CWE-190"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"256":{
  "schema_version": "1.2.0",
  "id": "GHSA-pf3p-x6qj-6j7q",
  "modified": "2021-08-19T18:54:14Z",
  "published": "2021-08-25T20:50:33Z",
  "aliases": [
    "CVE-2020-35922"
  ],
  "summary": "mio invalidly assumes the memory layout of std::net::SocketAddr",
  "details": "An issue was discovered in the mio crate before 0.7.6 for Rust. It has false expectations about the std::net::SocketAddr memory representation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "mio"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.7.0","<": "0.7.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35922"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tokio-rs/mio/issues/1386"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0081.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tokio-rs/mio"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-188"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"257":{
  "schema_version": "1.2.0",
  "id": "GHSA-4xj5-vv9x-63jp",
  "modified": "2021-08-19T18:56:22Z",
  "published": "2021-08-25T20:50:22Z",
  "aliases": [
    "CVE-2020-35928"
  ],
  "summary": "Data races in concread",
  "details": "An issue was discovered in the concread crate before 0.2.6 for Rust. Attackers can cause an ARCache<K,V> data race by sending types that do not implement Send/Sync.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "concread"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.2.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35928"
    },
    {
      "type": "WEB",
      "url": "https://github.com/kanidm/concread/issues/48"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0092.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/kanidm/concread"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"258":{
  "schema_version": "1.2.0",
  "id": "GHSA-gx73-2498-r55c",
  "modified": "2021-08-19T21:19:36Z",
  "published": "2021-08-25T20:46:49Z",
  "aliases": [
    "CVE-2019-25004"
  ],
  "summary": "Unsound casting in flatbuffers",
  "details": "An issue was discovered in the flatbuffers crate before 0.6.1 for Rust. Arbitrary bytes can be reinterpreted as a bool, defeating soundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "flatbuffers"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "flatbuffers::Follow::follow"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.4.0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25004"
    },
    {
      "type": "WEB",
      "url": "https://github.com/google/flatbuffers/issues/5530"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0028.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/google/flatbuffers"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-704"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"259":{
  "schema_version": "1.2.0",
  "id": "GHSA-p2q9-9cq6-h3jw",
  "modified": "2021-08-19T21:08:51Z",
  "published": "2021-08-25T20:47:46Z",
  "aliases": [
    "CVE-2020-35877"
  ],
  "summary": "Out of bounds read in Ozone",
  "details": "An issue was discovered in the ozone crate through 2020-07-04 for Rust. Memory safety is violated because of out-of-bounds access.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ozone"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35877"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0022.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bqv/ozone"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"260":{
  "schema_version": "1.2.0",
  "id": "GHSA-8q64-wrfr-q48c",
  "modified": "2021-08-24T17:59:47Z",
  "published": "2021-08-25T20:59:24Z",
  "withdrawn": "2021-08-24T17:59:47Z",
  "aliases": [

  ],
  "summary": "Data races in model",
  "details": "`Shared` data structure in `model` crate implements `Send` and `Sync` traits regardless of the inner type.\nThis allows safe Rust code to trigger a data race, which is undefined behavior in Rust.\n\nUsers are advised to treat `Shared` as an unsafe type.\nIt should not be used outside of the testing context,\nand care must be taken so that the testing code does not have a data race\nbesides a race condition that is expected to be caught by the test.\n\nCheck [the Rustonomicon](https://doc.rust-lang.org/nomicon/races.html) for the difference between\na data race and a general race condition.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "model"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/spacejam/model/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0140.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/spacejam/model"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"261":{
  "schema_version": "1.2.0",
  "id": "GHSA-jqjj-r4qp-x2gh",
  "modified": "2022-01-07T16:25:54Z",
  "published": "2022-01-06T22:12:42Z",
  "aliases": [
    "CVE-2021-45693"
  ],
  "summary": "Use of Uninitialized Resource in messagepack-rs.",
  "details": "An issue was discovered in the messagepack-rs crate through 2021-01-26 for Rust. deserialize_string_primitive may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "messagepack-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.8.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45693"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/messagepack-rs/RUSTSEC-2021-0092.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0092.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/otake84/messagepack-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"262":{
  "schema_version": "1.2.0",
  "id": "GHSA-h3mf-4fwp-59c7",
  "modified": "2021-08-24T18:08:17Z",
  "published": "2021-08-05T19:58:06Z",
  "withdrawn": "2021-08-24T18:08:17Z",
  "aliases": [

  ],
  "summary": "VecStorage Deserialize Allows Violation of Length Invariant",
  "details": "The `Deserialize` implementation for `VecStorage` did not maintain the invariant that the number of elements must equal `nrows * ncols`. Deserialization of specially crafted inputs could allow memory access beyond allocation of the vector.\n\nThis flaw was introduced in v0.11.0 ([`086e6e`](https://github.com/dimforge/nalgebra/commit/086e6e719f53fecba6dadad2e953a487976387f5)) due to the addition of an automatically derived implementation of `Deserialize` for `MatrixVec`. `MatrixVec` was later renamed to `VecStorage` in v0.16.13 ([`0f66403`](https://github.com/dimforge/nalgebra/commit/0f66403cbbe9eeac15cedd8a906c0d6a3d8841f2)) and continued to use the automatically derived implementation of `Deserialize`.\n\nThis flaw was corrected in commit [`5bff536`](https://github.com/dimforge/nalgebra/commit/5bff5368bf38ddfa31416e4ae9897b163031a513) by returning an error during deserialization if the number of elements does not exactly match the expected size.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nalgebra"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.11.0","<": "0.27.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/issues/883"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/pull/889"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/commit/a803271fcce75b7c151e92aa099dfa546db4adc5"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/blob/dev/CHANGELOG.md#0270"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dimforge/nalgebra"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"263":{
  "schema_version": "1.2.0",
  "id": "GHSA-v42f-j8fx-99f3",
  "modified": "2021-08-24T17:58:36Z",
  "published": "2021-08-25T21:00:13Z",
  "withdrawn": "2021-08-24T17:58:36Z",
  "aliases": [

  ],
  "summary": "Queue<T> should have a Send bound on its Send/Sync traits",
  "details": "Affected versions of this crate unconditionally implements `Send`/`Sync` for `Queue<T>`.\n\nThis allows (1) creating data races to a `T: !Sync` and (2) sending `T: !Send` to other threads, resulting in memory corruption or other undefined behavior.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "scottqueue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rossdylan/rust-scottqueue/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0133.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rossdylan/rust-scottqueue"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"264":{
  "schema_version": "1.2.0",
  "id": "GHSA-r2x6-vrxx-jgv4",
  "modified": "2021-08-18T20:19:20Z",
  "published": "2021-08-25T20:58:07Z",
  "aliases": [
    "CVE-2020-36463"
  ],
  "summary": "Data races in multiqueue",
  "details": "An issue was discovered in the multiqueue crate through 2020-12-25 for Rust. There are unconditional implementations of Send for InnerSend<RW, T>, InnerRecv<RW, T>, FutInnerSend<RW, T>, and FutInnerRecv<RW, T>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "multiqueue"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36463"
    },
    {
      "type": "WEB",
      "url": "https://github.com/schets/multiqueue/issues/31"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/multiqueue/RUSTSEC-2020-0143.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0143.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/schets/multiqueue"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"265":{
  "schema_version": "1.2.0",
  "id": "GHSA-955p-rc5h-hg6h",
  "modified": "2021-08-19T17:08:56Z",
  "published": "2021-08-25T20:55:04Z",
  "aliases": [
    "CVE-2021-29931"
  ],
  "summary": "Double free in arenavec",
  "details": "An issue was discovered in the arenavec crate through 2021-01-12 for Rust. A double drop can sometimes occur upon a panic in T::drop().",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "arenavec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29931"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ibabushkin/arenavec/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0040.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ibabushkin/arenavec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"266":{
  "schema_version": "1.2.0",
  "id": "GHSA-vq23-5h4f-vwpv",
  "modified": "2021-07-26T17:17:19Z",
  "published": "2021-08-25T21:01:35Z",
  "aliases": [
    "CVE-2020-36212"
  ],
  "summary": "Update unsound DrainFilter and RString::retain",
  "details": "An issue was discovered in the abi_stable crate before 0.9.1 for Rust. DrainFilter lacks soundness because of a double drop.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "abi_stable"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36212"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rodrimati1992/abi_stable_crates/issues/44"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0105.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-672"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"267":{
  "schema_version": "1.2.0",
  "id": "GHSA-64wv-8vwp-xgw2",
  "modified": "2022-01-07T17:19:25Z",
  "published": "2022-01-06T22:13:02Z",
  "aliases": [
    "CVE-2021-45688"
  ],
  "summary": "Use of Uninitialized Resource in ash.",
  "details": "An issue was discovered in the ash crate before 0.33.1 for Rust. util::read_spv may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ash"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.33.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45688"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ash/RUSTSEC-2021-0090.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0090.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/MaikKlein/ash"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"268":{
  "schema_version": "1.2.0",
  "id": "GHSA-799f-r78p-gq9c",
  "modified": "2022-01-07T16:22:24Z",
  "published": "2022-01-06T22:17:38Z",
  "aliases": [
    "CVE-2020-36513"
  ],
  "summary": "Use of Uninitialized Resource in acc_reader.",
  "details": "An issue was discovered in the acc_reader crate through 2020-12-27 for Rust. read_up_to may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "acc_reader"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 2.0.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36513"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/acc_reader/RUSTSEC-2020-0155.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0155.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/netvl/acc_reader"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"269":{
  "schema_version": "1.2.0",
  "id": "GHSA-jwph-qp5h-f9wj",
  "modified": "2021-08-24T18:33:33Z",
  "published": "2021-08-25T20:59:18Z",
  "aliases": [
    "CVE-2020-36450"
  ],
  "summary": "Data races in bunch",
  "details": "An issue was discovered in the bunch crate through 2020-11-12 for Rust. \nAffected versions of this crate unconditionally implements `Send`/`Sync` for `Bunch<T>`.\nThis allows users to insert `T: !Sync` to `Bunch<T>`. It is possible to create a data race to a `T: !Sync` by invoking the `Bunch::get()` API (which returns `&T`) from multiple threads. It is also possible to send `T: !Send` to other threads by inserting `T` inside `Bunch<T>` and sending `Bunch<T>` to another thread, allowing to create a data race by inserting types like `T = Rc<_>`.\n\nSuch data races can lead to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bunch"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36450"
    },
    {
      "type": "WEB",
      "url": "https://github.com/krl/bunch/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/bunch/RUSTSEC-2020-0130.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0130.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/krl/bunch"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"270":{
  "schema_version": "1.2.0",
  "id": "GHSA-m7w4-8wp8-m2xq",
  "modified": "2021-08-24T18:35:48Z",
  "published": "2021-08-25T20:59:08Z",
  "aliases": [
    "CVE-2020-36442"
  ],
  "summary": "Data races in beef",
  "details": "An issue was discovered in the beef crate before 0.5.0 for Rust. \nAffected versions of this crate did not have a `T: Sync` bound in the `Send` impl for `Cow<'_, T, U>`. This allows users to create data races by making `Cow` contain types that are (Send && !Sync) like `Cell<_>` or `RefCell<_>`.\n\nSuch data races can lead to memory corruption.\n\nThe flaw was corrected in commit d1c7658 by adding trait bounds `T: Sync` and `T::Owned: Send` to the `Send` impl for `Cow<'_, T, U>`.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "beef"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36442"
    },
    {
      "type": "WEB",
      "url": "https://github.com/maciejhirsz/beef/issues/37"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0122.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/maciejhirsz/beef"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"271":{
  "schema_version": "1.2.0",
  "id": "GHSA-xp6v-qx65-4pp7",
  "modified": "2021-08-19T18:53:42Z",
  "published": "2021-08-25T20:50:39Z",
  "aliases": [
    "CVE-2020-36211"
  ],
  "summary": "Data races in gfwx",
  "details": "An issue was discovered in the gfwx crate before 0.3.0 for Rust. Because ImageChunkMut does not have bounds on its Send trait or Sync trait, a data race and memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "gfwx"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36211"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Devolutions/gfwx-rs/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0104.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Devolutions/gfwx-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"272":{
  "schema_version": "1.2.0",
  "id": "GHSA-6rhx-hqxm-8p36",
  "modified": "2021-08-19T21:19:45Z",
  "published": "2021-08-25T20:46:44Z",
  "aliases": [
    "CVE-2019-25009"
  ],
  "summary": "Double free in http",
  "details": "An issue was discovered in the http crate before 0.1.20 for Rust. The HeaderMap::Drain API can use a raw pointer, defeating soundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "http"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "http::header::HeaderMap::drain"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.20"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-25009"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0034.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"273":{
  "schema_version": "1.2.0",
  "id": "GHSA-xpwj-7v8q-mcgj",
  "modified": "2021-09-23T21:13:15Z",
  "published": "2021-09-23T23:18:03Z",
  "aliases": [
    "CVE-2021-32619"
  ],
  "summary": "Static imports inside dynamically imported modules do not adhere to permission checks",
  "details": "### Impact\n\nModules that are dynamically imported through `import()` or `new Worker` might have been able to bypass network and file system permission checks when statically importing other modules. In Deno 1.5.x and 1.6.x only programs dynamically importing (especially transitively) untrusted code are affected. In Deno 1.7.x all programs importing (especially transitively) untrusted code are affected.\n\nIn effect an attacker in control of a (possibly remote) module in a programs module graph has been able to, **irrespective of permissions**:\n1. initiate GET requests to arbitrary URLs on the internet (including LAN) and possibly read (parts of) the contents of these resources.\n2. check for existence of arbitrary paths on the file system, and possibly read (parts of) the contents of these files.\n\nIn Deno 1.5.x (October 27th, 2020) and Deno 1.6.x (December 8th, 2020) the attacker module had to have been granted permissions to load dynamically through the network / fs read permission. Since Deno 1.7.x (January 19th, 2021) this vulnerability was able to be exploited in a fully sandboxed isolate (without any permissions). This vulnerability was not present in releases prior to 1.5.0.\n\nArbitrary non-GET requests, control over request headers, or file system writes are not possible through this vulnerability. Users of the `deno_core`, `deno_runtime`, or other `deno_*` crates are not affected. This is a Deno CLI only vulnerability.\n\nWe are relatively confident this was not abused in the wild, as by default Deno prints out a green \"Download\" message when remote imports are downloaded, and this would have caused suspicion if it occurred in the middle of a programs execution. This message can be silenced with the `--quiet` flag.  \n\n### Patches\n\nThe vulnerability has been patched in Deno release 1.10.2. You can upgrade to the latest Deno version by running the `deno upgrade` command. The release is available through all official download channels. \n\n### Workarounds\n\nThere is no workaround for this issue.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue on [the issue tracker](https://github.com/denoland/deno)\n* Discuss on [Discord](https://discord.gg/deno)\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "deno"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "1.5.0","<": "1.10.2"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 1.10.1"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/denoland/deno/security/advisories/GHSA-xpwj-7v8q-mcgj"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32619"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/denoland/deno"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-285"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"274":{
  "schema_version": "1.2.0",
  "id": "GHSA-vw5m-qw2r-m923",
  "modified": "2022-01-07T17:13:28Z",
  "published": "2022-01-06T22:11:46Z",
  "aliases": [
    "CVE-2021-45690"
  ],
  "summary": "Use of Uninitialized Resource in messagepack-rs.",
  "details": "An issue was discovered in the messagepack-rs crate through 2021-01-26 for Rust. deserialize_binary may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "messagepack-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.8.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45690"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/messagepack-rs/RUSTSEC-2021-0092.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0092.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/otake84/messagepack-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"275":{
  "schema_version": "1.2.0",
  "id": "GHSA-gppw-3h6h-v6q2",
  "modified": "2021-08-19T17:26:00Z",
  "published": "2021-08-25T20:52:08Z",
  "aliases": [
    "CVE-2021-28037"
  ],
  "summary": "Data race in internment",
  "details": "An issue was discovered in the internment crate before 0.4.2 for Rust. There is a data race that can cause memory corruption because of the unconditional implementation of Sync for Intern<T>.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "internment"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28037"
    },
    {
      "type": "WEB",
      "url": "https://github.com/droundy/internment/issues/20"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0036.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/droundy/internment"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"276":{
  "schema_version": "1.2.0",
  "id": "GHSA-jphw-p3m6-pj3c",
  "modified": "2021-08-19T18:47:21Z",
  "published": "2021-08-25T20:51:54Z",
  "aliases": [
    "CVE-2020-36214"
  ],
  "summary": "Data races in multiqueue2",
  "details": "An issue was discovered in the multiqueue2 crate before 0.1.7 for Rust. Because a non-Send type can be sent to a different thread, a data race can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "multiqueue2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.7"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36214"
    },
    {
      "type": "WEB",
      "url": "https://github.com/abbychau/multiqueue2/issues/10"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0106.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/abbychau/multiqueue2"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"277":{
  "schema_version": "1.2.0",
  "id": "GHSA-jh2g-xhqq-x4w9",
  "modified": "2021-08-24T17:52:52Z",
  "published": "2021-08-25T21:00:07Z",
  "withdrawn": "2021-08-24T17:52:52Z",
  "aliases": [

  ],
  "summary": "Send/Sync bound needed on T  for Send/Sync impl of RcuCell<T>",
  "details": "Affected versions of this crate unconditionally implement Send/Sync for `RcuCell<T>`.\nThis allows users to send `T: !Send` to other threads (while `T` enclosed within `RcuCell<T>`), and allows users to concurrently access `T: !Sync` by using the APIs of `RcuCell<T>` that provide access to `&T`.\n\nThis can result in memory corruption caused by data races.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rcu_cell"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.9"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/rcu_cell/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/rcu_cell/pull/4/commits/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0131.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Xudong-Huang/rcu_cell"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"278":{
  "schema_version": "1.2.0",
  "id": "GHSA-gvcp-948f-8f2p",
  "modified": "2021-08-18T19:04:08Z",
  "published": "2021-08-25T20:59:04Z",
  "aliases": [
    "CVE-2020-36443"
  ],
  "summary": "Use of Uninitialized Resource in libp2p-deflate",
  "details": "An issue was discovered in the libp2p-deflate crate before 0.27.1 for Rust. An uninitialized buffer is passed to AsyncRead::poll_read(), which is a user-provided trait function.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libp2p-deflate"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.27.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36443"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0123.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/libp2p/rust-libp2p"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"279":{
  "schema_version": "1.2.0",
  "id": "GHSA-g4h2-4wvh-grc5",
  "modified": "2022-01-07T18:25:29Z",
  "published": "2022-01-06T22:05:05Z",
  "aliases": [
    "CVE-2021-45711"
  ],
  "summary": "Uncontrolled Resource Consumption in simple_asn1",
  "details": "An issue was discovered in the simple_asn1 crate 0.6.0 before 0.6.1 for Rust. There is a panic if UTCTime data, supplied by a remote attacker, has a second character greater than 0x7f.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "simple_asn1"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.6.0","<": "0.6.1"
            }
          ]
        }
      ],
      "versions": [
        "0.6.0"
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45711"
    },
    {
      "type": "WEB",
      "url": "https://github.com/acw/simple_asn1/issues/27"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/simple_asn1/RUSTSEC-2021-0125.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0125.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/acw/simple_asn1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"280":{
  "schema_version": "1.2.0",
  "id": "GHSA-9j8q-m9x5-9g6j",
  "modified": "2021-08-24T18:52:16Z",
  "published": "2021-08-25T20:59:11Z",
  "aliases": [
    "CVE-2020-36444"
  ],
  "summary": "Data races in async-coap",
  "details": "An issue was discovered in the async-coap crate through 2020-12-08 for Rust. \nAffected versions of this crate implement Send/Sync for `ArcGuard<RC, T>` with no trait bounds on `RC`. This allows users to send `RC: !Send` to other threads and also allows users to concurrently access `Rc: !Sync` from multiple threads.\n\nThis can result in memory corruption from data race or other undefined behavior caused by sending `T: !Send` to other threads (e.g. dropping `MutexGuard<T>` in another thread that didn't lock its mutex).\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "async-coap"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36444"
    },
    {
      "type": "WEB",
      "url": "https://github.com/google/rust-async-coap/issues/33"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0124.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/google/rust-async-coap"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"281":{
  "schema_version": "1.2.0",
  "id": "GHSA-w428-f65r-h4q2",
  "modified": "2022-01-07T17:23:21Z",
  "published": "2022-01-06T22:13:12Z",
  "aliases": [
    "CVE-2021-45687"
  ],
  "summary": "Deserialization of Untrusted Data in rust-cpuid",
  "details": "An issue was discovered in the raw-cpuid crate before 9.1.1 for Rust. If the serialize feature is used (which is not the the default), a Deserialize operation may lack sufficient validation, leading to memory corruption or a panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rust-cpuid"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "9.1.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45687"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/raw-cpuid/RUSTSEC-2021-0089.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0089.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gz/rust-cpuid"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-502"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"282":{
  "schema_version": "1.2.0",
  "id": "GHSA-5325-xw5m-phm3",
  "modified": "2021-08-18T21:28:38Z",
  "published": "2021-08-25T20:55:56Z",
  "aliases": [
    "CVE-2021-38193"
  ],
  "summary": "Cross-site Scripting in ammonia",
  "details": "An issue was discovered in the ammonia crate before 3.1.0 for Rust. XSS can occur because the parsing differences for HTML, SVG, and MathML are mishandled, a similar issue to CVE-2020-26870.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ammonia"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "3.0.0","<": "3.1.0"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ammonia"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.1.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38193"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-ammonia/ammonia/pull/142"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/ammonia/RUSTSEC-2021-0074.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0074.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-ammonia/ammonia"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-79"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"283":{
  "schema_version": "1.2.0",
  "id": "GHSA-x67x-vg9m-65c3",
  "modified": "2021-08-19T17:02:46Z",
  "published": "2021-08-25T20:55:27Z",
  "aliases": [
    "CVE-2017-1000430"
  ],
  "summary": "Integer overflow in base64",
  "details": "Affected versions of this crate suffered from an integer overflow bug when\ncalculating the size of a buffer to use when encoding base64 using the\n`encode_config_buf` and `encode_config` functions.  If the input string\nwas large, this would cause a buffer to be allocated that was too small.\nSince this function writes to the buffer using unsafe code, it would\nallow an attacker to write beyond the buffer, causing memory corruption\nand possibly the execution of arbitrary code.\n\nThis flaw was corrected by using checked arithmetic to calculate\nthe size of the buffer.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "base64"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000430"
    },
    {
      "type": "WEB",
      "url": "https://github.com/alicemaz/rust-base64/commit/24ead980daf11ba563e4fb2516187a56a71ad319"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2017-0004"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alicemaz/rust-base64"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"284":{
  "schema_version": "1.2.0",
  "id": "GHSA-8fgg-5v78-6g76",
  "modified": "2021-08-19T17:25:30Z",
  "published": "2021-08-25T20:52:03Z",
  "aliases": [
    "CVE-2021-28033"
  ],
  "summary": "Deserializing an array can free uninitialized memory in byte_struct",
  "details": "An issue was discovered in the byte_struct crate before 0.6.1 for Rust. There can be a drop of uninitialized memory if a certain deserialization method panics.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "byte_struct"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28033"
    },
    {
      "type": "WEB",
      "url": "https://github.com/wwylele/byte-struct-rs/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0032.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/wwylele/byte-struct-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"285":{
  "schema_version": "1.2.0",
  "id": "GHSA-9mp7-45qh-r8j8",
  "modified": "2022-01-07T17:34:40Z",
  "published": "2022-01-06T22:13:46Z",
  "aliases": [
    "CVE-2021-45685"
  ],
  "summary": "Use of Uninitialized Resource in columnar.",
  "details": "An issue was discovered in the columnar crate through 2021-01-07 for Rust. ColumnarReadExt::read_typed_vec may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "columnar"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.0.19"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45685"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/columnar/RUSTSEC-2021-0087.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0087.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/frankmcsherry/columnar.git"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"286":{
  "schema_version": "1.2.0",
  "id": "GHSA-3w8g-xr3f-2mp8",
  "modified": "2021-08-24T18:08:59Z",
  "published": "2021-08-25T20:55:49Z",
  "aliases": [
    "CVE-2021-38190"
  ],
  "summary": "Out of bounds write in nalgebra",
  "details": "The `Deserialize` implementation for `VecStorage` did not maintain the invariant that the number of elements must equal `nrows * ncols`. Deserialization of specially crafted inputs could allow memory access beyond allocation of the vector.\n\nThis flaw was introduced in v0.11.0 ([`086e6e`](https://github.com/dimforge/nalgebra/commit/086e6e719f53fecba6dadad2e953a487976387f5)) due to the addition of an automatically derived implementation of `Deserialize` for `MatrixVec`. `MatrixVec` was later renamed to `VecStorage` in v0.16.13 ([`0f66403`](https://github.com/dimforge/nalgebra/commit/0f66403cbbe9eeac15cedd8a906c0d6a3d8841f2)) and continued to use the automatically derived implementation of `Deserialize`.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "nalgebra"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.11.0","<": "0.27.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38190"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/issues/883"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/pull/889"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/commit/a803271fcce75b7c151e92aa099dfa546db4adc5"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dimforge/nalgebra/blob/dev/CHANGELOG.md#0270"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dimforge/nalgebra"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"287":{
  "schema_version": "1.2.0",
  "id": "GHSA-8hfj-xrj2-pm22",
  "modified": "2021-08-19T17:22:00Z",
  "published": "2021-08-25T20:54:00Z",
  "aliases": [
    "CVE-2021-3450"
  ],
  "summary": "Certificate check bypass in openssl-src",
  "details": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl-src"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "111.11","<": "111.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3450"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=2a40b7bc7b94dd7de897a74571e7024f0cf0d63b"
    },
    {
      "type": "WEB",
      "url": "https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845"
    },
    {
      "type": "WEB",
      "url": "https://kc.mcafee.com/corporate/index?page=content&id=SB10356"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/"
    },
    {
      "type": "WEB",
      "url": "https://mta.openssl.org/pipermail/openssl-announce/2021-March/000198.html"
    },
    {
      "type": "WEB",
      "url": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0056.html"
    },
    {
      "type": "WEB",
      "url": "https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc"
    },
    {
      "type": "WEB",
      "url": "https://security.gentoo.org/glsa/202103-03"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20210326-0006/"
    },
    {
      "type": "WEB",
      "url": "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd"
    },
    {
      "type": "WEB",
      "url": "https://www.openssl.org/news/secadv/20210325.txt"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-05"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-08"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-09"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/27/1"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/27/2"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/28/3"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/03/28/4"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-295"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"288":{
  "schema_version": "1.2.0",
  "id": "GHSA-jq65-29v4-4x35",
  "modified": "2021-08-19T21:21:21Z",
  "published": "2021-08-25T20:45:15Z",
  "aliases": [
    "CVE-2020-1967"
  ],
  "summary": "Null pointer deference in openssl-src ",
  "details": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "openssl-src"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "111.9"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-1967"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=eb563247aef3e83dda7679c43f9649270462e5b1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/irsl/CVE-2020-1967"
    },
    {
      "type": "WEB",
      "url": "https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44440"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r66ea9c436da150683432db5fbc8beb8ae01886c6459ac30c2cea7345@%3Cdev.tomcat.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r94d6ac3f010a38fccf4f432b12180a13fa1cf303559bd805648c9064@%3Cdev.tomcat.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.apache.org/thread.html/r9a41e304992ce6aec6585a87842b4f2e692604f5c892c37e3b0587ee@%3Cdev.tomcat.apache.org%3E"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DDHOAATPWJCXRNFMJ2SASDBBNU5RJONY/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EXDDAOWSAIEFQNBHWYE6PPYFV4QXGMCD/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XVEP3LAK4JSPRXFO4QF4GG2IVXADV3SO/"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0015.html"
    },
    {
      "type": "WEB",
      "url": "https://security.FreeBSD.org/advisories/FreeBSD-SA-20:11.openssl.asc"
    },
    {
      "type": "WEB",
      "url": "https://security.gentoo.org/glsa/202004-10"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20200424-0003/"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20200717-0004/"
    },
    {
      "type": "WEB",
      "url": "https://www.debian.org/security/2020/dsa-4661"
    },
    {
      "type": "WEB",
      "url": "https://www.openssl.org/news/secadv/20200421.txt"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com//security-alerts/cpujul2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuApr2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpujan2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpujul2020.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuoct2020.html"
    },
    {
      "type": "WEB",
      "url": "https://www.oracle.com/security-alerts/cpuoct2021.html"
    },
    {
      "type": "WEB",
      "url": "https://www.synology.com/security/advisory/Synology_SA_20_05"
    },
    {
      "type": "WEB",
      "url": "https://www.synology.com/security/advisory/Synology_SA_20_05_OpenSSL"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2020-03"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2020-04"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2020-11"
    },
    {
      "type": "WEB",
      "url": "https://www.tenable.com/security/tns-2021-10"
    },
    {
      "type": "WEB",
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00004.html"
    },
    {
      "type": "WEB",
      "url": "http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00011.html"
    },
    {
      "type": "WEB",
      "url": "http://packetstormsecurity.com/files/157527/OpenSSL-signature_algorithms_cert-Denial-Of-Service.html"
    },
    {
      "type": "WEB",
      "url": "http://seclists.org/fulldisclosure/2020/May/5"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2020/04/22/2"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"289":{
  "schema_version": "1.2.0",
  "id": "GHSA-mp6r-fgw2-rxfx",
  "modified": "2021-08-19T17:35:46Z",
  "published": "2021-08-25T20:53:27Z",
  "aliases": [
    "CVE-2021-26956"
  ],
  "summary": "Multiple soundness issues",
  "details": "An issue was discovered in the xcb crate through 2021-02-04 for Rust. It has a soundness violation because bytes from an X server can be interpreted as any data type returned by xcb::xproto::GetPropertyReply::value.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "xcb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26956"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/653"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rtbo/rust-xcb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-657"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"290":{
  "schema_version": "1.2.0",
  "id": "GHSA-369h-pjr2-6wrh",
  "modified": "2021-08-19T21:24:41Z",
  "published": "2021-08-25T20:43:16Z",
  "aliases": [
    "CVE-2018-20994"
  ],
  "summary": "Uncontrolled recursion in trust-dns-proto",
  "details": "An issue was discovered in the trust-dns-proto crate before 0.5.0-alpha.3 for Rust. There is infinite recursion because DNS message compression is mishandled.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "trust-dns-proto"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20994"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0007.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bluejekyll/trust-dns"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-674"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"291":{
  "schema_version": "1.2.0",
  "id": "GHSA-w9vv-q986-vj7x",
  "modified": "2021-08-19T17:09:13Z",
  "published": "2021-08-25T20:54:24Z",
  "aliases": [
    "CVE-2021-29934"
  ],
  "summary": "Out of bounds read in uu_od",
  "details": "An issue was discovered in PartialReader in the uu_od crate before 0.0.4 for Rust. Attackers can read the contents of uninitialized memory locations via a user-provided Read operation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "uu_od"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29934"
    },
    {
      "type": "WEB",
      "url": "https://github.com/uutils/coreutils/issues/1729"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0043.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/uutils/coreutils"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"292":{
  "schema_version": "1.2.0",
  "id": "GHSA-jrf8-cmgg-gv2m",
  "modified": "2021-08-19T18:02:32Z",
  "published": "2021-08-25T20:53:07Z",
  "aliases": [
    "CVE-2021-26307"
  ],
  "summary": "Error on unsupported architectures in raw-cpuid",
  "details": "An issue was discovered in the raw-cpuid crate before 9.0.0 for Rust. It allows __cpuid_count() calls even if the processor does not support the CPUID instruction, which is unsound and causes a deterministic crash.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "raw-cpuid"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "9.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26307"
    },
    {
      "type": "WEB",
      "url": "https://github.com/gz/rust-cpuid/issues/40"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/pull/614"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0013.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gz/rust-cpuid"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-657"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"293":{
  "schema_version": "1.2.0",
  "id": "GHSA-8rc5-mr4f-m243",
  "modified": "2021-08-19T21:18:55Z",
  "published": "2021-08-25T20:46:57Z",
  "aliases": [
    "CVE-2020-35876"
  ],
  "summary": "Use after free in rio",
  "details": "An issue was discovered in the rio crate through 2020-05-11 for Rust. A struct can be leaked, allowing attackers to obtain sensitive information, cause a use-after-free, or cause a data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rio"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.4"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35876"
    },
    {
      "type": "WEB",
      "url": "https://github.com/spacejam/rio/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://github.com/spacejam/rio/pull/31"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0021.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/spacejam/rio"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416",
      "CWE-772"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"294":{
  "schema_version": "1.2.0",
  "id": "GHSA-p5w9-856p-8q4g",
  "modified": "2021-08-24T17:42:08Z",
  "published": "2021-08-25T21:00:23Z",
  "withdrawn": "2021-08-24T17:42:08Z",
  "aliases": [

  ],
  "summary": "Assumed memory layout of std::net::SocketAddr",
  "details": "The [`socket2`](https://crates.io/crates/socket2) crate has assumed `std::net::SocketAddrV4`\nand `std::net::SocketAddrV6` have the same memory layout as the system C representation\n`sockaddr`. It has simply casted the pointers to convert the socket addresses to the\nsystem representation. The standard library does not say anything about the memory\nlayout, and this will cause invalid memory access if the standard library\nchanges the implementation. No warnings or errors will be emitted once the\nchange happens.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "socket2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.16"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/socket2-rs/issues/119"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0079.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-lang/socket2-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-824"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"295":{
  "schema_version": "1.2.0",
  "id": "GHSA-m5pq-gvj9-9vr8",
  "modified": "2022-03-08T20:00:36Z",
  "published": "2022-03-08T20:00:36Z",
  "aliases": [
    "CVE-2022-24713"
  ],
  "summary": "Regular expression denial of service in Rust's regex crate",
  "details": "> This is a cross-post of [the official security advisory][advisory]. The official advisory contains a signed version with our PGP key, as well.\n\n[advisory]: https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw\n\nThe Rust Security Response WG was notified that the `regex` crate did not properly limit the complexity of the regular expressions (regex) it parses. An attacker could use this security issue to perform a denial of service, by sending a specially crafted regex to a service accepting untrusted regexes. No known vulnerability is present when parsing untrusted input with trusted regexes.\n\nThis issue has been assigned CVE-2022-24713. The severity of this vulnerability is \"high\" when the `regex` crate is used to parse untrusted regexes. Other uses of the `regex` crate are not affected by this vulnerability.\n\n## Overview\n\nThe `regex` crate features built-in mitigations to prevent denial of service attacks caused by untrusted regexes, or untrusted input matched by trusted regexes. Those (tunable) mitigations already provide sane defaults to prevent attacks. This guarantee is documented and it's considered part of the crate's API.\n\nUnfortunately a bug was discovered in the mitigations designed to prevent untrusted regexes to take an arbitrary amount of time during parsing, and it's possible to craft regexes that bypass such mitigations. This makes it possible to perform denial of service attacks by sending specially crafted regexes to services accepting user-controlled, untrusted regexes.\n\n## Affected versions\n\nAll versions of the `regex` crate before or equal to 1.5.4 are affected by this issue. The fix is include starting from  `regex` 1.5.5.\n\n## Mitigations\n\nWe recommend everyone accepting user-controlled regexes to upgrade immediately to the latest version of the `regex` crate.\n\nUnfortunately there is no fixed set of problematic regexes, as there are practically infinite regexes that could be crafted to exploit this vulnerability. Because of this, we do not recommend denying known problematic regexes.\n\n## Acknowledgements\n\nWe want to thank Addison Crump for responsibly disclosing this to us according to the [Rust security policy](https://www.rust-lang.org/policies/security), and for helping review the fix.\n\nWe also want to thank Andrew Gallant for developing the fix, and Pietro Albini for coordinating the disclosure and writing this advisory.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "regex"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.5.5"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/regex/security/advisories/GHSA-m5pq-gvj9-9vr8"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/regex/commit/ae70b41d4f46641dbc45c7a4f87954aea356283e"
    },
    {
      "type": "WEB",
      "url": "https://groups.google.com/g/rustlang-security-announcements/c/NcNNL1Jq7Yw"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-lang/regex"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"296":{
  "schema_version": "1.2.0",
  "id": "GHSA-vqx7-pw4r-29rr",
  "modified": "2021-08-19T21:18:29Z",
  "published": "2021-08-25T20:47:13Z",
  "aliases": [
    "CVE-2020-35861"
  ],
  "summary": "Out of bounds read in bumpalo",
  "details": "An issue was discovered in the bumpalo crate before 3.2.1 for Rust. The realloc feature allows the reading of unknown memory. Attackers can potentially read cryptographic keys.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bumpalo"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "3.0.0","<": "3.2.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35861"
    },
    {
      "type": "WEB",
      "url": "https://github.com/fitzgen/bumpalo/issues/69"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0006.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/fitzgen/bumpalo"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"297":{
  "schema_version": "1.2.0",
  "id": "GHSA-rqgx-hpg4-456r",
  "modified": "2021-08-19T20:50:52Z",
  "published": "2021-08-25T20:49:45Z",
  "aliases": [
    "CVE-2020-35902"
  ],
  "summary": "Use-after-free in actix-codec",
  "details": "An issue was discovered in the actix-codec crate before 0.3.0-beta.1 for Rust. There is a use-after-free in Framed.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-codec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35902"
    },
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-net/issues/91"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0049.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-net"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"298":{
  "schema_version": "1.2.0",
  "id": "GHSA-3cgf-9m6x-pwwr",
  "modified": "2021-08-19T21:08:22Z",
  "published": "2021-08-25T20:47:50Z",
  "aliases": [
    "CVE-2020-35868"
  ],
  "summary": "Data races in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via UnlockNotification.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35868"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"299":{
  "schema_version": "1.2.0",
  "id": "GHSA-3mf3-2gv9-h39j",
  "modified": "2021-08-19T17:52:28Z",
  "published": "2021-08-25T20:53:14Z",
  "aliases": [
    "CVE-2021-26308"
  ],
  "summary": "Uninitialized buffer use in marc",
  "details": "An issue was discovered in the marc crate before 2.0.0 for Rust. A user-provided Read implementation can gain access to the old contents of newly allocated memory, violating soundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "marc"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26308"
    },
    {
      "type": "WEB",
      "url": "https://github.com/blackbeam/rust-marc/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/blackbeam/rust-marc"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"300":{
  "schema_version": "1.2.0",
  "id": "GHSA-6wp2-fw3v-mfmc",
  "modified": "2021-08-24T18:54:26Z",
  "published": "2021-08-25T20:57:19Z",
  "aliases": [
    "CVE-2020-36452"
  ],
  "summary": "Memory corruption in array-tools",
  "details": "An issue was discovered in the array-tools crate before 0.3.2 for Rust. Affected versions of this crate don't guard against panics, so that partially uninitialized buffer is dropped when user-provided `T::clone()` panics in `FixedCapacityDequeLike<T, A>::clone()`. This causes memory corruption.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "array-tools"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36452"
    },
    {
      "type": "WEB",
      "url": "https://github.com/L117/array-tools/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/array-tools/RUSTSEC-2020-0132.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0132.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/L117/array-tools"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908",
      "CWE-909"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"301":{
  "schema_version": "1.2.0",
  "id": "GHSA-w65j-g6c7-g3m4",
  "modified": "2021-08-24T19:13:30Z",
  "published": "2021-08-25T20:42:50Z",
  "aliases": [

  ],
  "summary": "Multiple memory safety issues in actix-web",
  "details": "Affected versions contain multiple memory safety issues, such as:\n\n - Unsoundly coercing immutable references to mutable references\n - Unsoundly extending lifetimes of strings\n - Adding the `Send` marker trait to objects that cannot be safely sent between threads\n\nThis may result in a variety of memory corruption scenarios, most likely use-after-free.\n \nA signficant refactoring effort has been conducted to resolve these issues.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "actix-web"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.15"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/actix/actix-web/issues/289"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0019"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/actix/actix-web"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"302":{
  "schema_version": "1.2.0",
  "id": "GHSA-5hpj-m323-cphm",
  "modified": "2021-08-19T17:15:33Z",
  "published": "2021-08-25T20:54:12Z",
  "aliases": [
    "CVE-2021-29940"
  ],
  "summary": "Double free in through",
  "details": "An issue was discovered in the through crate through 2021-02-18 for Rust. There is a double free (in through and through_and) upon a panic of the map function.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "through"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29940"
    },
    {
      "type": "WEB",
      "url": "https://github.com/gretchenfrage/through/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0049.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gretchenfrage/through"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"303":{
  "schema_version": "1.2.0",
  "id": "GHSA-327x-39hh-65wf",
  "modified": "2021-08-19T17:04:41Z",
  "published": "2021-08-25T20:55:09Z",
  "aliases": [
    "CVE-2021-29930"
  ],
  "summary": "Out of bounds write in arenavec",
  "details": "An issue was discovered in the arenavec crate through 0.1.1. A drop of uninitialized memory can sometimes occur upon a panic in T::default().",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "arenavec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29930"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ibabushkin/arenavec/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0040.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ibabushkin/arenavec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"304":{
  "schema_version": "1.2.0",
  "id": "GHSA-6p3c-v8vc-c244",
  "modified": "2022-01-07T17:57:26Z",
  "published": "2022-01-06T22:10:34Z",
  "aliases": [
    "CVE-2021-45697"
  ],
  "summary": "The `total_size` function for partial read the length of any `FixVec` is incorrect in molecule.",
  "details": "An issue was discovered in the molecule crate before 0.7.2 for Rust. A FixVec partial read has an incorrect result.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "molecule"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45697"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nervosnetwork/molecule/pull/49"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/molecule/RUSTSEC-2021-0103.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0103.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nervosnetwork/molecule"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"305":{
  "schema_version": "1.2.0",
  "id": "GHSA-3hj2-hh36-hv9v",
  "modified": "2021-08-19T18:47:06Z",
  "published": "2021-08-25T20:51:56Z",
  "aliases": [
    "CVE-2020-36220"
  ],
  "summary": "Data race in va-ts",
  "details": "An issue was discovered in the va-ts crate before 0.0.4 for Rust. Because Demuxer<T> omits a required T: Send bound, a data race and memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "va-ts"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36220"
    },
    {
      "type": "WEB",
      "url": "https://github.com/video-audio/va-ts/issues/4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0114.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/video-audio/va-ts"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-667",
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"306":{
  "schema_version": "1.2.0",
  "id": "GHSA-4vr9-8cjf-vf9c",
  "modified": "2021-10-08T22:14:28Z",
  "published": "2021-10-12T16:00:37Z",
  "aliases": [
    "CVE-2020-26281"
  ],
  "summary": "Async-h1 request smuggling possible with long unread bodies",
  "details": "### Impact\nThis vulnerability affects any webserver that uses async-h1 behind a reverse proxy, including all such Tide applications.\n\nIf the server does not read the body of a request which is longer than some buffer length, async-h1 will attempt to read a subsequent request from the body content starting at that offset into the body.\n\nOne way to exploit this vulnerability would be for an adversary to craft a request such that the body contains a request that would not be noticed by a reverse proxy, allowing it to forge forwarded/x-forwarded headers. If an application trusted the authenticity of these headers, it could be misled by the smuggled request.\n\nAnother potential concern with this vulnerability is that if a reverse proxy is sending multiple http clients' requests along the same keep-alive connection, it would be possible for the smuggled request to specify a long content and capture another user's request in its body. This content could be captured in a post request to an endpoint that allows the content to be subsequently retrieved by the adversary.\n\n\n### Patches\nThis has been addressed in async-h1 2.3.0 and previous versions have been yanked.\n\n### Workarounds\nnone\n\n### References\nhttps://github.com/http-rs/async-h1/releases/tag/v2.3.0\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [async-h1](https://github.com/http-rs/async-h1)\n* Contact a core team member on [zulip](https://http-rs.zulip-chat.com) or [discord](https://discord.gg/x2gKzst)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "async-h1"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/http-rs/async-h1/security/advisories/GHSA-4vr9-8cjf-vf9c"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26281"
    },
    {
      "type": "WEB",
      "url": "https://github.com/http-rs/async-h1/releases/tag/v2.3.0"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/http-rs/async-h1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-444"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"307":{
  "schema_version": "1.2.0",
  "id": "GHSA-4q4x-67hx-5mpg",
  "modified": "2021-08-19T21:23:31Z",
  "published": "2021-08-25T20:44:08Z",
  "aliases": [
    "CVE-2019-15545"
  ],
  "summary": "Failure to properly verify ed25519 signatures in libp2p-core",
  "details": "An issue was discovered in the libp2p-core crate before 0.8.1 for Rust. Attackers can spoof ed25519 signatures.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libp2p-core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15545"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0004.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/libp2p/rust-libp2p"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-347"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"308":{
  "schema_version": "1.2.0",
  "id": "GHSA-j42v-6wpm-r847",
  "modified": "2021-08-19T18:55:21Z",
  "published": "2021-08-25T20:50:26Z",
  "aliases": [
    "CVE-2020-35927"
  ],
  "summary": "Data races in thex",
  "details": "An issue was discovered in the thex crate through 2020-12-08 for Rust. Thex<T> allows cross-thread data races of non-Send types.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "thex"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35927"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0090.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"309":{
  "schema_version": "1.2.0",
  "id": "GHSA-2v78-j59h-fmpf",
  "modified": "2021-08-19T21:24:31Z",
  "published": "2021-08-25T20:43:23Z",
  "aliases": [
    "CVE-2018-21000"
  ],
  "summary": "Heap overflow or corruption in safe-transmute",
  "details": "An issue was discovered in the safe-transmute crate before 0.10.1 for Rust. A constructor's arguments are in the wrong order, causing heap memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "safe-transmute"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-21000"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nabijaczleweli/safe-transmute-rs/pull/36"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0013.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nabijaczleweli/safe-transmute-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"310":{
  "schema_version": "1.2.0",
  "id": "GHSA-wcvp-r8j8-47pc",
  "modified": "2021-08-30T21:56:42Z",
  "published": "2021-09-01T18:30:35Z",
  "aliases": [
    "CVE-2021-28028"
  ],
  "summary": "Double free in toodee",
  "details": "An issue was discovered in the toodee crate before 0.3.0 for Rust. Row insertion can cause a double free upon an iterator panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "toodee"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-28028"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0028.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/antonmarsden/toodee"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"311":{
  "schema_version": "1.2.0",
  "id": "GHSA-rccq-j2m7-8fwr",
  "modified": "2021-08-19T17:04:15Z",
  "published": "2021-08-25T20:55:14Z",
  "aliases": [
    "CVE-2021-30457"
  ],
  "summary": "Double-free in id-map",
  "details": "An issue was discovered in the id-map crate through 2021-02-26 for Rust. A double free can occur in remove_set upon a panic in a Drop impl.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "id-map"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-30457"
    },
    {
      "type": "WEB",
      "url": "https://github.com/andrewhickman/id-map/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0052.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/andrewhickman/id-map"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"312":{
  "schema_version": "1.2.0",
  "id": "GHSA-3r3g-g73x-g593",
  "modified": "2022-03-07T13:35:15Z",
  "published": "2021-10-12T16:06:47Z",
  "aliases": [
    "CVE-2021-20319"
  ],
  "summary": "Improper Verification of Cryptographic Signature in coreos",
  "details": "### Impact\n\ncoreos-installer fails to correctly verify GPG signatures when decompressing gzip-compressed artifacts.  This allows bypass of signature verification in cases where coreos-installer decompresses a downloaded OS image, allowing an attacker who can modify the OS image to compromise a newly-installed system.\n\nDefault installations from ISO or PXE media in Fedora CoreOS, RHEL CoreOS, and RHEL for Edge are **not** affected, as coreos-installer installs from an OS image shipped as part of the install media.\n\nThese flows are affected:\n\n1.  Installing with `--image-file`, `--image-url`, or `coreos.inst.image_url`.  For example, if a user has a local mirror of installation images, an attacker could replace an image with a gzip-compressed alternative (even if the file extension is `.xz`).  The result:\n\n    ```\n    $ coreos-installer install --image-url http://localhost:8080/image.xz /dev/loop0\n    Downloading image from http://localhost:8080/image.xz\n    Downloading signature from http://localhost:8080/image.xz.sig\n    > Read disk 749.9 MiB/749.9 MiB (100%)\n    gpg: Signature made Mon 20 Sep 2021 02:41:50 PM EDT\n    gpg: using RSA key 8C5BA6990BDB26E19F2A1A801161AE6945719A39\n    gpg: BAD signature from \"Fedora (34) <fedora-34-primary@fedoraproject.org>\" [ultimate]\n    Install complete.\n    ```\n\n    Notice that GPG reports a bad signature, but coreos-installer continues anyway.  Automation that relies on coreos-installer's exit status will not notice either.\n\n2. `coreos-installer download --decompress --image-url`:\n\n    ```\n    $ coreos-installer download --decompress --image-url http://localhost:8080/image.xz\n    > Read disk 749.9 MiB/749.9 MiB (100%)\n    gpg: Signature made Mon 20 Sep 2021 02:41:50 PM EDT\n    gpg: using RSA key 8C5BA6990BDB26E19F2A1A801161AE6945719A39\n    gpg: BAD signature from \"Fedora (34) <fedora-34-primary@fedoraproject.org>\" [ultimate]\n    ./image\n    ```\n\n    Again, coreos-installer reports success.\n\n3. Installing with default parameters, when **not** installing from the image built into live ISO or PXE media, if the hosting service is compromised or if an active attacker gains control of the HTTPS response.\n\n4. `coreos-installer download --decompress` if the hosting service is compromised or if an active attacker gains control of the HTTPS response.\n\n### Patches\n\nThe vulnerability is [fixed](https://github.com/coreos/coreos-installer/pull/659) in coreos-installer 0.10.1.\n\n### Workarounds\n\nFor `coreos-installer download`, do not use the `-d` or `--decompress` options.\n\nFor `coreos-installer install`, manually inspect the stderr output.  If `BAD signature` appears, do not boot from the target disk.  Note, however, that some OS services may have already accessed data on the compromised disk.\n\n### References\n\nFor more information, see [PR 655](https://github.com/coreos/coreos-installer/pull/655).\n\n### For more information\n\nIf you have any questions or comments about this advisory, [open an issue in coreos-installer](https://github.com/coreos/coreos-installer/issues/new/choose) or email the CoreOS [development mailing list](https://lists.fedoraproject.org/archives/list/coreos@lists.fedoraproject.org/).",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "coreos-installer"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/coreos/coreos-installer/security/advisories/GHSA-3r3g-g73x-g593"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-20319"
    },
    {
      "type": "WEB",
      "url": "https://github.com/coreos/coreos-installer/pull/655"
    },
    {
      "type": "WEB",
      "url": "https://github.com/coreos/coreos-installer/pull/659/commits/ad243c6f0eff2835b2da56ca5f7f33af76253c89"
    },
    {
      "type": "WEB",
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2011862"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/coreos/coreos-installer"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-347"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"313":{
  "schema_version": "1.2.0",
  "id": "GHSA-862g-9h5m-m3qv",
  "modified": "2021-11-04T17:11:09Z",
  "published": "2021-11-08T18:01:13Z",
  "aliases": [
    "CVE-2021-3917"
  ],
  "summary": "coreos-installer < 0.10.0 writes world-readable Ignition config to installed system",
  "details": "### Impact\nOn systems installed with coreos-installer before 0.10.0, the user-provided Ignition config was written to `/boot/ignition/config.ign` with world-readable permissions, granting unprivileged users access to any secrets included in the config.\n\nDefault configurations of Fedora CoreOS and RHEL CoreOS do not include any unprivileged user accounts.  In addition, instances launched from a cloud image, and systems provisioned with the `ignition.config.url` kernel argument, do not use the `config.ign` file and are unaffected.\n\n### Patches\ncoreos-installer 0.10.0 and later [writes](https://github.com/coreos/coreos-installer/pull/571) the Ignition config with restricted permissions.\n\n### Workarounds\n\nOn Fedora CoreOS systems installed from version 34.20210711.3.0 (stable), 34.20210711.2.0 (testing), 34.20210711.1.1 (next) and later, the `/boot/ignition` directory and its contents are removed after provisioning is complete. All Fedora CoreOS systems that have updated to these versions or later have automatically removed the `/boot/ignition` directory and no action is required.\n\nOn other systems, `/boot/ignition/config.ign` can be removed manually, as it is not used after provisioning is complete:\n\n```\nsudo mount -o remount,rw /boot\nsudo rm -rf /boot/ignition\n```\n\n### References\nFor more information, see https://github.com/coreos/fedora-coreos-tracker/issues/889.\n\n### For more information\nIf you have any questions or comments about this advisory, [open an issue in coreos-installer](https://github.com/coreos/coreos-installer/issues/new/choose) or email the CoreOS [development mailing list](https://lists.fedoraproject.org/archives/list/coreos@lists.fedoraproject.org/).",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "coreos-installer"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/coreos/coreos-installer/security/advisories/GHSA-862g-9h5m-m3qv"
    },
    {
      "type": "WEB",
      "url": "https://github.com/coreos/coreos-installer/commit/2a36405339c87b16ed6c76e91ad5b76638fbdb0c"
    },
    {
      "type": "WEB",
      "url": "https://github.com/coreos/coreos-installer/releases/tag/v0.10.0"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/coreos/coreos-installer/"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "LOW",
    "github_reviewed": true
  }
},"314":{
  "schema_version": "1.2.0",
  "id": "GHSA-cv7x-6rc6-pq5v",
  "modified": "2021-08-19T18:40:39Z",
  "published": "2021-08-25T20:53:05Z",
  "aliases": [
    "CVE-2021-25907"
  ],
  "summary": "Double free in containers",
  "details": "An issue was discovered in the containers crate before 0.9.11 for Rust. When a panic occurs, a util::{mutate,mutate2} double drop can be performed.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "containers"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.11"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25907"
    },
    {
      "type": "WEB",
      "url": "https://github.com/strake/containers.rs/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0010.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/strake/containers.rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"315":{
  "schema_version": "1.2.0",
  "id": "GHSA-mp6f-p9gp-vpj9",
  "modified": "2021-08-19T21:20:31Z",
  "published": "2021-08-25T20:46:06Z",
  "aliases": [
    "CVE-2020-25792"
  ],
  "summary": "Array size is not checked in sized-chunks",
  "details": "An issue was discovered in the sized-chunks crate through 0.6.2 for Rust. In the Chunk implementation, the array size is not checked when constructed with pair().",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "sized-chunks"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25792"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bodil/sized-chunks/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0041.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bodil/sized-chunks"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-129"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"316":{
  "schema_version": "1.2.0",
  "id": "GHSA-55m5-whcv-c49c",
  "modified": "2022-01-06T18:40:05Z",
  "published": "2022-01-06T22:20:28Z",
  "aliases": [
    "CVE-2018-25023"
  ],
  "summary": "Use of Uninitialized Resource in smallvec",
  "details": "An issue was discovered in the smallvec crate before 0.6.13 for Rust. It can create an uninitialized value of any type, including a reference type.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "smallvec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.13"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25023"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/smallvec/RUSTSEC-2018-0018.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0018.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/servo/rust-smallvec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"317":{
  "schema_version": "1.2.0",
  "id": "GHSA-rg4m-gww5-7p47",
  "modified": "2021-08-19T17:14:41Z",
  "published": "2021-08-25T20:54:18Z",
  "aliases": [
    "CVE-2021-29936"
  ],
  "summary": "Free of uninitialized memory in adtensor",
  "details": "An issue was discovered in the adtensor crate through 0.0.3 for Rust. There is a drop of uninitialized memory via the FromIterator implementation for Vector and Matrix.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "adtensor"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.0.3"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29936"
    },
    {
      "type": "WEB",
      "url": "https://github.com/charles-r-earp/adtensor/issues/4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0045.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/charles-r-earp/adtensor"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"318":{
  "schema_version": "1.2.0",
  "id": "GHSA-w7j2-35mf-95p7",
  "modified": "2021-08-19T17:35:01Z",
  "published": "2021-08-25T20:52:16Z",
  "aliases": [
    "CVE-2021-27378"
  ],
  "summary": "Incorrect check on buffer length in rand_core",
  "details": "An issue was discovered in the rand_core crate before 0.6.2 for Rust. Because read_u32_into and read_u64_into mishandle certain buffer-length checks, a random number generator may be seeded with too little data.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rand_core"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27378"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-random/rand/pull/1096"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0023.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-random/rand"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-330"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"319":{
  "schema_version": "1.2.0",
  "id": "GHSA-7j44-fv4x-79g9",
  "modified": "2021-08-19T21:22:57Z",
  "published": "2021-08-25T20:44:18Z",
  "aliases": [
    "CVE-2019-16141"
  ],
  "summary": "Improper Input Validation in once_cell",
  "details": "An issue was discovered in the once_cell crate before 1.0.1 for Rust. There is a panic during initialization of Lazy.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "once_cell"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.0.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16141"
    },
    {
      "type": "WEB",
      "url": "https://github.com/matklad/once_cell/issues/46"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0017.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/matklad/once_cell"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"320":{
  "schema_version": "1.2.0",
  "id": "GHSA-w47j-hqpf-qw9w",
  "modified": "2021-08-19T18:45:15Z",
  "published": "2021-08-25T20:52:59Z",
  "aliases": [
    "CVE-2021-25901"
  ],
  "summary": "Out of bounds read in lazy-init",
  "details": "An issue was discovered in the lazy-init crate through 2021-01-17 for Rust. Lazy lacks a Send bound, leading to a data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lazy-init"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25901"
    },
    {
      "type": "WEB",
      "url": "https://github.com/khuey/lazy-init/issues/9"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0004.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/khuey/lazy-init"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"321":{
  "schema_version": "1.2.0",
  "id": "GHSA-p9gf-gmfv-398m",
  "modified": "2021-08-19T17:14:58Z",
  "published": "2021-08-25T20:54:16Z",
  "aliases": [
    "CVE-2021-29938"
  ],
  "summary": "Double free in slice_deque",
  "details": "An issue was discovered in the slice-deque crate through 2021-02-19 for Rust. A double drop can occur in SliceDeque::drain_filter upon a panic in a predicate function.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "slice_deque"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29938"
    },
    {
      "type": "WEB",
      "url": "https://github.com/gnzlbg/slice_deque/issues/90"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0047.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gnzlbg/slice_deque"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"322":{
  "schema_version": "1.2.0",
  "id": "GHSA-vpw8-43wm-rxw5",
  "modified": "2021-08-19T17:21:10Z",
  "published": "2021-08-25T20:54:06Z",
  "aliases": [
    "CVE-2021-29929"
  ],
  "summary": "Double free in endian_trait",
  "details": "An issue was discovered in the endian_trait crate through 2021-01-04 for Rust. A double drop can occur when a user-provided Endian impl panics.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "endian_trait"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.6.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29929"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/myrrlyn/endian_trait/-/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0039.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://gitlab.com/myrrlyn/endian_trait"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"323":{
  "schema_version": "1.2.0",
  "id": "GHSA-v5m7-53cv-f3hx",
  "modified": "2021-08-18T20:38:06Z",
  "published": "2021-08-25T21:01:13Z",
  "aliases": [
    "CVE-2020-15254"
  ],
  "summary": "Undefined Behavior crossbeam-channel",
  "details": "### Impact\n\nThe affected version of this crate's the `bounded` channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements.\n\n### Patches\n\nThis has been fixed in crossbeam-channel 0.4.4.\n\nWe recommend users to upgrade to 0.4.4.\n\n### References\n\nSee https://github.com/crossbeam-rs/crossbeam/pull/533, https://github.com/crossbeam-rs/crossbeam/issues/539, and https://github.com/RustSec/advisory-db/pull/425 for more details.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crossbeam-channel"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15254"
    },
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/issues/539"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/pull/425"
    },
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/pull/533"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0052.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/crossbeam-rs/crossbeam"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"324":{
  "schema_version": "1.2.0",
  "id": "GHSA-j52m-489x-v634",
  "modified": "2021-08-19T21:23:06Z",
  "published": "2021-08-25T20:44:13Z",
  "aliases": [
    "CVE-2019-16880"
  ],
  "summary": "Double free in linea",
  "details": "An issue was discovered in the linea crate through 0.9.4 for Rust. There is double free in the Matrix::zip_elements method.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "linea"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16880"
    },
    {
      "type": "WEB",
      "url": "https://github.com/strake/linea.rs/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0021.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/strake/linea.rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"325":{
  "schema_version": "1.2.0",
  "id": "GHSA-vjrq-cg9x-rfjp",
  "modified": "2021-08-19T21:25:22Z",
  "published": "2021-08-25T20:43:02Z",
  "aliases": [
    "CVE-2017-18589"
  ],
  "summary": "Improper Input Validation in cookie",
  "details": "An issue was discovered in the cookie crate before 0.7.6 for Rust. Large integers in the Max-Age of a cookie cause a panic.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cookie"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-18589"
    },
    {
      "type": "WEB",
      "url": "https://github.com/alexcrichton/cookie-rs/pull/86"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2017-0005.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexcrichton/cookie-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"326":{
  "schema_version": "1.2.0",
  "id": "GHSA-49fq-pw77-6qxj",
  "modified": "2021-08-19T21:23:01Z",
  "published": "2021-08-25T20:44:15Z",
  "aliases": [
    "CVE-2019-16882"
  ],
  "summary": "Use after free in string-interner",
  "details": "An issue was discovered in the string-interner crate before 0.7.1 for Rust. It allows attackers to read from memory locations associated with dangling pointers, because of a cloning flaw.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "string-interner"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16882"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Robbepop/string-interner/issues/9"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0023.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Robbepop/string-interner"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"327":{
  "schema_version": "1.2.0",
  "id": "GHSA-3933-wvjf-pcvc",
  "modified": "2021-08-19T21:19:58Z",
  "published": "2021-08-25T20:46:16Z",
  "aliases": [
    "CVE-2020-35859"
  ],
  "summary": "Out of bounds access in lucet-runtime-internals",
  "details": "An issue was discovered in the lucet-runtime-internals crate before 0.5.1 for Rust. It mishandles sigstack allocation. Guest programs may be able to obtain sensitive information, or guest programs can experience memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lucet-runtime-internals"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.3"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lucet-runtime-internals"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.5.0","<": "0.5.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35859"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/lucet/pull/401"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0004.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/fastly/lucet"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125",
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"328":{
  "schema_version": "1.2.0",
  "id": "GHSA-mmc9-pwm7-qj5w",
  "modified": "2021-08-18T20:45:24Z",
  "published": "2021-08-25T20:56:50Z",
  "aliases": [
    "CVE-2020-25576"
  ],
  "summary": "Unaligned memory access in rand_core",
  "details": "### Impact\nAffected versions of this crate violated alignment when casting byte slices to integer slices, resulting in undefined behavior. `rand_core::BlockRng::next_u64` and `rand_core::BlockRng::fill_bytes` are affected.\n\n### Patches\nThe flaw was corrected by Ralf Jung and Diggory Hardy for `rand_core >= 0.4.2`.\n\n### Workarounds\nNone.\n\n### References\nSee [Rand's changelog](https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06).\n\n### For more information\nIf you have any questions or comments about this advisory, [open an issue in the Rand repository](https://github.com/rust-random/rand/issues/new/choose).\n\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rand_core"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "rand_core::BlockRng::fill_bytes",
          "rand_core::BlockRng::next_u64"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.4.0","<": "0.4.2"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rand_core"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "rand_core::BlockRng::fill_bytes",
          "rand_core::BlockRng::next_u64"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-random/rand/security/advisories/GHSA-mmc9-pwm7-qj5w"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0035.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-random/rand"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-704"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"329":{
  "schema_version": "1.2.0",
  "id": "GHSA-7j36-gc4r-9x3r",
  "modified": "2021-08-19T21:22:37Z",
  "published": "2021-08-25T20:44:48Z",
  "aliases": [
    "CVE-2019-16139"
  ],
  "summary": "Out of bounds access in compact_arena",
  "details": "An issue was discovered in the compact_arena crate before 0.4.0 for Rust. Generativity is mishandled, leading to an out-of-bounds write or read.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "compact_arena"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16139"
    },
    {
      "type": "WEB",
      "url": "https://github.com/llogiq/compact_arena/issues/22"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0015.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/llogiq/compact_arena"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125",
      "CWE-787"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"330":{
  "schema_version": "1.2.0",
  "id": "GHSA-686h-j8r8-wmfm",
  "modified": "2021-08-24T17:53:47Z",
  "published": "2021-08-25T20:57:14Z",
  "aliases": [
    "CVE-2020-36451"
  ],
  "summary": "Data races in rcu_cell",
  "details": "Affected versions of this crate unconditionally implement Send/Sync for `RcuCell<T>`.\nThis allows users to send `T: !Send` to other threads (while `T` enclosed within `RcuCell<T>`), and allows users to concurrently access `T: !Sync` by using the APIs of `RcuCell<T>` that provide access to `&T`.\n\nThis can result in memory corruption caused by data races.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rcu_cell"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.9"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36451"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/rcu_cell/issues/3"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/rcu_cell/pull/4"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Xudong-Huang/rcu_cell/pull/4/commits/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0131.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Xudong-Huang/rcu_cell"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"331":{
  "schema_version": "1.2.0",
  "id": "GHSA-64j8-7gp2-xjx5",
  "modified": "2021-08-19T18:54:53Z",
  "published": "2021-08-25T20:50:28Z",
  "aliases": [
    "CVE-2020-35924"
  ],
  "summary": "Data races in try-mutex",
  "details": "An issue was discovered in the try-mutex crate before 0.3.0 for Rust. TryMutex<T> allows cross-thread sending of a non-Send type.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "try-mutex"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35924"
    },
    {
      "type": "WEB",
      "url": "https://github.com/mpdn/try-mutex/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0087.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/mpdn/try-mutex"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"332":{
  "schema_version": "1.2.0",
  "id": "GHSA-vh4p-6j7g-f4j9",
  "modified": "2021-08-19T20:49:28Z",
  "published": "2021-08-25T20:49:56Z",
  "aliases": [
    "CVE-2020-35911"
  ],
  "summary": "Data races in lock_api",
  "details": "An issue was discovered in the lock_api crate before 0.4.2 for Rust. A data race can occur because of MappedRwLockReadGuard unsoundness.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lock_api"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35911"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Amanieu/parking_lot/pull/262"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0070.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Amanieu/parking_lot"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"333":{
  "schema_version": "1.2.0",
  "id": "GHSA-fhvj-7f9p-w788",
  "modified": "2021-08-19T20:56:25Z",
  "published": "2021-08-25T20:48:54Z",
  "aliases": [
    "CVE-2020-35887"
  ],
  "summary": "Buffer overflow in arr",
  "details": "An issue was discovered in the arr crate through 2020-08-25 for Rust. There is a buffer overflow in Index and IndexMut.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "arr"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.6.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35887"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sjep/array/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0034.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sjep/array"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-120"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"334":{
  "schema_version": "1.2.0",
  "id": "GHSA-qc84-gqf4-9926",
  "modified": "2022-02-25T15:42:42Z",
  "published": "2022-02-16T22:36:21Z",
  "aliases": [
    "CVE-2022-23639"
  ],
  "summary": "Improper Restriction of Operations within the Bounds of a Memory Buffer and Race Condition in crossbeam-utils",
  "details": "### Impact\n\nThe affected version of this crate incorrectly assumed that the alignment of `{i,u}64` was always the same as `Atomic{I,U}64`. \n\nHowever, the alignment of `{i,u}64` on a 32-bit target can be smaller than `Atomic{I,U}64`.\n\nThis can cause the following problems:\n\n- Unaligned memory accesses\n- Data race\n\nCrates using `fetch_*` methods with `AtomicCell<{i,u}64>` are affected by this issue.\n\n32-bit targets without `Atomic{I,U}64` and 64-bit targets are not affected by this issue.\n32-bit targets with `Atomic{I,U}64` and `{i,u}64` have the same alignment are also not affected by this issue.\n\nThe following is a complete list of the builtin targets that may be affected. (last update: nightly-2022-02-11)\n\n- armv7-apple-ios (tier 3)\n- armv7s-apple-ios (tier 3)\n- i386-apple-ios (tier 3)\n- i586-unknown-linux-gnu\n- i586-unknown-linux-musl\n- i686-apple-darwin (tier 3)\n- i686-linux-android\n- i686-unknown-freebsd\n- i686-unknown-haiku (tier 3)\n- i686-unknown-linux-gnu\n- i686-unknown-linux-musl\n- i686-unknown-netbsd (tier 3)\n- i686-unknown-openbsd (tier 3)\n- i686-wrs-vxworks (tier 3)\n\n([script to get list](https://gist.github.com/taiki-e/3c7891e8c5f5e0cbcb44d7396aabfe10))\n\n### Patches\n\nThis has been fixed in crossbeam-utils 0.8.7.\n\nAffected 0.8.x releases have been yanked.\n\n### References\n\nhttps://github.com/crossbeam-rs/crossbeam/pull/781 ",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "crossbeam-utils"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.7"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-qc84-gqf4-9926"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23639"
    },
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/pull/781"
    },
    {
      "type": "WEB",
      "url": "https://github.com/crossbeam-rs/crossbeam/releases/tag/crossbeam-utils-0.8.7"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/crossbeam-rs/crossbeam"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"335":{
  "schema_version": "1.2.0",
  "id": "GHSA-c5hx-w945-j4pq",
  "modified": "2022-01-07T18:29:04Z",
  "published": "2022-01-06T22:08:33Z",
  "aliases": [
    "CVE-2021-45706"
  ],
  "summary": "Memory flaw in zeroize_derive",
  "details": "An issue was discovered in the zeroize_derive crate before 1.1.1 for Rust. Dropped memory is not zeroed out for an enum.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "zeroize_derive"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.1.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45706"
    },
    {
      "type": "WEB",
      "url": "https://github.com/iqlusioninc/crates/issues/876"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/zeroize_derive/RUSTSEC-2021-0115.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0115.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/RustCrypto/utils/tree/master/zeroize/derive"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"336":{
  "schema_version": "1.2.0",
  "id": "GHSA-2jfv-g3fh-xq3v",
  "modified": "2021-08-19T21:19:01Z",
  "published": "2021-08-25T20:46:54Z",
  "aliases": [
    "CVE-2020-35875"
  ],
  "summary": "Excessive memory usage in tokio-rustls",
  "details": "An issue was discovered in the tokio-rustls crate before 0.13.1 for Rust. Excessive memory usage may occur when data arrives quickly.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio-rustls"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.12.0","<": "0.12.3"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tokio-rustls"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.13.0","<": "0.13.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35875"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tokio-rs/tls/pull/14"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tokio-rs/tls"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"337":{
  "schema_version": "1.2.0",
  "id": "GHSA-v2ch-fc8f-qm33",
  "modified": "2022-01-07T16:24:37Z",
  "published": "2022-01-06T22:16:57Z",
  "aliases": [
    "CVE-2020-36511"
  ],
  "summary": "Use of Uninitialized Resource in bite.",
  "details": "An issue was discovered in the bite crate through 2020-12-31 for Rust. read::BiteReadExpandedExt::read_framed_max may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "bite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.0.5"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36511"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/bite/RUSTSEC-2020-0153.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0153.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hinaria/bite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"338":{
  "schema_version": "1.2.0",
  "id": "GHSA-2xpg-3hx4-fm9r",
  "modified": "2021-08-19T17:44:08Z",
  "published": "2021-08-25T20:53:20Z",
  "aliases": [
    "CVE-2021-26957"
  ],
  "summary": "Out of bounds read in xcb",
  "details": "An issue was discovered in the xcb crate through 2021-02-04 for Rust. It has a soundness violation because there is an out-of-bounds read in xcb::xproto::change_property(), as demonstrated by a format=32 T=u8 situation where out-of-bounds bytes are sent to an X server.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "xcb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26957"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/653"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0019.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rtbo/rust-xcb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"339":{
  "schema_version": "1.2.0",
  "id": "GHSA-g4xg-fxmg-vcg5",
  "modified": "2021-09-07T21:16:08Z",
  "published": "2021-08-05T19:31:55Z",
  "aliases": [
    "CVE-2021-3013"
  ],
  "summary": "OS command injection in ripgrep",
  "details": "ripgrep before 13 on Windows allows attackers to trigger execution of arbitrary programs from the current working directory via the -z/--search-zip or --pre flag.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ripgrep"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "13.0.0"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "grep-cli"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "grep_cli::DecompressionReader::new"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-3013"
    },
    {
      "type": "WEB",
      "url": "https://github.com/BurntSushi/ripgrep/blob/e48a17e1891e1ea9dd06ba0e48d5fb140ca7c0c4/CHANGELOG.md"
    },
    {
      "type": "WEB",
      "url": "https://github.com/BurntSushi/ripgrep/blob/master/CHANGELOG.md"
    },
    {
      "type": "WEB",
      "url": "https://github.com/BurntSushi/ripgrep/blob/master/CHANGELOG.md#1300-2021-06-12"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0071.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/BurntSushi/ripgrep"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-78"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"340":{
  "schema_version": "1.2.0",
  "id": "GHSA-96w3-p368-4h8c",
  "modified": "2021-08-19T21:19:06Z",
  "published": "2021-08-25T20:46:51Z",
  "aliases": [
    "CVE-2020-35874"
  ],
  "summary": "Use after free in internment",
  "details": "An issue was discovered in the internment crate through 2020-05-28 for Rust. ArcIntern::drop has a race condition and resultant use-after-free.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "internment"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "internment::ArcIntern::drop"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.3.12","<": "0.4.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35874"
    },
    {
      "type": "WEB",
      "url": "https://github.com/droundy/internment/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0017.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/droundy/internment"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"341":{
  "schema_version": "1.2.0",
  "id": "GHSA-36xw-hgfv-jwm7",
  "modified": "2021-08-19T21:06:43Z",
  "published": "2021-08-25T20:48:36Z",
  "aliases": [
    "CVE-2020-35888"
  ],
  "summary": "Uninitialized memory drop in arr",
  "details": "An issue was discovered in the arr crate through 2020-08-25 for Rust. Uninitialized memory is dropped by Array::new_from_template.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "arr"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.6.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35888"
    },
    {
      "type": "WEB",
      "url": "https://github.com/sjep/array/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0034.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/sjep/array"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"342":{
  "schema_version": "1.2.0",
  "id": "GHSA-v666-6w97-pcwm",
  "modified": "2021-08-02T21:55:20Z",
  "published": "2021-08-25T21:01:21Z",
  "aliases": [

  ],
  "summary": "Miner fails to get block template when a cell used as a cell dep has been destroyed.",
  "details": "### Impact\n\nThe RPC `get_block_template` fails when a cell has been used as a cell dep and an input in the different transactions.\n\nSay cell C is used as a dep group in the transaction A, and is destroyed in the transaction B.\n\nThe node adds transaction A first, then B into the transaction pool. They are both valid. But when generating the block template, if the fee rate of B is higher, it comes before A, which will invalidate A. Currently the RPC `get_block_template` will fail instead of dropping A.\n\n### Patch\n\nFirst, the `get_block_template` should not fail but dropping the conflict transactions.\n\nThen we can propose solution to this issue. Here is an example. When a transaction is added to the pool, the pool must consider it depending on all the transactions which dep cell (direct or indirect via dep group) has been destroyed in this transaction. Because future transactions using the destroyed cells as dep will be rejected, the spending transaction only need to wait for all the existing dep transactions on chain.\n\n### Workaround\n\n1. Submit transaction B when A is already on chain.\n2. Let B depend on A explicitly, there are several solutions:\n    * a. Add any output cell on A as a dep cell or input in B.\n    * b. Merge A and B. CKB allows using the same cell as both dep and input in the same transaction.\n3. Ensure the fee rate of B is less than A so A always has higher priority.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ckb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.40.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/nervosnetwork/ckb/security/advisories/GHSA-v666-6w97-pcwm"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-367"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"343":{
  "schema_version": "1.2.0",
  "id": "GHSA-qrwc-jxf5-g8x6",
  "modified": "2021-08-19T21:06:35Z",
  "published": "2021-08-25T20:48:40Z",
  "aliases": [
    "CVE-2020-35890"
  ],
  "summary": "Out of bounds read in ordnung",
  "details": "An issue was discovered in the ordnung crate through 2020-09-03 for Rust. compact::Vec violates memory safety via out-of-bounds access for large capacity.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ordnung"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.0.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35890"
    },
    {
      "type": "WEB",
      "url": "https://github.com/maciejhirsz/ordnung/issues/8"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0038.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/maciejhirsz/ordnung"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"344":{
  "schema_version": "1.2.0",
  "id": "GHSA-6q5w-m3c5-rv95",
  "modified": "2021-08-19T21:08:01Z",
  "published": "2021-08-25T20:47:59Z",
  "aliases": [
    "CVE-2020-35866"
  ],
  "summary": "Data races in rusqlite",
  "details": "An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via VTab / VTabCursor.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rusqlite"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35866"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/commit/c9ef5bd63cad5c0c123344c072b490a1a9bcbe1f"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rusqlite/rusqlite/releases/tag/0.23.0"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0014.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rusqlite/rusqlite"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"345":{
  "schema_version": "1.2.0",
  "id": "GHSA-g489-xrw3-3v8w",
  "modified": "2021-08-19T18:51:25Z",
  "published": "2021-08-25T20:50:46Z",
  "aliases": [
    "CVE-2020-36207"
  ],
  "summary": "Data races in aovec",
  "details": "An issue was discovered in the aovec crate through 2020-12-10 for Rust. Because Aovec<T> does not have bounds on its Send trait or Sync trait, a data race and memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "aovec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 1.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36207"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0099.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/krl/aovec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"346":{
  "schema_version": "1.2.0",
  "id": "GHSA-mc36-5m36-hjh5",
  "modified": "2021-08-18T20:21:54Z",
  "published": "2021-08-25T20:58:00Z",
  "aliases": [
    "CVE-2020-36455"
  ],
  "summary": "Data races in slock",
  "details": "An issue was discovered in the slock crate through 2020-11-17 for Rust. Slock<T> unconditionally implements Send and Sync.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "slock"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.2"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36455"
    },
    {
      "type": "WEB",
      "url": "https://github.com/BrokenLamp/slock-rs/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/slock/RUSTSEC-2020-0135.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0135.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/BrokenLamp/slock-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"347":{
  "schema_version": "1.2.0",
  "id": "GHSA-69vj-xx27-g45w",
  "modified": "2021-08-19T18:47:45Z",
  "published": "2021-08-25T20:51:49Z",
  "aliases": [
    "CVE-2020-36216"
  ],
  "summary": "Data race in eventio",
  "details": "An issue was discovered in Input<R> in the eventio crate before 0.5.1 for Rust. Because a non-Send type can be sent to a different thread, a data race and memory corruption can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "eventio"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.5.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36216"
    },
    {
      "type": "WEB",
      "url": "https://github.com/petabi/eventio/issues/33"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0108.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/petabi/eventio"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-662",
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"348":{
  "schema_version": "1.2.0",
  "id": "GHSA-v935-pqmr-g8v9",
  "modified": "2021-11-03T15:02:32Z",
  "published": "2021-11-03T17:36:04Z",
  "aliases": [

  ],
  "summary": "Unexpected panics in num-bigint",
  "details": "### Impact\n\nTwo scenarios were reported where `BigInt` and `BigUint` multiplication may unexpectedly panic.\n\n- The internal `mac3` function did not expect the possibility of non-empty all-zero inputs, leading to an `unwrap()` panic.\n- A buffer was allocated with less capacity than needed for an intermediate result, leading to an assertion panic.\n\nRust panics can either cause stack unwinding or program abort, depending on the application configuration. In some settings, an unexpected panic may constitute a denial-of-service vulnerability.\n\n### Patches\nBoth problems were introduced in version 0.4.1, and are fixed in version 0.4.3.\n\n### For more information\nIf you have any questions or comments about this advisory, please open an issue in the [num-bigint](https://github.com/rust-num/num-bigint) repo.\n\n### Acknowledgements\nThanks to Guido Vranken and Arvid Norberg for privately reporting these issues to the author.\n\n### References\n* [GHSA-v935-pqmr-g8v9](https://github.com/rust-num/num-bigint/security/advisories/GHSA-v935-pqmr-g8v9)\n* [num-bigint#228](https://github.com/rust-num/num-bigint/pull/228)\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "num-bigint"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.4.1","<": "0.4.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-num/num-bigint/security/advisories/GHSA-v935-pqmr-g8v9"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-num/num-bigint/pull/228"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-num/num-bigint"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-131",
      "CWE-20"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"349":{
  "schema_version": "1.2.0",
  "id": "GHSA-x7vr-c387-8w57",
  "modified": "2021-08-18T21:33:41Z",
  "published": "2021-08-25T21:01:31Z",
  "aliases": [
    "CVE-2020-25574"
  ],
  "summary": "Integer Overflow/Infinite Loop in the http crate",
  "details": "An issue was discovered in the http crate before 0.1.20 for Rust. An integer overflow in HeaderMap::reserve() could result in denial of service (e.g., an infinite loop).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "http"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.20"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25574"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/http/issues/352"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0033.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/http"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190",
      "CWE-835"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"350":{
  "schema_version": "1.2.0",
  "id": "GHSA-hxw9-jxqw-jc8j",
  "modified": "2021-08-24T18:21:21Z",
  "published": "2021-08-25T20:58:05Z",
  "aliases": [
    "CVE-2020-36459"
  ],
  "summary": "Data races in dces",
  "details": "An issue was discovered in the dces crate through 2020-12-09 for Rust. The World type is marked as Send but lacks bounds on its EntityStore and ComponentStore. This allows non-thread safe `EntityStore` and `ComponentStore`s to be sent\nacross threads and cause data races.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "dces"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36459"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.redox-os.org/redox-os/dces-rust/-/issues/8"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/dces/RUSTSEC-2020-0139.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0139.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://gitlab.redox-os.org/redox-os/dces-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"351":{
  "schema_version": "1.2.0",
  "id": "GHSA-9wgh-vjj7-7433",
  "modified": "2021-08-19T20:49:50Z",
  "published": "2021-08-25T20:49:54Z",
  "aliases": [
    "CVE-2020-35916"
  ],
  "summary": "Mutable reference with immutable provenance in image",
  "details": "An issue was discovered in the image crate before 0.23.12 for Rust. A Mutable reference has immutable provenance. (In the case of LLVM, the IR may be always correct.)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "image"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "image::Bgr::from_slice_mut",
          "image::Bgra::from_slice_mut",
          "image::Luma::from_slice_mut",
          "image::LumaA::from_slice_mut",
          "image::Rgb::from_slice_mut",
          "image::Rgba::from_slice_mut"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.23.12"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35916"
    },
    {
      "type": "WEB",
      "url": "https://github.com/image-rs/image/issues/1357"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0073.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/image-rs/image"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"352":{
  "schema_version": "1.2.0",
  "id": "GHSA-w5cr-frph-hw7f",
  "modified": "2021-05-25T20:52:53Z",
  "published": "2021-08-25T21:01:50Z",
  "aliases": [
    "CVE-2021-31919"
  ],
  "summary": "Use of uninitialized buffer in rkyv",
  "details": "An issue was discovered in the rkyv crate before 0.6.0 for Rust. When an archive is created via serialization, the archive content may contain uninitialized values of certain parts of a struct.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rkyv"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31919"
    },
    {
      "type": "WEB",
      "url": "https://github.com/djkoloski/rkyv/commit/9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e"
    },
    {
      "type": "WEB",
      "url": "https://github.com/djkoloski/rkyv/commit/f141b560523a20557db6540576d153010bd18712"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0054.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"353":{
  "schema_version": "1.2.0",
  "id": "GHSA-5hp8-35wj-m525",
  "modified": "2021-08-19T21:23:38Z",
  "published": "2021-08-25T20:44:03Z",
  "aliases": [
    "CVE-2019-15542"
  ],
  "summary": "Uncontrolled recursion in ammonia",
  "details": "An issue was discovered in the ammonia crate before 2.1.0 for Rust. There is uncontrolled recursion during HTML DOM tree serialization.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ammonia"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.1.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15542"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-ammonia/ammonia/blob/master/CHANGELOG.md#210"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0001.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-ammonia/ammonia"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-674"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"354":{
  "schema_version": "1.2.0",
  "id": "GHSA-c8hq-x4mm-p6q6",
  "modified": "2021-08-19T18:50:43Z",
  "published": "2021-08-25T20:50:54Z",
  "aliases": [
    "CVE-2020-36205"
  ],
  "summary": "Memory handling issues in xcb",
  "details": "An issue was discovered in the xcb crate through 2020-12-10 for Rust. base::Error does not have soundness. Because of the public ptr field, a use-after-free or double-free can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "xcb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.9.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36205"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rtbo/rust-xcb/issues/93"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0097.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rtbo/rust-xcb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415",
      "CWE-416"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"355":{
  "schema_version": "1.2.0",
  "id": "GHSA-xwqr-xmgg-j69q",
  "modified": "2022-02-08T19:45:10Z",
  "published": "2022-01-28T22:59:28Z",
  "aliases": [
    "CVE-2021-46102"
  ],
  "summary": "Integer overflow in solana_rbpf",
  "details": "From version 0.2.14 to 0.2.16 for Solana rBPF, function \"relocate\" in the file src/elf.rs has an integer overflow bug because the sym.st_value is read directly from ELF file without checking. If the sym.st_value is rather large, an integer overflow is triggered while calculating the variable \"addr\" via \"addr = (sym.st_value + refd_pa) as u64\";",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "solana_rbpf"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.2.14","<": "0.2.17"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-46102"
    },
    {
      "type": "WEB",
      "url": "https://github.com/solana-labs/rbpf/pull/200"
    },
    {
      "type": "WEB",
      "url": "https://github.com/solana-labs/rbpf/pull/236"
    },
    {
      "type": "WEB",
      "url": "https://blocksecteam.medium.com/new-integer-overflow-bug-discovered-in-solana-rbpf-7729717159ee"
    },
    {
      "type": "WEB",
      "url": "https://github.com/solana-labs/rbpf/blob/c14764850f0b83b58aa013248eaf6d65836c1218/src/elf.rs#L609-L630"
    },
    {
      "type": "WEB",
      "url": "https://github.com/solana-labs/rbpf/releases/tag/v0.2.17"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/solana-labs/rbpf"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-190"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"356":{
  "schema_version": "1.2.0",
  "id": "GHSA-45w3-v3g4-54pm",
  "modified": "2022-02-11T19:11:36Z",
  "published": "2022-02-11T19:11:36Z",
  "aliases": [

  ],
  "summary": "Potential segfault in SPIFFE authenticator",
  "details": "### Impact\nSeveral vulnerabilities have been reported in the `time` and `chrono` crates related to handling of calls to `localtime_r`. You can follow some of the discussions [here](https://github.com/chronotope/chrono/issues/602) and [here](https://github.com/time-rs/time/issues/293), and the associated CVE [here](https://nvd.nist.gov/vuln/detail/CVE-2020-26235). In our case, the issue with the dependency was flagged by our nightly CI build running [`cargo-audit`](https://github.com/parallaxsecond/parsec/issues/544). \n\nThe vulnerability leads to a segfault in specific circumstances - namely, when one of a number of functions in the `time` crate is called while any other thread is setting an environment variable. Given that in the case of the Parsec service this affects the SPIFFE authenticator, Parsec service users can encounter the issue only when the JWT SVID authenticator is enabled and being used. We have not undergone any manual tracing to understand if the vulnerable methods are called anywhere in our stack, however it seems reasonable to expect that if that were to be the case, the issue would lie in JWT validation (i.e. when handling the dates found within a Json Web Token). JWT validation could thus fail, bringing down the thread in which the request happens. The rest of the threads continue to work. Since the threadpool implementation that we use [continues replenishing the pool](https://docs.rs/threadpool/latest/threadpool/) when one thread panics, the impact on the service should be minimal.\n\n### Patches\nNo current patches exist as the problems lie in a number of dependencies that are not under our control (see more details [here](https://github.com/parallaxsecond/parsec/issues/544#issuecomment-1024185688)).\n\nThe issue tracking the required change in the `rust-spiffe` crate (through which the vulnerable dependencies are imported in Parsec) can be seen [here](https://github.com/maxlambrecht/rust-spiffe/issues/17). Once updates happen in our dependency chain that allow us to update beyond the vulnerable versions of `time` and `chrono`, a new version of the Parsec service will be tagged and released with the appropriate notifications.\n\n### Workarounds\nThe only complete workaround is to use a different type of authenticator with the Parsec service. \n\n### References\nAs quoted in the initial paragraph, you can find out more information:\n* in the `chrono` repo issue [here](https://github.com/chronotope/chrono/issues/602)\n* in the `time` repo issue [here](https://github.com/time-rs/time/issues/293)\n* in the official CVE report [here](https://nvd.nist.gov/vuln/detail/CVE-2020-26235)\n* in our tracking issue [here](https://github.com/parallaxsecond/parsec/issues/544)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Parsec service repo](https://github.com/parallaxsecond/parsec)\n* Email us at [cncf-parsec-maintainers@lists.cncf.io](mailto:cncf-parsec-maintainers@lists.cncf.io)\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "parsec-service"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0.8.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/parallaxsecond/parsec/security/advisories/GHSA-45w3-v3g4-54pm"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26235"
    },
    {
      "type": "WEB",
      "url": "https://github.com/chronotope/chrono/issues/602"
    },
    {
      "type": "WEB",
      "url": "https://github.com/parallaxsecond/parsec/issues/544"
    },
    {
      "type": "WEB",
      "url": "https://github.com/parallaxsecond/parsec/issues/544#issuecomment-1024185688"
    },
    {
      "type": "WEB",
      "url": "https://github.com/time-rs/time/issues/293"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/parallaxsecond/parsec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "LOW",
    "github_reviewed": true
  }
},"357":{
  "schema_version": "1.2.0",
  "id": "GHSA-qg24-8xj4-gj2h",
  "modified": "2021-08-18T20:17:28Z",
  "published": "2021-08-25T20:58:13Z",
  "aliases": [
    "CVE-2020-36433"
  ],
  "summary": "Unaligned memory allocation in chunky",
  "details": "An issue was discovered in the chunky crate through 2020-08-25 for Rust. The Chunk API does not honor an alignment requirement.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "chunky"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.3.7"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36433"
    },
    {
      "type": "WEB",
      "url": "https://github.com/aeplay/chunky/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0035.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/aeplay/chunky"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-758"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"358":{
  "schema_version": "1.2.0",
  "id": "GHSA-438g-fx34-4h9m",
  "modified": "2021-08-19T21:06:40Z",
  "published": "2021-08-25T20:48:38Z",
  "aliases": [
    "CVE-2020-35892"
  ],
  "summary": "Out of bounds read in simple-slab",
  "details": "An issue was discovered in the simple-slab crate before 0.3.3 for Rust. index() allows an out-of-bounds read.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "simple-slab"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35892"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nathansizemore/simple-slab/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0039.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nathansizemore/simple-slab"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-125"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"359":{
  "schema_version": "1.2.0",
  "id": "GHSA-rpxm-vmr7-5f5f",
  "modified": "2021-08-24T18:24:04Z",
  "published": "2021-08-25T20:59:15Z",
  "aliases": [
    "CVE-2020-36445"
  ],
  "summary": "Data races in convec",
  "details": "Affected versions of this crate unconditionally implement Send/Sync for `ConVec<T>`.\nThis allows users to insert `T` that is not Send or not Sync.\n\nThis allows users to create data races by using non-Send types like `Arc<Cell<_>>` or `Rc<_>` as `T` in `ConVec<T>`. It is also possible to create data races by using types like `Cell<_>` or `RefCell<_>` as `T` (types that are `Send` but not `Sync`).\nSuch data races can lead to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "convec"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 2.0.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36445"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0125.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/krl/convec"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-362"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"360":{
  "schema_version": "1.2.0",
  "id": "GHSA-5q2r-92f9-4m49",
  "modified": "2021-10-27T17:03:38Z",
  "published": "2021-08-25T20:56:55Z",
  "aliases": [
    "CVE-2020-15093"
  ],
  "summary": "Improper verification of signature threshold in tough",
  "details": "## Impact\n\nThe tough library, prior to 0.7.1, does not properly verify the uniqueness of keys in the signatures provided to meet the threshold of cryptographic signatures. It allows someone with access to a valid signing key to create multiple valid signatures in order to circumvent TUF requiring a minimum threshold of unique keys before the metadata is considered valid.\n\nAWS would like to thank Erick Tryzelaar of the Google Fuchsia Team for reporting this issue. \n\n## Patches\n\nA fix is available in version 0.7.1.\n\n## Workarounds\n\nNo workarounds to this issue are known.\n\n## References\n\nCVE-2020-6174 is assigned to the same issue in the TUF reference implementation.\n\nhttps://github.com/theupdateframework/tuf/pull/974\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-6174\n\n## For more information\n\nIf you have any questions or comments about this advisory, [contact AWS Security](https://aws.amazon.com/security/vulnerability-reporting/) at [aws-security@amazon.com](mailto:aws-security@amazon.com).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tough"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/awslabs/tough/security/advisories/GHSA-5q2r-92f9-4m49"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15093"
    },
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/tuf/pull/974"
    },
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/tuf/commit/2977188139d065ff3356c3cb4aec60c582b57e0e"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0024.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/awslabs/tough"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-347"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"361":{
  "schema_version": "1.2.0",
  "id": "GHSA-q89x-f52w-6hj2",
  "modified": "2021-08-19T21:25:19Z",
  "published": "2021-08-25T20:43:04Z",
  "aliases": [
    "CVE-2017-18587"
  ],
  "summary": "Headers containing newline characters can split messages in hyper",
  "details": "An issue was discovered in the hyper crate before 0.9.18 for Rust. It mishandles newlines in headers.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "hyper"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-18587"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2017-0002.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/hyper"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-93"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"362":{
  "schema_version": "1.2.0",
  "id": "GHSA-g7r5-x7cr-vm3v",
  "modified": "2021-08-18T17:45:15Z",
  "published": "2021-08-25T20:58:29Z",
  "aliases": [
    "CVE-2019-15548"
  ],
  "summary": "Buffer overflow and format vulnerabilities in ncurses",
  "details": "An issue was discovered in the ncurses crate for Rust. There are instr and mvwinstr buffer overflows because interaction with C functions is mishandled.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ncurses"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 5.101.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-15548"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/issues/106"
    },
    {
      "type": "WEB",
      "url": "https://github.com/jeaye/ncurses-rs/issues/172"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2019-0006.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/jeaye/ncurses-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"363":{
  "schema_version": "1.2.0",
  "id": "GHSA-qc4m-gc8r-mg8m",
  "modified": "2021-08-19T20:56:12Z",
  "published": "2021-08-25T20:48:59Z",
  "aliases": [
    "CVE-2020-35885"
  ],
  "summary": "Double free in alpm-rs",
  "details": "An issue was discovered in the alpm-rs crate through 2020-08-20 for Rust. StrcCtx performs improper memory deallocation.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "alpm-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.24"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35885"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pigeonhands/rust-arch/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0032.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/BahNahNah/rust-arch/tree/master/alpm-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"364":{
  "schema_version": "1.2.0",
  "id": "GHSA-85j6-f8j6-q26x",
  "modified": "2021-08-19T21:06:51Z",
  "published": "2021-08-25T20:48:12Z",
  "aliases": [
    "CVE-2020-35894"
  ],
  "summary": "Unaligned references in Obstack",
  "details": "An issue was discovered in the obstack crate before 0.1.4 for Rust. Unaligned references can occur.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "obstack"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35894"
    },
    {
      "type": "WEB",
      "url": "https://github.com/petertodd/rust-obstack/issues/4"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0040.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/petertodd/rust-obstack"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-706"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"365":{
  "schema_version": "1.2.0",
  "id": "GHSA-f997-8gxg-r354",
  "modified": "2021-08-18T20:18:45Z",
  "published": "2021-08-25T20:58:09Z",
  "aliases": [
    "CVE-2020-36458"
  ],
  "summary": "Data races in lexer",
  "details": "Affected versions of this crate implements Sync for ReaderResult<T, E> with the trait bound T: Send, E: Send.\n\nSince matching on the public enum ReaderResult<T, E> provides access to &T & &E, allowing data race to a non-Sync type T or E. This can result in a memory corruption when multiple threads concurrently access &T or &E.\n\nSuggested fix for the bug is change the trait bounds imposed on T & E to be T: Sync, E: Sync.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lexer"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.16"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36458"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/nathanfaucett/rs-lexer/-/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0138.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://gitlab.com/nathanfaucett/rs-lexer"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"366":{
  "schema_version": "1.2.0",
  "id": "GHSA-q948-x8rf-888m",
  "modified": "2021-08-19T21:08:17Z",
  "published": "2021-08-25T20:47:55Z",
  "aliases": [
    "CVE-2020-35865"
  ],
  "summary": "os_str_bytes relies on undefined behavior of `char::from_u32_unchecked`",
  "details": "An issue was discovered in the os_str_bytes crate before 2.0.0 for Rust. It has false expectations about char::from_u32_unchecked behavior.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "os_str_bytes"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35865"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dylni/os_str_bytes/pull/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0012.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dylni/os_str_bytes"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-704"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"367":{
  "schema_version": "1.2.0",
  "id": "GHSA-r56q-vv3c-6g9c",
  "modified": "2021-10-19T18:06:09Z",
  "published": "2021-10-19T20:16:26Z",
  "aliases": [
    "CVE-2021-41150"
  ],
  "summary": "Improper sanitization of delegated role names",
  "details": "### Impact\nThe tough library, prior to 0.12.0, does not properly sanitize delegated role names when caching a repository, or when loading a repository from the filesystem. When the repository is cached or loaded, files ending with the .json extension could be overwritten with role metadata anywhere on the system.\n\nAWS would like to thank https://github.com/jku for reporting this issue.\n\n### Patches\nA fix is available in version 0.12.0.\n\n### Workarounds\nNo workarounds to this issue are known.\n\n### References\nhttps://github.com/theupdateframework/python-tuf/security/advisories/GHSA-wjw6-2cqr-j4qr \n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tough"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.12.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/awslabs/tough/security/advisories/GHSA-r56q-vv3c-6g9c"
    },
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/python-tuf/security/advisories/GHSA-wjw6-2cqr-j4qr "
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41150"
    },
    {
      "type": "WEB",
      "url": "https://github.com/awslabs/tough/commit/1809b9bd1106d78a51fbea3071aa97a3530bac9a"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/awslabs/tough"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-22"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"368":{
  "schema_version": "1.2.0",
  "id": "GHSA-ff2r-xpwq-6whj",
  "modified": "2022-01-07T17:18:43Z",
  "published": "2022-01-06T22:12:14Z",
  "aliases": [
    "CVE-2021-45689"
  ],
  "summary": "Use of Uninitialized Resource in gfx-auxil",
  "details": "An issue was discovered in the gfx-auxil crate through 2021-01-07 for Rust. gfx_auxil::read_spirv may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "gfx-auxil"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.10.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45689"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/gfx-auxil/RUSTSEC-2021-0091.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0091.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/gfx-rs/gfx"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"369":{
  "schema_version": "1.2.0",
  "id": "GHSA-cjg2-2fjg-fph4",
  "modified": "2022-01-14T19:58:51Z",
  "published": "2022-01-14T21:03:36Z",
  "aliases": [
    "CVE-2022-21685"
  ],
  "summary": "Integer underflow in Frontier",
  "details": "### Impact\n\nA bug in Frontier's MODEXP precompile implementation can cause an integer underflow in certain conditions. This will cause a node crash for debug builds. For release builds (and production WebAssembly binaries), the impact is limited as it can only cause a normal EVM out-of-gas. It is recommended that you apply the patch as soon as possible.\n\nIf you do not use MODEXP precompile in your runtime, then you are not impacted.\n\n### Patches\n\nPatches are applied in PR #549.\n\n### Workarounds\n\nNone.\n\n### References\n\nPatch PR: #549\n\n### Credits\n\nThanks to SR-Labs for discovering the security vulnerability, and thanks to PureStake team for the patches.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Frontier repo](https://github.com/paritytech/frontier)\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "frontier"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/security/advisories/GHSA-cjg2-2fjg-fph4"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21685"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/pull/549"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/commit/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/paritytech/frontier"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-191"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"370":{
  "schema_version": "1.2.0",
  "id": "GHSA-352p-rhvq-7g78",
  "modified": "2021-08-19T18:45:49Z",
  "published": "2021-08-25T20:52:55Z",
  "aliases": [
    "CVE-2021-25904"
  ],
  "summary": "Null pointer deference in av-data",
  "details": "An issue was discovered in the av-data crate before 0.3.0 for Rust. A raw pointer is dereferenced, leading to a read of an arbitrary memory address, sometimes causing a segfault.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "av-data"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25904"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-av/rust-av/issues/136"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0007.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-av/rust-av"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-476"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"371":{
  "schema_version": "1.2.0",
  "id": "GHSA-g4rw-8m5q-6453",
  "modified": "2021-08-19T21:21:37Z",
  "published": "2021-08-25T20:45:12Z",
  "aliases": [
    "CVE-2020-25016"
  ],
  "summary": "Out of bounds access in rgb",
  "details": "A safety violation was discovered in the rgb crate before 0.8.20 for Rust, leading to (for example) dereferencing of arbitrary pointers or disclosure of uninitialized memory. This occurs because structs can be treated as bytes for read and write operations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "rgb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.8.20"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-25016"
    },
    {
      "type": "WEB",
      "url": "https://github.com/kornelski/rust-rgb/issues/35"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0029.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/kornelski/rust-rgb"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-119",
      "CWE-843"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"372":{
  "schema_version": "1.2.0",
  "id": "GHSA-jwfh-j623-m97h",
  "modified": "2022-01-07T17:12:54Z",
  "published": "2022-01-06T22:12:35Z",
  "aliases": [
    "CVE-2021-45691"
  ],
  "summary": "Use of Uninitialized Resource in messagepack-rs",
  "details": "An issue was discovered in the messagepack-rs crate through 2021-01-26 for Rust. deserialize_string may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "messagepack-rs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.8.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45691"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/messagepack-rs/RUSTSEC-2021-0092.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0092.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/otake84/messagepack-rs"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"373":{
  "schema_version": "1.2.0",
  "id": "GHSA-vj62-g63v-f8mf",
  "modified": "2021-10-13T17:34:31Z",
  "published": "2021-10-13T18:53:38Z",
  "aliases": [
    "CVE-2021-41138"
  ],
  "summary": "Validity check missing in Frontier",
  "details": "### Impact\n\nIn the newly introduced signed Frontier-specific extrinsic for `pallet-ethereum`, a large part of transaction validation logic was only called in transaction pool validation, but not in block execution. Malicious validators can take advantage of this to put invalid transactions into a block.\n\nThe attack is limited in that the signature is always validated, and the majority of the validation is done again in the subsequent `pallet-evm` execution logic. However, do note that a chain ID replay attack was possible. In addition, spamming attacks are of main concerns, while they are limited by Substrate block size limits and other factors.\n\n### Patches\n\nThe issue is patched in commit 146bb48849e5393004be5c88beefe76fdf009aba.\n\n### References\n\nPatch PR: https://github.com/paritytech/frontier/pull/495\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [Frontier repo](https://github.com/paritytech/frontier/issues)\n\n### Special thanks\n\nSpecial thanks to @librelois, @nanocryk and the Moonbeam team for reporting and fixing this security vulnerability.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "frontier"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.0"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/security/advisories/GHSA-vj62-g63v-f8mf"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41138"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/pull/495"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/pull/497"
    },
    {
      "type": "WEB",
      "url": "https://github.com/paritytech/frontier/commit/146bb48849e5393004be5c88beefe76fdf009aba"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/paritytech/frontier"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-20"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"374":{
  "schema_version": "1.2.0",
  "id": "GHSA-x3r5-q6mj-m485",
  "modified": "2021-10-19T18:04:34Z",
  "published": "2021-10-19T20:16:15Z",
  "aliases": [
    "CVE-2021-41149"
  ],
  "summary": "Improper sanitization of target names",
  "details": "### Impact\nThe tough library, prior to 0.12.0, does not properly sanitize target names when caching a repository, or when saving specific targets to an output directory. When targets are cached or saved, files could be overwritten with arbitrary content anywhere on the system.\n\nAWS would like to thank https://github.com/jku for reporting this issue.\n\n### Patches\nA fix is available in version 0.12.0.\n\n### Workarounds\nNo workarounds to this issue are known.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tough"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.12.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/awslabs/tough/security/advisories/GHSA-x3r5-q6mj-m485"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41149"
    },
    {
      "type": "WEB",
      "url": "https://github.com/awslabs/tough/commit/1809b9bd1106d78a51fbea3071aa97a3530bac9a"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/awslabs/tough"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-22"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"375":{
  "schema_version": "1.2.0",
  "id": "GHSA-hv87-47h9-jcvq",
  "modified": "2021-08-19T21:24:44Z",
  "published": "2021-08-25T20:43:13Z",
  "aliases": [
    "CVE-2018-20993"
  ],
  "summary": "Uncontrolled recursion in rust-yaml",
  "details": "An issue was discovered in the yaml-rust crate before 0.4.1 for Rust. There is uncontrolled recursion during deserialization.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "yaml-rust"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-20993"
    },
    {
      "type": "WEB",
      "url": "https://github.com/chyh1990/yaml-rust/pull/109"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2018-0006.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/chyh1990/yaml-rust"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-674"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"376":{
  "schema_version": "1.2.0",
  "id": "GHSA-fjr6-hm39-4cf9",
  "modified": "2021-08-19T18:46:23Z",
  "published": "2021-08-25T20:52:50Z",
  "aliases": [
    "CVE-2021-25906"
  ],
  "summary": "Double free in basic_dsp_matrix",
  "details": "An issue was discovered in the basic_dsp_matrix crate before 0.9.2 for Rust. When a TransformContent panic occurs, a double drop can be performed.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "basic_dsp_matrix"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.9.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-25906"
    },
    {
      "type": "WEB",
      "url": "https://github.com/liebharc/basic_dsp/issues/47"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0009.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/liebharc/basic_dsp"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"377":{
  "schema_version": "1.2.0",
  "id": "GHSA-g78p-g85h-q6ww",
  "modified": "2021-08-24T18:31:50Z",
  "published": "2021-08-25T20:57:12Z",
  "aliases": [
    "CVE-2020-36448"
  ],
  "summary": "Data races in cache",
  "details": "An issue was discovered in the cache crate through 2020-11-24 for Rust. \nAffected versions of this crate unconditionally implement Send/Sync for `Cache<K>`.\nThis allows users to insert `K` that is not Send or not Sync.\n\nThis allows users to create data races by using non-Send types like `Arc<Cell<T>>` or `Rc<T>` as `K` in `Cache<K>`. It is also possible to create data races by using types like `Cell<T>` or `RefCell<T>` (types that are `Send` but not `Sync`).\nSuch data races can lead to memory corruption.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cache"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.2.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36448"
    },
    {
      "type": "WEB",
      "url": "https://github.com/krl/cache/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0128.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/krl/cache"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-77"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"378":{
  "schema_version": "1.2.0",
  "id": "GHSA-qwvx-c8j7-5g75",
  "modified": "2022-01-07T17:40:42Z",
  "published": "2022-01-06T22:09:19Z",
  "aliases": [
    "CVE-2021-45703"
  ],
  "summary": "Use of Uninitialized Resource in tectonic_xdv",
  "details": "An issue was discovered in the tectonic_xdv crate before 0.1.12 for Rust. XdvParser::<T>::process may read from uninitialized memory locations.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tectonic_xdv"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.12"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45703"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/tectonic_xdv/RUSTSEC-2021-0112.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0112.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tectonic-typesetting/tectonic/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true
  }
},"379":{
  "schema_version": "1.2.0",
  "id": "GHSA-82hm-vh7g-hrh9",
  "modified": "2021-09-09T17:55:10Z",
  "published": "2021-08-25T21:01:25Z",
  "aliases": [

  ],
  "summary": "Partial read is incorrect in molecule",
  "details": "### Impact\n\nAnyone who uses `total_size(..)` function to partial read the length of any `FixVec` will get an incorrect result, due to an incorrect implementation. This has been resolved in the 0.7.2 release.\n\n### Workarounds\n\nIf you already have the whole `FixVec` `A`, you can use `A.as_slice().len()` to get the total size of the `FixVec`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- [Open an issue to ask use directly](https://github.com/nervosnetwork/molecule/issues/new).",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "molecule"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.7.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/nervosnetwork/molecule/security/advisories/GHSA-82hm-vh7g-hrh9"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nervosnetwork/molecule/pull/49"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/nervosnetwork/molecule"
    }
  ],
  "database_specific": {
    "cwe_ids": [

    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"380":{
  "schema_version": "1.2.0",
  "id": "GHSA-qgwf-r2jj-2ccv",
  "modified": "2021-08-18T21:16:38Z",
  "published": "2021-08-25T20:56:09Z",
  "aliases": [
    "CVE-2020-36464"
  ],
  "summary": "Use after free in heapless",
  "details": "An issue was discovered in the heapless crate before 0.6.1 for Rust. The IntoIter Clone implementation clones an entire underlying Vec without considering whether it has already been partially consumed.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "heapless"
      },
      "ecosystem_specific": {
        "affected_functions": [
          "heapless::vec::IntoIter::clone"
        ]
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36464"
    },
    {
      "type": "WEB",
      "url": "https://github.com/japaric/heapless/issues/181"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0145.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/japaric/heapless"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"381":{
  "schema_version": "1.2.0",
  "id": "GHSA-x76r-966h-5qv9",
  "modified": "2022-01-07T16:19:25Z",
  "published": "2022-01-06T22:15:56Z",
  "aliases": [
    "CVE-2021-45680"
  ],
  "summary": "Out-of-bounds Write in vec-const",
  "details": "An issue was discovered in the vec-const crate before 2.0.0 for Rust. It tries to construct a Vec from a pointer to a const slice, leading to memory corruption.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "vec-const"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "2.0.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-45680"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/vec-const/RUSTSEC-2021-0082.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0082.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Eolu/vec-const/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"382":{
  "schema_version": "1.2.0",
  "id": "GHSA-8892-84wf-cg8f",
  "modified": "2021-08-06T18:04:55Z",
  "published": "2021-08-25T21:00:16Z",
  "aliases": [

  ],
  "summary": "SyncChannel<T> can move 'T: !Send' to other threads",
  "details": "Affected versions of this crate unconditionally implement Send/Sync for `SyncChannel<T>`.\n`SyncChannel<T>` doesn't provide access to `&T` but merely serves as a channel that consumes and returns owned `T`.\n\nUsers can create UB in safe Rust by sending `T: !Send` to other threads with `SyncChannel::send/recv` APIs. Using `T = Arc<Cell<_>` allows to create data races (which can lead to memory corruption), and using `T = MutexGuard<T>` allows to unlock a mutex from a thread that didn't lock the mutex.\n",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "signal-simple"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.1"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/kitsuneninetails/signal-rust/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0126.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/kitsuneninetails/signal-rust/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"383":{
  "schema_version": "1.2.0",
  "id": "GHSA-9cg2-2j2h-59v9",
  "modified": "2021-08-19T20:53:48Z",
  "published": "2021-08-25T20:49:11Z",
  "aliases": [
    "CVE-2020-35897"
  ],
  "summary": "Data races in atom",
  "details": "An issue was discovered in the atom crate before 0.3.6 for Rust. An unsafe Send implementation allows a cross-thread data race.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "atom"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.3.6"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-35897"
    },
    {
      "type": "WEB",
      "url": "https://github.com/slide-rs/atom/issues/13"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0044.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/slide-rs/atom"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"384":{
  "schema_version": "1.2.0",
  "id": "GHSA-f3fg-5j9p-vchc",
  "modified": "2021-06-01T19:35:31Z",
  "published": "2021-08-25T21:01:41Z",
  "aliases": [
    "CVE-2021-31153"
  ],
  "summary": "File exposure in pleaser",
  "details": "pleaser before 0.4 allows a local unprivileged attacker to gain knowledge about the existence of files or directories in privileged locations via the search_path function, the --check option, or the -d option.",
  "severity": [

  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pleaser"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31153"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/pleaser"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/edneville/please/-/tree/master/src/bin"
    },
    {
      "type": "WEB",
      "url": "http://www.openwall.com/lists/oss-security/2021/05/18/1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-200",
      "CWE-668"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"385":{
  "schema_version": "1.2.0",
  "id": "GHSA-6wj2-g87r-pm62",
  "modified": "2021-08-18T21:33:18Z",
  "published": "2021-08-25T20:55:43Z",
  "aliases": [
    "CVE-2021-38186"
  ],
  "summary": "Cross-site Scripting in comrak",
  "details": "An issue was discovered in the comrak crate before 0.10.1 for Rust. It mishandles & characters, leading to XSS via &# HTML entities.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "comrak"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.10.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-38186"
    },
    {
      "type": "WEB",
      "url": "https://github.com/kivikakk/comrak/releases/tag/0.10.1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0063.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/kivikakk/comrak"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-79"
    ],
    "severity": "MODERATE",
    "github_reviewed": true
  }
},"386":{
  "schema_version": "1.2.0",
  "id": "GHSA-9f5r-vqm5-m342",
  "modified": "2021-08-19T17:44:22Z",
  "published": "2021-08-25T20:53:16Z",
  "aliases": [
    "CVE-2021-26952"
  ],
  "summary": "Use of Uninitialized Resource in ms3d",
  "details": "An issue was discovered in the ms3d crate before 0.1.3 for Rust. It might allow attackers to obtain sensitive information from uninitialized memory locations via IoReader::read.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ms3d"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.1.3"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26952"
    },
    {
      "type": "WEB",
      "url": "https://github.com/andrewhickman/ms3d/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0016.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/andrewhickman/ms3d"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-908"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"387":{
  "schema_version": "1.2.0",
  "id": "GHSA-9frf-r7c7-j2vg",
  "modified": "2021-08-19T17:15:11Z",
  "published": "2021-08-25T20:54:14Z",
  "aliases": [
    "CVE-2021-29939"
  ],
  "summary": "Out of bounds write in stackvector",
  "details": "An issue was discovered in the stackvector crate before 1.0.9 for Rust. There is an out-of-bounds write in StackVec::extend if size_hint provides certain anomalous data.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "stackvector"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "1.0.9"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29939"
    },
    {
      "type": "WEB",
      "url": "https://github.com/Alexhuszagh/rust-stackvector/issues/2"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0048.html"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Alexhuszagh/rust-stackvector"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-787"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"388":{
  "schema_version": "1.2.0",
  "id": "GHSA-jh37-772x-4hpw",
  "modified": "2021-08-24T19:12:12Z",
  "published": "2021-08-25T21:01:52Z",
  "aliases": [
    "CVE-2021-31996"
  ],
  "summary": "Double free in algorithmica",
  "details": "An issue was discovered in the algorithmica crate through 2021-03-07 for Rust. In the affected versions of this crate, `merge_sort::merge()` wildly duplicates and drops ownership of `T` without guarding against double-free. Due to such implementation, simply invoking `merge_sort::merge()` on `Vec<T: Drop>` can cause **double free** bugs.\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "algorithmica"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 0.1.8"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31996"
    },
    {
      "type": "WEB",
      "url": "https://github.com/AbrarNitk/algorithmica/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0053.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-415"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
},"389":{
  "schema_version": "1.2.0",
  "id": "GHSA-pp74-39w2-v4w9",
  "modified": "2021-06-08T17:14:10Z",
  "published": "2021-08-25T21:01:44Z",
  "aliases": [
    "CVE-2021-31154"
  ],
  "summary": "Permissions bypass in pleaser",
  "details": "pleaseedit in pleaser before 0.4 uses predictable temporary filenames in /tmp and the target directory. This allows a local attacker to gain full root privileges by staging a symlink attack.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "pleaser"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              ">=": "0","<": "0.4"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-31154"
    },
    {
      "type": "WEB",
      "url": "https://crates.io/crates/pleaser"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/edneville/please"
    },
    {
      "type": "WEB",
      "url": "https://gitlab.com/edneville/please/-/tree/master/src/bin"
    },
    {
      "type": "WEB",
      "url": "https://www.openwall.com/lists/oss-security/2021/05/18/1"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-340",
      "CWE-59"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
}
}
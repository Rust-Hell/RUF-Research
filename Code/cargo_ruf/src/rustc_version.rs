use std::collections::HashMap;

pub fn get_nightly_versions() -> HashMap<usize, String> {
    let mut versions = HashMap::new();
    versions.insert(0 + 2, "2015-05-16".to_string());
    versions.insert(1 + 2, "2015-06-26".to_string());
    versions.insert(2 + 2, "2015-08-08".to_string());
    versions.insert(3 + 2, "2015-09-18".to_string());
    versions.insert(4 + 2, "2015-10-30".to_string());
    versions.insert(5 + 2, "2015-12-10".to_string());
    versions.insert(6 + 2, "2016-01-22".to_string());
    versions.insert(7 + 2, "2016-03-04".to_string());
    versions.insert(8 + 2, "2016-04-15".to_string());
    versions.insert(9 + 2, "2016-05-27".to_string());
    versions.insert(10 + 2, "2016-07-08".to_string());
    versions.insert(11 + 2, "2016-08-19".to_string());
    versions.insert(12 + 2, "2016-10-01".to_string());
    versions.insert(13 + 2, "2016-11-12".to_string());
    versions.insert(14 + 2, "2016-12-23".to_string());
    versions.insert(15 + 2, "2017-02-03".to_string());
    versions.insert(16 + 2, "2017-03-17".to_string());
    versions.insert(17 + 2, "2017-04-28".to_string());
    versions.insert(18 + 2, "2017-06-09".to_string());
    versions.insert(19 + 2, "2017-07-20".to_string());
    versions.insert(20 + 2, "2017-09-01".to_string());
    versions.insert(21 + 2, "2017-10-12".to_string());
    versions.insert(22 + 2, "2017-11-23".to_string());
    versions.insert(23 + 2, "2018-01-04".to_string());
    versions.insert(24 + 2, "2018-02-15".to_string());
    versions.insert(25 + 2, "2018-03-29".to_string());
    versions.insert(26 + 2, "2018-05-10".to_string());
    versions.insert(27 + 2, "2018-06-21".to_string());
    versions.insert(28 + 2, "2018-08-02".to_string());
    versions.insert(29 + 2, "2018-09-13".to_string());
    versions.insert(30 + 2, "2018-10-25".to_string());
    versions.insert(31 + 2, "2018-12-06".to_string());
    versions.insert(32 + 2, "2019-01-18".to_string());
    versions.insert(33 + 2, "2019-03-01".to_string());
    versions.insert(34 + 2, "2019-04-12".to_string());
    versions.insert(35 + 2, "2019-05-23".to_string());
    versions.insert(36 + 2, "2019-07-04".to_string());
    versions.insert(37 + 2, "2019-08-15".to_string());
    versions.insert(38 + 2, "2019-09-26".to_string());
    versions.insert(39 + 2, "2019-11-07".to_string());
    versions.insert(40 + 2, "2019-12-19".to_string());
    versions.insert(41 + 2, "2020-01-31".to_string());
    versions.insert(42 + 2, "2020-03-12".to_string());
    versions.insert(43 + 2, "2020-04-23".to_string());
    versions.insert(44 + 2, "2020-06-05".to_string());
    versions.insert(45 + 2, "2020-07-16".to_string());
    versions.insert(46 + 2, "2020-08-27".to_string());
    versions.insert(47 + 2, "2020-10-08".to_string());
    versions.insert(48 + 2, "2020-11-19".to_string());
    versions.insert(49 + 2, "2020-12-31".to_string());
    versions.insert(50 + 2, "2021-02-11".to_string());
    versions.insert(51 + 2, "2021-03-25".to_string());
    versions.insert(52 + 2, "2021-05-06".to_string());
    versions.insert(53 + 2, "2021-06-17".to_string());
    versions.insert(54 + 2, "2021-07-29".to_string());
    versions.insert(55 + 2, "2021-09-09".to_string());
    versions.insert(56 + 2, "2021-10-21".to_string());
    versions.insert(57 + 2, "2021-12-02".to_string());
    versions.insert(58 + 2, "2021-12-31".to_string());
    versions.insert(59 + 2, "2022-01-31".to_string());
    versions.insert(60 + 2, "2022-03-04".to_string());
    versions.insert(61 + 2, "2022-04-15".to_string());
    versions.insert(62 + 2, "2022-05-27".to_string());
    versions.insert(63 + 2, "2022-07-08".to_string());
    versions.insert(64 + 2, "2022-08-19".to_string());
    versions.insert(65 + 2, "2022-10-01".to_string());
    versions.insert(66 + 2, "2022-11-12".to_string());
    versions.insert(67 + 2, "2022-12-23".to_string());
    versions.insert(68 + 2, "2023-02-03".to_string());
    

    versions
}